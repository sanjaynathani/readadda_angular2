var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.593,1,1.08]],["body/components/AppComponent.html",[0,1.056,1,1.846,2,0.323,3,0.28,4,1.764,5,1.764,6,0.238,7,2.801,8,1.411,9,2.663,10,1.609,11,2.926,12,2.663,13,4.494,14,2.362,15,5.067,16,0.571,17,1.196,18,2.844,19,0.893,20,3.356,21,2.18,22,1.099,23,3.356,24,0.893,25,0.032,26,1.379,27,0.82,28,0.893,29,3.262,30,3.356,31,0.893,32,1.473,33,0.765,34,0.517,35,1.945,36,0.323,37,0.198,38,1.945,39,1.764,40,2.436,41,2.801,42,1.945,43,2.801,44,1.144,45,2.362,46,2.362,47,1.665,48,2.844,49,1.764,50,1.764,51,1.054,52,1.764,53,1.243,54,1.764,55,1.764,56,1.144,57,1.764,58,1.144,59,1.144,60,1.609,61,1.144,62,1.609,63,1.764,64,0.022,65,0.022]],["title/modules/AppModule.html",[66,0.539,67,2.042]],["body/modules/AppModule.html",[1,2.039,2,0.247,3,0.214,6,0.182,21,2.148,25,0.033,33,1.073,34,0.395,35,1.487,36,0.423,37,0.151,44,0.875,53,1.976,61,1.819,64,0.018,65,0.018,66,0.634,67,4.033,68,1.23,69,2.543,70,2.306,71,1.925,72,2.142,73,2.142,74,2.142,75,2.142,76,2.142,77,3.091,78,2.556,79,1.819,80,2.16,81,1.487,82,1.348,83,2.566,84,3.726,85,3.662,86,2.704,87,2.566,88,2.142,89,3.726,90,2.566,91,2.16,92,0.806,93,3.726,94,1.862,95,2.704,96,3.11,97,1.23,98,1.501,99,2.566,100,2.142,101,1.862,102,2.566,103,1.487,104,2.566,105,1.654,106,2.142,107,2.566,108,1.862,109,3.11,110,1.862,111,1.654,112,1.654,113,4.387,114,3.726,115,4.387,116,4.387,117,4.387,118,1.862,119,3.726,120,2.142,121,1.862]],["title/modules/AppRoutingModule.html",[66,0.539,77,1.836]],["body/modules/AppRoutingModule.html",[1,1.362,2,0.385,3,0.333,6,0.283,25,0.032,33,1.036,34,0.615,51,1.254,60,1.914,64,0.025,65,0.025,66,0.68,77,2.315,78,2.412,79,1.362,91,2.315,92,1.254,98,2.027,100,3.333,106,3.333,122,3.993,123,2.208,124,3.993,125,1.752,126,5.032,127,3.353,128,3.993,129,4.2,130,3.993,131,3.993,132,5.509,133,3.993,134,3.993,135,2.899,136,3.993,137,3.993,138,3.993,139,2.099]],["title/injectables/AuthGuard.html",[78,1.518,140,1.173]],["body/injectables/AuthGuard.html",[2,0.33,3,0.286,6,0.243,8,1.075,16,0.583,17,1.212,19,1.212,22,1.113,24,1.212,25,0.032,26,1.113,27,1.113,28,1.212,31,1.361,33,0.928,34,0.527,36,0.33,37,0.202,64,0.022,65,0.022,78,2.183,79,1.992,92,1.075,105,2.206,135,4.123,139,1.799,140,1.896,141,2.857,142,2.206,143,3.455,144,3.423,145,3.423,146,5.455,147,5.117,148,5.455,149,3.423,150,4.554,151,3.299,152,4.554,153,2.64,154,2.206,155,1.43,156,3.423,157,3.306,158,3.423,159,3.423,160,3.423,161,1.799]],["title/injectables/Authentication.html",[79,1.08,140,1.173]],["body/injectables/Authentication.html",[2,0.387,3,0.335,6,0.285,16,0.684,19,1.543,22,1.417,25,0.032,27,1.351,33,0.684,34,0.619,36,0.387,37,0.237,64,0.025,65,0.025,79,1.723,140,2.047,153,3.203,162,3.356,163,1.872,164,3.047,165,4.209,166,4.209,167,5.053,168,2.456,169,4.02,170,4.02,171,3.356,172,3.356]],["title/components/AuthenticationComponent.html",[0,0.593,51,0.995]],["body/components/AuthenticationComponent.html",[0,0.828,1,0.548,2,0.155,3,0.134,4,0.845,5,0.845,6,0.114,8,0.817,9,1.722,10,0.771,11,2.399,12,0.845,14,0.845,16,0.274,17,0.692,18,1.978,19,0.692,21,1.516,22,1.397,24,0.428,25,0.033,26,1.138,27,0.92,28,0.428,29,2.378,31,1.399,32,1.813,33,0.792,34,0.248,35,0.932,36,0.155,37,0.095,39,0.845,41,1.343,44,0.548,45,1.367,46,1.367,47,0.964,48,1.978,49,0.845,50,0.845,51,1.182,52,0.845,53,0.596,54,0.845,55,0.845,56,0.548,57,0.845,58,0.548,59,0.548,60,0.771,61,0.548,62,0.771,63,0.845,64,0.013,65,0.013,79,1.908,92,0.505,97,0.771,105,1.037,108,1.167,139,2.324,142,1.037,143,2.698,155,1.389,157,1.167,161,2.702,163,0.964,164,1.978,165,3.633,166,3,171,1.343,173,1.343,174,1.508,175,2.601,176,1.247,177,2.395,178,3.517,179,3.763,180,4.421,181,3.378,182,3.141,183,4.845,184,5.141,185,3.763,186,3.763,187,3.763,188,4.654,189,2.601,190,1.608,191,1.608,192,2.126,193,3.763,194,2.378,195,3.141,196,1.608,197,2.601,198,2.601,199,2.171,200,1.608,201,1.608,202,1.608,203,1.608,204,1.608,205,1.804,206,1.608,207,1.608,208,1.608,209,3,210,1.608,211,1.608,212,1.608,213,1.608,214,1.608,215,1.608,216,1.608,217,1.343,218,0.932,219,1.037,220,1.343,221,1.343,222,1.608,223,1.343,224,1.343,225,3.276,226,3.276,227,2.601,228,1.608,229,1.343,230,1.608,231,1.343,232,1.608,233,1.409,234,1.608,235,2.601,236,1.608,237,1.608,238,3.276,239,1.608,240,2.601,241,1.608,242,1.608,243,2.601,244,1.608,245,1.608,246,1.608,247,1.608,248,1.608,249,1.608,250,1.608,251,1.608,252,1.608,253,3.763,254,2.601,255,2.601,256,2.601,257,2.601,258,2.601,259,2.601,260,2.601]],["title/modules/AuthenticationModule.html",[66,0.539,103,1.836]],["body/modules/AuthenticationModule.html",[2,0.332,3,0.287,6,0.244,21,1.387,25,0.033,33,1.07,34,0.53,36,0.44,37,0.203,44,1.174,51,1.837,64,0.023,65,0.023,66,0.778,68,1.65,69,2.975,70,1.81,71,2.006,78,2.191,79,1.559,80,2.65,81,1.996,82,1.81,95,3.318,96,3.816,97,1.65,98,1.841,103,3.514,118,2.499,261,2.874,262,2.874,263,2.874,264,3.391,265,3.443,266,4.571,267,3.443,268,4.571,269,4.571,270,4.571,271,2.874,272,3.443,273,3.318,274,2.219,275,3.443]],["title/modules/AuthenticationRoutingModule.html",[66,0.539,264,1.836]],["body/modules/AuthenticationRoutingModule.html",[0,0.79,2,0.406,3,0.352,6,0.299,25,0.033,33,1.004,34,0.65,36,0.502,37,0.249,51,1.635,64,0.026,65,0.026,66,0.718,91,3.018,92,1.325,98,2.098,123,2.285,125,1.851,127,2.445,264,3.018,271,3.521,276,4.218,277,4.218,278,4.218]],["title/injectables/AuthenticationService.html",[21,1.276,140,1.173]],["body/injectables/AuthenticationService.html",[2,0.199,3,0.172,6,0.146,16,0.351,17,0.842,19,0.842,21,1.275,22,1.292,24,1.308,25,0.033,26,1.056,27,1.139,28,1.149,31,1.497,32,0.905,33,0.922,34,0.318,36,0.305,37,0.122,38,1.195,42,3.205,64,0.021,65,0.016,79,1.746,94,1.497,125,0.905,139,1.663,140,1.427,142,1.329,151,1.329,153,1.195,154,1.329,155,1.737,157,3.716,161,2.27,163,1.172,164,2.449,165,4.014,166,4.014,168,2.413,172,1.721,178,2.297,181,3.382,192,0.905,205,0.988,223,1.721,229,3.606,231,3.215,279,1.329,280,4.319,281,2.642,282,3.165,283,3.606,284,3.215,285,3.606,286,3.165,287,3.165,288,3.215,289,2.062,290,3.165,291,2.062,292,3.165,293,2.062,294,3.165,295,2.062,296,2.062,297,3.165,298,2.062,299,0.905,300,1.721,301,1.721,302,1.721,303,1.721,304,1.721,305,2.062,306,1.721,307,4.659,308,3.851,309,2.062,310,2.062,311,2.062,312,2.062,313,2.062,314,2.062,315,1.721,316,1.721,317,2.062,318,2.062,319,2.062,320,2.062,321,2.062,322,2.062,323,2.062,324,2.062,325,3.165,326,3.165,327,2.062,328,2.062,329,3.165,330,2.062,331,2.062,332,2.062,333,2.062,334,1.195,335,1.195]],["title/directives/EmailValidatorDirective.html",[47,1.173,61,1.08]],["body/directives/EmailValidatorDirective.html",[2,0.305,3,0.264,6,0.224,8,1.355,10,1.515,11,2.069,16,0.538,17,1.148,22,1.055,24,0.841,25,0.033,26,0.773,27,1.201,28,0.841,31,1.471,33,0.735,34,0.487,36,0.416,37,0.186,47,1.821,61,1.676,62,2.069,64,0.021,65,0.021,71,2.157,97,1.515,125,1.387,139,2.269,168,2.127,192,1.894,194,4.012,209,2.295,218,2.849,334,1.832,336,2.295,337,5.281,338,3.161,339,4.316,340,5.528,341,3.161,342,4.316,343,3.161,344,2.639,345,3.161,346,4.316,347,4.316,348,2.639,349,3.603,350,4.316,351,3.161,352,2.849,353,3.161,354,4.316,355,3.161,356,3.161,357,3.161,358,3.161,359,3.161,360,3.161,361,3.161]],["title/components/LayoutComponent.html",[0,0.593,53,1.173]],["body/components/LayoutComponent.html",[0,0.903,1,0.759,2,0.215,3,0.186,4,1.171,5,1.171,6,0.158,8,1.054,9,2.122,10,1.067,11,2.654,12,1.171,14,1.171,16,0.379,17,0.893,18,2.362,19,0.592,21,1.81,22,1.436,24,0.893,25,0.032,26,1.239,27,1.099,28,0.893,29,2.93,31,1.399,32,2.115,33,0.765,34,0.343,35,1.291,36,0.215,37,0.131,39,1.171,40,2.436,42,2.605,43,1.859,44,0.759,45,1.764,46,1.764,47,1.243,48,2.362,49,1.171,50,1.171,51,0.699,52,1.171,53,1.665,54,2.122,55,1.171,56,0.759,57,1.171,58,0.759,59,0.759,60,1.067,61,0.759,62,1.067,63,1.171,64,0.017,65,0.017,79,1.954,92,0.699,98,0.897,105,1.435,121,2.93,127,1.291,142,1.435,143,3.048,153,2.34,155,1.054,161,2.663,163,1.243,174,1.945,176,1.608,177,2.605,178,3.262,181,3.262,192,1.772,205,1.935,221,1.859,283,4.517,344,3.751,362,1.859,363,3.355,364,4.493,365,4.493,366,5.258,367,3.355,368,4.493,369,3.355,370,3.355,371,2.227,372,2.227,373,2.227,374,2.227,375,2.227,376,2.227,377,2.227,378,2.227,379,2.227,380,2.227,381,2.227,382,2.227,383,1.617,384,2.227,385,2.227,386,2.227,387,3.355,388,4.493,389,4.493,390,3.355]],["title/components/ReadBoardComponent.html",[0,0.593,56,1.08]],["body/components/ReadBoardComponent.html",[0,0.883,1,0.723,2,0.204,3,0.177,4,1.115,5,1.115,6,0.15,8,1.015,9,2.059,10,1.016,11,2.618,12,1.115,14,1.115,16,0.361,17,0.86,18,2.304,19,0.564,22,1.362,24,0.86,25,0.032,26,1.215,27,1.071,28,0.86,31,1.255,32,2.07,33,0.803,34,0.327,36,0.204,37,0.125,38,1.229,39,1.699,44,0.723,45,2.059,46,1.699,47,1.198,48,2.304,49,1.115,50,1.115,51,0.666,52,1.115,53,0.786,54,1.115,55,1.115,56,1.495,57,1.115,58,0.723,59,0.723,60,1.016,61,0.723,62,1.016,63,1.115,64,0.016,65,0.016,71,1.419,92,0.666,123,1.719,125,1.923,129,3.271,143,2.997,151,1.367,154,1.367,155,1.015,161,1.699,163,1.198,168,1.578,174,1.874,177,1.874,192,1.419,205,1.55,233,1.103,391,1.77,392,2.383,393,3.233,394,3.658,395,4.383,396,4.383,397,1.959,398,3.425,399,4.383,400,3.233,401,4.383,402,2.121,403,3.658,404,3.233,405,2.699,406,2.121,407,2.121,408,2.121,409,3.233,410,2.121,411,1.578,412,2.121,413,2.121,414,2.121,415,3.233,416,2.121,417,1.539,418,1.539,419,2.699,420,3.233,421,2.121,422,2.699,423,2.121,424,2.121,425,1.77,426,3.233,427,2.121,428,2.121,429,2.121,430,2.121,431,2.121,432,2.121,433,2.121,434,3.233,435,2.121,436,2.121,437,2.121,438,2.121,439,2.121,440,3.233,441,2.121,442,2.121,443,2.121,444,2.121,445,3.233,446,3.233,447,3.233,448,3.233,449,3.233]],["title/modules/ReadBoardModule.html",[66,0.539,450,2.042]],["body/modules/ReadBoardModule.html",[2,0.338,3,0.292,6,0.249,25,0.032,33,1.036,34,0.54,36,0.446,37,0.207,44,1.195,56,2.075,58,2.005,64,0.023,65,0.023,66,0.787,68,1.679,69,3,70,1.841,71,2.271,80,2.68,81,2.031,82,1.841,98,1.863,273,3.357,274,2.258,392,2.873,418,2.543,450,4.065,451,2.924,452,2.924,453,2.924,454,2.924,455,3.407,456,3.503,457,2.924,458,3.503,459,2.924]],["title/modules/ReadBoardRoutingModule.html",[66,0.539,455,1.836]],["body/modules/ReadBoardRoutingModule.html",[0,0.952,2,0.391,3,0.339,6,0.288,25,0.033,33,1.02,34,0.625,36,0.49,37,0.24,56,1.734,58,1.734,64,0.025,65,0.025,66,0.691,91,2.948,92,1.275,98,2.049,123,2.232,125,1.782,127,2.948,411,1.636,455,2.948,457,3.39,459,3.39,460,4.061,461,4.061,462,4.061]],["title/injectables/ReadBoardService.html",[140,1.173,392,1.518]],["body/injectables/ReadBoardService.html",[2,0.252,3,0.218,6,0.186,16,0.445,17,1.005,19,0.696,22,1.353,24,1.292,25,0.032,26,1.188,27,1.188,28,1.292,31,1.508,33,0.983,34,0.403,36,0.252,37,0.154,38,1.516,64,0.019,65,0.019,94,1.899,125,1.658,140,1.643,151,1.686,154,1.686,155,1.885,163,1.4,168,1.054,177,3.112,192,1.148,205,1.254,233,0.892,281,3.154,284,3.154,285,4.055,288,4.482,299,1.148,300,2.184,301,2.184,302,2.184,303,2.184,304,2.184,315,2.184,383,1.899,392,1.811,397,0.892,398,3.897,411,1.054,417,1.899,463,2.184,464,4.858,465,4.858,466,3.778,467,2.616,468,2.616,469,2.616,470,2.616,471,2.616,472,2.743,473,2.616,474,3.778,475,2.616,476,3.778,477,2.616,478,3.778,479,2.616,480,2.616,481,2.616,482,2.616,483,2.616,484,3.778,485,3.778,486,3.778,487,3.778,488,3.154,489,3.778,490,3.778,491,4.858,492,3.778,493,3.778,494,3.778,495,3.778,496,3.778,497,3.154,498,2.616,499,1.516,500,2.616,501,2.616,502,2.616,503,1.686,504,2.616]],["title/classes/RestEndPointURL.html",[37,0.187,505,1.665]],["body/classes/RestEndPointURL.html",[2,0.283,3,0.245,6,0.208,8,1.752,16,0.5,17,1.091,19,0.781,22,1.156,24,0.781,25,0.033,26,0.718,28,0.781,31,1.554,32,2.074,36,0.493,37,0.302,64,0.02,65,0.02,155,1.288,176,2.96,233,1.612,299,2.074,335,2.74,352,1.702,397,1.001,411,1.904,499,2.378,503,2.644,505,2.485,506,1.702,507,3.009,508,3.595,509,3.595,510,2.936,511,2.936,512,3.298,513,2.936,514,2.644,515,1.702,516,2.644,517,2.156,518,1.893,519,2.644,520,1.893,521,1.183,522,1.893,523,2.644,524,1.893]],["title/interfaces/ServiceURL.html",[507,1.665,521,1.276]],["body/interfaces/ServiceURL.html",[2,0.291,3,0.252,6,0.214,8,1.708,16,0.514,17,1.112,19,0.803,22,1.173,24,0.803,25,0.033,26,0.738,28,0.803,31,1.564,36,0.499,37,0.283,64,0.021,65,0.021,155,1.313,176,2.765,233,1.636,299,2.105,335,2.78,352,1.749,397,1.029,411,1.932,499,2.423,503,2.695,505,2.197,506,1.749,507,3.032,508,3.626,509,3.626,512,3.338,514,2.695,515,1.749,516,2.695,517,2.197,518,1.945,519,2.695,520,1.945,521,1.684,522,1.945,523,2.695,524,1.945,525,3.018,526,3.018,527,3.018]],["title/interfaces/Story.html",[397,1.08,521,1.276]],["body/interfaces/Story.html",[2,0.35,3,0.303,6,0.258,16,0.618,25,0.031,27,1.515,36,0.35,64,0.023,65,0.023,163,1.754,168,2.613,397,1.614,411,2.249,472,4.5,521,1.907,528,3.03,529,5.582,530,4.659,531,5.582,532,5.582,533,5.582,534,5.582,535,5.582,536,4.659]],["title/components/StoryBoardComponent.html",[0,0.593,58,1.08]],["body/components/StoryBoardComponent.html",[0,0.967,1,0.898,2,0.254,3,0.22,4,1.384,5,1.384,6,0.187,8,1.192,9,2.34,10,1.262,11,2.659,12,1.384,14,1.384,16,0.448,17,1.01,18,2.561,19,0.701,22,1.316,24,0.701,25,0.032,26,1.263,27,1.191,28,0.701,31,1.01,32,1.666,33,0.879,34,0.406,36,0.254,37,0.155,38,1.526,39,1.995,44,0.898,45,1.995,46,1.995,47,1.406,48,2.561,49,1.384,50,1.384,51,0.827,52,1.384,53,0.976,54,1.384,55,1.384,56,0.898,57,1.384,58,1.662,59,0.898,60,1.262,61,0.898,62,1.262,63,1.384,64,0.019,65,0.019,71,1.666,92,1.192,143,3.215,155,1.192,163,1.406,168,1.793,174,2.201,177,2.201,392,2.579,394,4.067,397,2.002,398,3.75,403,4.492,405,3.716,411,1.963,417,1.911,418,1.911,419,2.198,422,2.198,425,2.198,472,3.232,537,2.198,538,3.796,539,2.633,540,3.796,541,2.633,542,2.633,543,2.633,544,2.633,545,2.633,546,2.633,547,2.633,548,3.796,549,2.633,550,2.633,551,2.633]],["title/classes/TestURL.html",[37,0.187,517,1.665]],["body/classes/TestURL.html",[2,0.283,3,0.245,6,0.208,8,1.752,16,0.5,17,1.091,19,0.781,22,1.156,24,0.781,25,0.033,26,0.718,28,0.781,31,1.554,36,0.493,37,0.302,64,0.02,65,0.02,155,1.288,168,1.904,176,2.96,233,1.612,299,2.074,335,2.74,352,1.702,397,1.001,411,1.904,499,2.378,503,2.644,505,2.156,506,1.702,507,3.009,508,3.595,509,3.595,512,3.298,514,2.644,515,1.702,516,2.644,517,2.485,518,1.893,519,2.644,520,1.893,521,1.183,522,1.893,523,2.644,524,1.893,552,2.936,553,2.936,554,2.936]],["title/classes/URLMapper.html",[37,0.187,299,1.39]],["body/classes/URLMapper.html",[2,0.282,3,0.244,6,0.207,8,1.688,16,0.497,17,1.088,19,1.254,22,1.248,25,0.033,27,0.999,31,1.481,36,0.492,37,0.301,64,0.02,65,0.02,155,1.749,163,1.514,176,2.74,233,1.608,299,2.444,335,2.733,352,1.694,397,0.997,411,1.647,499,2.37,505,2.149,506,1.694,507,3.218,508,3.039,509,3.039,512,3.039,514,3.589,515,2.96,516,2.635,517,2.149,518,3.291,519,2.635,520,1.884,521,1.177,522,1.884,523,2.635,524,1.884,555,4.088,556,2.922,557,2.922]],["title/components/WriteBoardComponent.html",[0,0.593,59,1.08]],["body/components/WriteBoardComponent.html",[0,0.876,1,0.711,2,0.201,3,0.174,4,1.095,5,1.095,6,0.148,8,1.002,9,2.037,10,0.999,11,2.604,12,1.095,14,1.095,16,0.355,17,0.849,18,2.283,19,1.031,22,1.399,24,1.155,25,0.032,26,1.296,27,0.948,28,1.155,31,1.314,32,2.167,33,0.84,34,0.321,35,1.208,36,0.201,37,0.123,39,1.095,44,0.711,45,2.595,46,1.677,47,1.182,48,2.283,49,1.095,50,1.095,51,0.654,52,1.095,53,0.772,54,1.095,55,1.095,56,0.711,57,1.095,58,0.711,59,1.481,60,2.082,61,0.711,62,0.999,63,1.095,64,0.016,65,0.016,92,0.654,97,0.999,108,1.513,111,3.574,112,2.799,135,1.513,155,1.217,163,1.182,164,1.095,168,1.285,174,1.849,176,2.604,182,3.625,192,1.701,194,1.513,205,1.858,209,3.398,217,1.739,218,1.208,219,1.343,220,1.739,224,1.739,233,1.088,397,1.088,515,1.208,530,3.908,536,2.663,558,1.739,559,3.19,560,4.681,561,4.343,562,4.343,563,4.343,564,3.876,565,3.19,566,3.19,567,3.19,568,2.084,569,2.084,570,2.084,571,2.084,572,2.084,573,3.19,574,2.084,575,3.19,576,2.084,577,3.19,578,2.084,579,2.084,580,2.084,581,3.19,582,2.084,583,3.235,584,3.19,585,3.19,586,2.084,587,2.084,588,2.084,589,2.084,590,3.19,591,2.084,592,2.084,593,2.084,594,3.19,595,2.084,596,2.084,597,3.19,598,1.739,599,3.19,600,3.19,601,3.19,602,3.19]],["title/modules/WriteBoardModule.html",[66,0.539,603,2.042]],["body/modules/WriteBoardModule.html",[2,0.366,3,0.317,6,0.27,25,0.032,33,1.054,34,0.586,36,0.47,37,0.224,44,1.297,59,2.05,64,0.024,65,0.024,66,0.83,68,1.823,69,3.122,70,1.999,71,2.141,80,2.828,81,2.205,82,1.999,95,3.541,97,1.823,98,1.965,109,4.072,110,2.761,111,2.451,112,2.451,273,3.541,274,2.451,603,3.99,604,3.175,605,3.175,606,3.175,607,3.484,608,3.803,609,3.175,610,3.803]],["title/modules/WriteBoardRoutingModule.html",[66,0.539,607,1.836]],["body/modules/WriteBoardRoutingModule.html",[0,0.79,2,0.406,3,0.352,6,0.299,25,0.033,33,1.004,34,0.65,36,0.502,37,0.249,59,1.776,64,0.026,65,0.026,66,0.718,91,3.018,92,1.325,98,2.098,123,2.285,125,1.851,127,2.445,607,3.018,609,3.521,611,4.218,612,4.218,613,4.218]],["title/coverage.html",[614,3.607]],["body/coverage.html",[0,1.071,1,1.087,6,0.226,7,2.66,21,1.284,25,0.032,27,0.779,37,0.291,42,1.847,47,1.18,51,1.001,53,1.18,56,1.087,58,1.087,59,1.087,61,1.087,64,0.021,65,0.021,78,1.527,79,1.087,101,3.15,140,1.963,141,2.66,162,2.66,164,1.675,173,2.66,218,1.847,219,2.054,233,1.087,279,3.181,299,1.398,334,2.515,336,3.15,362,2.66,391,2.66,392,1.527,397,1.087,463,2.66,505,1.675,506,3.071,507,1.675,517,1.675,521,1.748,528,2.66,537,2.66,558,2.66,614,2.66,615,3.186,616,3.186,617,3.186,618,6.467,619,4.935,620,4.339,621,4.935,622,3.186,623,3.186,624,3.186,625,3.186,626,3.186,627,3.186,628,3.186,629,5.719,630,3.846,631,2.66,632,3.186,633,2.66,634,2.66,635,3.186,636,3.186]],["title/dependencies.html",[68,1.826,637,2.645]],["body/dependencies.html",[25,0.033,34,0.575,64,0.024,65,0.024,68,1.789,70,1.962,85,4.023,86,3.498,88,3.115,92,1.172,97,1.789,110,2.709,111,2.406,112,2.406,118,2.709,120,3.115,121,2.709,274,2.406,306,3.115,638,3.732,639,3.732,640,3.732,641,6.364,642,3.732,643,3.115,644,4.819,645,3.115,646,3.732,647,3.732,648,3.732,649,3.732,650,3.732,651,3.732,652,3.732,653,3.732,654,3.732,655,3.732,656,3.732,657,3.732,658,3.732,659,3.732,660,3.732,661,3.732,662,3.732,663,3.732,664,3.732,665,3.732,666,3.732,667,3.732,668,3.732]],["title/miscellaneous/functions.html",[334,2.208,669,1.705]],["body/miscellaneous/functions.html",[16,0.803,24,1.255,25,0.029,26,1.153,28,1.255,64,0.028,65,0.028,164,3.115,218,3.229,279,3.04,316,3.937,334,2.734,336,3.423,348,3.937,349,3.937,669,3.04,670,4.716,671,3.937]],["title/index.html",[16,0.45,672,2.645,673,2.645]],["body/index.html",[0,0.991,3,0.306,6,0.26,25,0.024,26,0.896,40,2.659,64,0.024,65,0.024,82,1.926,233,1.249,488,3.058,497,3.975,598,3.058,643,3.058,645,4.416,674,4.762,675,5.601,676,5.29,677,3.664,678,3.664,679,6.059,680,6.059,681,3.664,682,3.664,683,3.664,684,3.664,685,3.664,686,3.664,687,3.664,688,3.664,689,5.29,690,3.664,691,5.806,692,3.664,693,3.664,694,3.664,695,3.664,696,3.664,697,3.664,698,3.058,699,4.762,700,5.806,701,4.762,702,4.762,703,3.664,704,5.601,705,3.664,706,3.664,707,3.664,708,5.29,709,3.664,710,3.664,711,3.664,712,3.664]],["title/modules.html",[66,0.736]],["body/modules.html",[25,0.026,64,0.026,65,0.026,66,0.75,67,2.839,77,2.553,86,4.345,103,2.553,264,2.553,450,2.839,455,2.553,603,2.839,607,2.553,713,5.986,714,5.986,715,6.367,716,5.986,717,5.986]],["title/overview.html",[718,3.607]],["body/overview.html",[0,0.584,1,1.985,21,1.966,25,0.032,36,0.301,37,0.184,44,1.064,47,1.156,51,1.533,53,1.808,56,1.876,58,1.665,59,1.665,61,1.665,64,0.021,65,0.021,66,0.728,67,4.099,68,1.495,69,1.809,70,1.64,71,1.369,72,2.604,73,2.604,74,2.604,75,2.604,76,2.604,77,2.829,78,2.34,79,1.665,80,2.479,81,1.809,82,1.64,103,3.294,123,1.369,140,1.156,199,2.604,261,2.604,262,2.604,263,2.604,264,2.829,383,2.265,392,2.517,450,3.921,451,2.604,452,2.604,453,2.604,454,2.604,455,2.829,521,1.257,603,3.663,604,2.604,605,2.604,606,2.604,607,2.829,718,2.604,719,3.12,720,3.12,721,3.12,722,3.12,723,3.12]],["title/routes.html",[123,1.896]],["body/routes.html",[25,0.029,64,0.029,65,0.029,123,2.227]],["title/miscellaneous/variables.html",[630,2.765,669,1.705]],["body/miscellaneous/variables.html",[16,0.593,25,0.032,27,1.343,42,2.992,64,0.023,65,0.023,101,4.26,139,1.831,153,2.67,161,1.831,192,2.265,195,2.907,205,2.474,219,3.327,233,1.188,279,2.245,583,4.899,630,2.528,631,2.907,633,2.907,634,2.907,669,2.245,671,2.907,698,3.845,724,3.483,725,3.483,726,3.483,727,3.483,728,6.209,729,4.606,730,4.606,731,4.606,732,3.483,733,3.483,734,4.606,735,4.606,736,4.606,737,4.606,738,5.712,739,3.483,740,3.483,741,4.606,742,4.606,743,4.606,744,4.606,745,3.483,746,3.483,747,3.483,748,3.483]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["0.8.19",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":383,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"overview.html":{}}}],["1.0.1",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":643,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12",{"_index":723,"title":{},"body":{"overview.html":{}}}],["2",{"_index":722,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":721,"title":{},"body":{"overview.html":{}}}],["3}(?:25[0",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":199,"title":{},"body":{"components/AuthenticationComponent.html":{},"overview.html":{}}}],["4.0.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["4][0",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["5.2.10",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["5]|2[0",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":720,"title":{},"body":{"overview.html":{}}}],["8",{"_index":719,"title":{},"body":{"overview.html":{}}}],["9",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&\\'*+/=?^_",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\\\.)+[a",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\\\[(?:(?:25[0",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_authenticationservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["_readboardservic",{"_index":405,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["_storylisturl",{"_index":464,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["abstractcontrol",{"_index":340,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["accessor",{"_index":212,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["account",{"_index":256,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["activatedrout",{"_index":403,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["activatedroute.snapshot.params['storyid",{"_index":549,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroutesnapshot",{"_index":146,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_compon",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["adda",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["adda'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["angular",{"_index":676,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/t",{"_index":267,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["angular/cli",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":274,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["angular/compil",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":488,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["app.compon",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.routing.modul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app/readboard/readboard.module#readboardmodul",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/security/authentication.module#authenticationmodul",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/writeboard/writeboard.module#writeboardmodul",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appemail",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["appmodul",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppath",{"_index":502,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["approutingmodul",{"_index":77,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":415,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["artifact",{"_index":692,"title":{},"body":{"index.html":{}}}],["auth",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth.password",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth.usernam",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authent",{"_index":79,"title":{"injectables/Authentication.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["authentication.compon",{"_index":271,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["authentication.component.html",{"_index":175,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authentication.routing.modul",{"_index":275,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":272,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationcompon",{"_index":51,"title":{"components/AuthenticationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmodul",{"_index":103,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":277,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["authenticationroutingmodul",{"_index":264,"title":{"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservic",{"_index":21,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":78,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authornam",{"_index":529,"title":{},"body":{"interfaces/Story.html":{}}}],["automat",{"_index":685,"title":{},"body":{"index.html":{}}}],["avail",{"_index":717,"title":{},"body":{"modules.html":{}}}],["beta.14",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["blur",{"_index":591,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["bodi",{"_index":431,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["body.offsetheight",{"_index":436,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":715,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":691,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/WriteBoardComponent.html":{}}}],["canactivate(next",{"_index":145,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch(this.handleerror",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["catch(this.handlestorydetailerror",{"_index":504,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["cdktablemodul",{"_index":266,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["chang",{"_index":598,"title":{},"body":{"components/WriteBoardComponent.html":{},"index.html":{}}}],["check",{"_index":711,"title":{},"body":{"index.html":{}}}],["ckeditorcont",{"_index":560,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["class",{"_index":37,"title":{"classes/RestEndPointURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":645,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":261,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":262,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_import",{"_index":263,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_readboardmodul",{"_index":451,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_declar",{"_index":452,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_import",{"_index":454,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_readboardcomponent_provid",{"_index":453,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodul",{"_index":604,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_declar",{"_index":605,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_import",{"_index":606,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["code",{"_index":687,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":273,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{}}}],["comp",{"_index":222,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["compodoc/compodoc",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["consol",{"_index":494,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.error(error",{"_index":495,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.info('auth",{"_index":171,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{}}}],["console.info('i",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{}}}],["console.info('load",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["console.info('login",{"_index":238,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["console.info('no",{"_index":244,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["console.info('stori",{"_index":421,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["console.info('valu",{"_index":353,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["console.log",{"_index":335,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["console.log('auth",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('authent",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('authguard",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('chang",{"_index":386,"title":{},"body":{"components/LayoutComponent.html":{}}}],["console.log('editor",{"_index":590,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["console.log('host",{"_index":498,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log('i",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('pass",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('queri",{"_index":545,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["console.log('quil",{"_index":594,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["console.log(data",{"_index":485,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(localstorage.getitem('token",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(this._storylisturl",{"_index":480,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(this.logindataurl",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(token",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["constructor(_authenticationservic",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_readboardservic",{"_index":402,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["constructor(activatedrout",{"_index":539,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["constructor(authent",{"_index":142,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["constructor(http",{"_index":467,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["constructor(priv",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["constructor(publ",{"_index":221,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["content",{"_index":530,"title":{},"body":{"interfaces/Story.html":{},"components/WriteBoardComponent.html":{}}}],["control",{"_index":342,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["control.valu",{"_index":351,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["core",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":614,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":255,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["createdd",{"_index":531,"title":{},"body":{"interfaces/Story.html":{}}}],["createform",{"_index":182,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["current",{"_index":596,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["data",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["declar",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["default",{"_index":205,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["depend",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":682,"title":{},"body":{"index.html":{}}}],["develop",{"_index":678,"title":{},"body":{"index.html":{}}}],["direct",{"_index":47,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":690,"title":{},"body":{"index.html":{}}}],["directori",{"_index":695,"title":{},"body":{"index.html":{}}}],["dislik",{"_index":532,"title":{},"body":{"interfaces/Story.html":{}}}],["dist",{"_index":694,"title":{},"body":{"index.html":{}}}],["do(data",{"_index":484,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["do(token",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["docheight",{"_index":434,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["document.bodi",{"_index":432,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document.getelementbyid('readlist",{"_index":433,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document.getelementbyid('readlist').offsetheight",{"_index":430,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["dynam",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["e2",{"_index":705,"title":{},"body":{"index.html":{}}}],["editor",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["editorcont",{"_index":561,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["editoropt",{"_index":562,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["email",{"_index":195,"title":{},"body":{"components/AuthenticationComponent.html":{},"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":218,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailvalidator(new",{"_index":359,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["emailvalidator(regexp",{"_index":348,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["emailvalidatordirect",{"_index":61,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enabletrac",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":704,"title":{},"body":{"index.html":{}}}],["enter",{"_index":258,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["entity/stori",{"_index":417,"title":{},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["environ",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":177,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["errormessag",{"_index":394,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["exampl",{"_index":581,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["execut",{"_index":701,"title":{},"body":{"index.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["failur",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fals",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":697,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["focu",{"_index":592,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["formbuild",{"_index":188,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol",{"_index":217,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["formcontrol(this.authentication.password",{"_index":237,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol(this.authentication.usernam",{"_index":234,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol(this.ckeditorcont",{"_index":589,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["formgroup",{"_index":209,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{}}}],["formsmodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/WriteBoardModule.html":{}}}],["full",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":334,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":707,"title":{},"body":{"index.html":{}}}],["gener",{"_index":675,"title":{},"body":{"index.html":{}}}],["get",{"_index":672,"title":{"index.html":{}},"body":{}}],["getapppath",{"_index":465,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["getemailerror",{"_index":183,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getpassword",{"_index":215,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getpassworderror",{"_index":184,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getstori",{"_index":398,"title":{},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["getstory(storyid",{"_index":471,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["geturl",{"_index":518,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["getusernam",{"_index":213,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["go",{"_index":710,"title":{},"body":{"index.html":{}}}],["graph",{"_index":716,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["handleerror(error",{"_index":474,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handleerror(result",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlelogin",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlelogin(data",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlestorydetailerror",{"_index":466,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror(error",{"_index":476,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header",{"_index":482,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["help",{"_index":708,"title":{},"body":{"index.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["html.clientheight",{"_index":437,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["html.offsetheight",{"_index":439,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["html.scrollheight",{"_index":438,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["http",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["http://localhost:4200",{"_index":684,"title":{},"body":{"index.html":{}}}],["http://taleaddaapi.herokuapp.com/taleadda/authent",{"_index":522,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["httpclient",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["httpclientmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":481,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["https://taleaddaapi.herokuapp.com/taleadda/stori",{"_index":523,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["i'))(control",{"_index":361,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["identifi",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["infrastructur",{"_index":492,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["inject",{"_index":140,"title":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{},"coverage.html":{},"overview.html":{}}}],["innerheight",{"_index":427,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["input",{"_index":337,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["insert",{"_index":585,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["instanc",{"_index":515,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["instead",{"_index":493,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["interfac",{"_index":521,"title":{"interfaces/ServiceURL.html":{},"interfaces/Story.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":254,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["isact",{"_index":364,"title":{},"body":{"components/LayoutComponent.html":{}}}],["iscollaps",{"_index":365,"title":{},"body":{"components/LayoutComponent.html":{}}}],["isloggedin",{"_index":164,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isselect",{"_index":367,"title":{},"body":{"components/LayoutComponent.html":{}}}],["isselected(path",{"_index":370,"title":{},"body":{"components/LayoutComponent.html":{}}}],["js",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(activatedroute.snapshot.param",{"_index":547,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["karma",{"_index":703,"title":{},"body":{"index.html":{}}}],["key",{"_index":350,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["keyboardwriteboard",{"_index":389,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/LayoutComponent.html":{},"dependencies.html":{}}}],["layout'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["layout.component.html",{"_index":363,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/layout.compon",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutcompon",{"_index":53,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["lenght",{"_index":198,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["like",{"_index":533,"title":{},"body":{"interfaces/Story.html":{}}}],["liter",{"_index":343,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["load",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["loadchildren",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('token",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem('usernam",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('token",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('usernam",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('token",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('usernam",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locat",{"_index":366,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.indexof(path",{"_index":382,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.split",{"_index":501,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["location.origin",{"_index":499,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["log",{"_index":491,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["logedin",{"_index":245,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["loggedin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":178,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["login(usernam",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindataurl",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":179,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["loginurl",{"_index":508,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["logout",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["mainrout",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map(r",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matbuttonmodul",{"_index":268,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["match",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodul",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["math.max(body.scrollheight",{"_index":435,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["maticonmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":270,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["matlistmodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodul",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":390,"title":{},"body":{"components/LayoutComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["method",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["minimum",{"_index":197,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["miscellan",{"_index":669,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedd",{"_index":534,"title":{},"body":{"interfaces/Story.html":{}}}],["modul",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":709,"title":{},"body":{"index.html":{}}}],["multi",{"_index":357,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["my_library_booksreadboard",{"_index":388,"title":{},"body":{"components/LayoutComponent.html":{}}}],["name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":683,"title":{},"body":{"index.html":{}}}],["new",{"_index":233,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["ng",{"_index":680,"title":{},"body":{"index.html":{}}}],["ng_valid",{"_index":346,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["ngoninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["ngx",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["null",{"_index":352,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["number",{"_index":472,"title":{},"body":{"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{}}}],["object",{"_index":583,"title":{},"body":{"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{}}}],["observable.of(tru",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["observable.throw('authent",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["observable.throw(error",{"_index":496,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["onchang",{"_index":344,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{}}}],["oncontentchang",{"_index":564,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oncontentchanged(undefin",{"_index":571,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorblur",{"_index":565,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorblured(quil",{"_index":573,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorcr",{"_index":566,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorcreated(quil",{"_index":575,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorfocus",{"_index":567,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorfocused(quil",{"_index":577,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oninit",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["onlogin",{"_index":185,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["onscrol",{"_index":399,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["openstori",{"_index":400,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["openstory(storyid",{"_index":409,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["option",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":718,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":637,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":546,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":165,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["path",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["patharray",{"_index":500,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["pathmatch",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterninvalid",{"_index":355,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["placehold",{"_index":584,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["platformbrowserdynam",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["popper",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["privat",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["prod",{"_index":696,"title":{},"body":{"index.html":{}}}],["product",{"_index":698,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":674,"title":{},"body":{"index.html":{}}}],["promis",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":163,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["protractor",{"_index":706,"title":{},"body":{"index.html":{}}}],["provid",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["public",{"_index":176,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["publish",{"_index":602,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["quill",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["quilleditormodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{}}}],["ra",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["re",{"_index":257,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["reactiveformsmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["read",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["readadda",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["readboard",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ReadBoardComponent.html":{}}}],["readboard'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["readboard.compon",{"_index":457,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["readboard.component.html",{"_index":393,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["readboard.routing.modul",{"_index":458,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["readboard.servic",{"_index":418,"title":{},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{}}}],["readboardcompon",{"_index":56,"title":{"components/ReadBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readboardmodul",{"_index":450,"title":{"modules/ReadBoardModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardrout",{"_index":461,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["readboardroutingmodul",{"_index":455,"title":{"modules/ReadBoardRoutingModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardservic",{"_index":392,"title":{"injectables/ReadBoardService.html":{}},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readi",{"_index":595,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["readm",{"_index":712,"title":{},"body":{"index.html":{}}}],["real",{"_index":486,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["redirect",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirectto",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexp",{"_index":349,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["regexp('(?:[a",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(this.emailvalid",{"_index":360,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexp.test(valu",{"_index":354,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexpattern",{"_index":219,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":180,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["relativeto",{"_index":443,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["reload",{"_index":686,"title":{},"body":{"index.html":{}}}],["remot",{"_index":490,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["requir",{"_index":193,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["respons",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["restendpointurl",{"_index":505,"title":{"classes/RestEndPointURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["result",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["rout",{"_index":123,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":143,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["routermodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":278,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forchild(readboardrout",{"_index":462,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["routermodule.forchild(writeboardrout",{"_index":613,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forroot",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":679,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/catch",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/do",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/map",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/observ",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{}}}],["scaffold",{"_index":688,"title":{},"body":{"index.html":{}}}],["search",{"_index":600,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["security/authent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["security/authentication.compon",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["security/authentication.modul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["security/authentication.servic",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/WriteBoardComponent.html":{}}}],["security/authguard",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["selectedstori",{"_index":395,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["send",{"_index":489,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["serv",{"_index":681,"title":{},"body":{"index.html":{}}}],["server",{"_index":497,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["servic",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["serviceurl",{"_index":507,"title":{"interfaces/ServiceURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["serviceurlconfig",{"_index":300,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["showadvancesearch",{"_index":396,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["showlogin",{"_index":186,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["showregist",{"_index":187,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["sign",{"_index":253,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["simplechang",{"_index":345,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["sing",{"_index":259,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"index.html":{}}}],["src/.../authentication.service.t",{"_index":671,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../emailvalidator.t",{"_index":670,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regexpattern.t",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.module.t",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/entity/story.t",{"_index":528,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.t",{"_index":362,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:15",{"_index":379,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:16",{"_index":380,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:17",{"_index":378,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:18",{"_index":381,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:19",{"_index":369,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:21",{"_index":377,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:23",{"_index":374,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:27",{"_index":371,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:32",{"_index":373,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:36",{"_index":372,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:40",{"_index":375,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:44",{"_index":376,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/readboard/readboard.component.t",{"_index":391,"title":{},"body":{"components/ReadBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.component.ts:13",{"_index":416,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:14",{"_index":414,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:15",{"_index":413,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:16",{"_index":404,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:18",{"_index":407,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:22",{"_index":412,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:25",{"_index":406,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:32",{"_index":408,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:41",{"_index":410,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.module.t",{"_index":456,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["src/app/readboard/readboard.routing.module.t",{"_index":460,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["src/app/readboard/readboard.service.t",{"_index":463,"title":{},"body":{"injectables/ReadBoardService.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.service.ts:11",{"_index":468,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:15",{"_index":479,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:17",{"_index":470,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:26",{"_index":475,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:33",{"_index":469,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:43",{"_index":473,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:50",{"_index":477,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/storyboard.component.t",{"_index":537,"title":{},"body":{"components/StoryBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/storyboard.component.ts:13",{"_index":544,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:14",{"_index":543,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:15",{"_index":540,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:22",{"_index":542,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:27",{"_index":541,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/security/authentication.component.t",{"_index":173,"title":{},"body":{"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["src/app/security/authentication.component.ts:16",{"_index":206,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:17",{"_index":211,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:18",{"_index":207,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:19",{"_index":210,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:20",{"_index":208,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:21",{"_index":189,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:23",{"_index":204,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:29",{"_index":200,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:36",{"_index":190,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:48",{"_index":201,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:67",{"_index":203,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:72",{"_index":202,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:77",{"_index":214,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:81",{"_index":216,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:85",{"_index":191,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:91",{"_index":196,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.module.t",{"_index":265,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/security/authentication.routing.module.t",{"_index":276,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["src/app/security/authentication.service.t",{"_index":279,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/security/authentication.service.ts:15",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:16",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:25",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:35",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:47",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:54",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:76",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.t",{"_index":162,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{}}}],["src/app/security/authentication.ts:5",{"_index":170,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:6",{"_index":169,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:7",{"_index":167,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authguard.t",{"_index":141,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/security/authguard.ts:14",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/security/authguard.ts:7",{"_index":144,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/serviceurlconfig.t",{"_index":506,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["src/app/serviceurlconfig.ts:10",{"_index":557,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:19",{"_index":525,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:2",{"_index":556,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:20",{"_index":526,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:21",{"_index":527,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:25",{"_index":552,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:3",{"_index":555,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:30",{"_index":553,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:35",{"_index":554,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:42",{"_index":510,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:43",{"_index":511,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:44",{"_index":513,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/validator/emailvalidator.t",{"_index":336,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validator/emailvalidator.ts:20",{"_index":338,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/emailvalidator.ts:22",{"_index":341,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/regexpattern.t",{"_index":631,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/writeboard/writeboard.component.t",{"_index":558,"title":{},"body":{"components/WriteBoardComponent.html":{},"coverage.html":{}}}],["src/app/writeboard/writeboard.component.ts:15",{"_index":579,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:16",{"_index":587,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:18",{"_index":580,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:19",{"_index":582,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:20",{"_index":586,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:22",{"_index":568,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:26",{"_index":570,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:31",{"_index":569,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:37",{"_index":574,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:41",{"_index":578,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:45",{"_index":576,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:50",{"_index":572,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.module.t",{"_index":608,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["src/app/writeboard/writeboard.routing.module.t",{"_index":611,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":633,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":634,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":673,"title":{"index.html":{}},"body":{}}],["state",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["statement",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":514,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["store",{"_index":693,"title":{},"body":{"index.html":{}}}],["stori",{"_index":397,"title":{"interfaces/Story.html":{}},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{}}}],["story.createdd",{"_index":446,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.dislik",{"_index":449,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.lik",{"_index":448,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.storyshortdescript",{"_index":447,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.titl",{"_index":445,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["storyboard",{"_index":550,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboard.compon",{"_index":459,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["storyboard.component.html",{"_index":538,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboardcompon",{"_index":58,"title":{"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyid",{"_index":411,"title":{},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storylisturl",{"_index":509,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storyshortdescript",{"_index":535,"title":{},"body":{"interfaces/Story.html":{}}}],["storyurl",{"_index":503,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{}}}],["storyurl(storyid",{"_index":512,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["string",{"_index":168,"title":{},"body":{"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{}}}],["subscrib",{"_index":242,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["success",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["support",{"_index":713,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":714,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":635,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":601,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["templat",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["templateurl",{"_index":174,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["test",{"_index":700,"title":{},"body":{"index.html":{}}}],["testurl",{"_index":517,"title":{"classes/TestURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["text",{"_index":597,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{}}}],["this._authenticationservice.login(this.loginform.value.usernam",{"_index":241,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this._authenticationservice.logout().subscribe((stat",{"_index":384,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this._readboardservice.getstories().subscrib",{"_index":423,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this._readboardservice.getstory(this.storyid).subscrib",{"_index":551,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.authent",{"_index":223,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.isloggedin",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.password",{"_index":231,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.usernam",{"_index":229,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.createform",{"_index":224,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["this.editor",{"_index":593,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["this.emailvalid",{"_index":358,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["this.error",{"_index":243,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.errormessag",{"_index":425,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.formbuilder.group",{"_index":228,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.getstori",{"_index":419,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.handlelogin(r",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get(this._storylisturl",{"_index":483,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["this.http.post(this.logindataurl",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.inst",{"_index":519,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.instance.serviceurl",{"_index":520,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.iscollaps",{"_index":387,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.isloggedin",{"_index":172,"title":{},"body":{"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{}}}],["this.login",{"_index":226,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform",{"_index":227,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.get('password",{"_index":248,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.get('usernam",{"_index":247,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.value.password",{"_index":240,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.value.usernam",{"_index":239,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.password.haserror('minlength",{"_index":252,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.password.haserror('requir",{"_index":251,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.regist",{"_index":225,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.rout",{"_index":444,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.router.navigate(['/authent",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.navigate(['/readboard",{"_index":385,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.navigate(['readboard",{"_index":246,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.router.navigate(['stori",{"_index":442,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.serviceurl",{"_index":516,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.showadvancesearch",{"_index":420,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.stori",{"_index":422,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.stories.concat(stori",{"_index":424,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.storyid",{"_index":548,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.token",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.username.haserror('email",{"_index":250,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.username.haserror('requir",{"_index":249,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.writestoryform",{"_index":588,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["titl",{"_index":536,"title":{},"body":{"interfaces/Story.html":{},"components/WriteBoardComponent.html":{}}}],["toggleadvancesearch",{"_index":401,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["togglemenu",{"_index":368,"title":{},"body":{"components/LayoutComponent.html":{}}}],["token",{"_index":181,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["undefin",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":699,"title":{},"body":{"index.html":{}}}],["up",{"_index":260,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["url",{"_index":524,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["urlmapp",{"_index":299,"title":{"classes/URLMapper.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["urlmapper.geturl().loginurl",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["urlmapper.geturl().storylisturl",{"_index":478,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["us",{"_index":689,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":356,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["user",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["usernam",{"_index":166,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["valid",{"_index":194,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{}}}],["validate(control",{"_index":339,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validator/emailvalid",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["validator/regexpattern",{"_index":220,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["validatorfn",{"_index":347,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validators.compose([validators.email",{"_index":230,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.compose([validators.minlength(4",{"_index":232,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.email",{"_index":236,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.requir",{"_index":235,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["valu",{"_index":192,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["variabl",{"_index":630,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":677,"title":{},"body":{"index.html":{}}}],["via",{"_index":702,"title":{},"body":{"index.html":{}}}],["void",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"classes/RestEndPointURL.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["window",{"_index":428,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["window.innerheight",{"_index":429,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["window.pageyoffset",{"_index":441,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["windowbottom",{"_index":440,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["windowheight",{"_index":426,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["world",{"_index":487,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["write",{"_index":599,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["writeboard",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["writeboard.compon",{"_index":609,"title":{},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["writeboard.component.html",{"_index":559,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["writeboard.routing.modul",{"_index":610,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["writeboardcompon",{"_index":59,"title":{"components/WriteBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["writeboardmodul",{"_index":603,"title":{"modules/WriteBoardModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["writeboardrout",{"_index":612,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["writeboardroutingmodul",{"_index":607,"title":{"modules/WriteBoardRoutingModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["writestoryform",{"_index":563,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["x01",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\\\\\[\\x01",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                read-adda\n            \n\n\n\n            \n                template\n                Loading..\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from './security/authentication.service';\n\n@Component({\n  selector: 'read-adda',\n  template: 'Loading..',\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(private _authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    console.info('Loading ReadAdda');\n    console.info('Is LoggedIn = ' + this._authenticationService.isLoggedIn());\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                EmailValidatorDirective\n                            \n                            \n                                LayoutComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     Authentication\n                            \n                            \n                                     AuthenticationService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from './../environments/environment';\nimport { AuthenticationModule } from './security/authentication.module';\nimport { Authentication } from './security/authentication';\nimport { AuthenticationService } from './security/authentication.service';\nimport { AuthGuard } from './security/authGuard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { EmailValidatorDirective } from './validator/emailValidator';\nimport { QuillEditorModule } from 'ngx-quill-editor';\nimport {MatToolbarModule, MatMenuModule, MatIconModule, MatSidenavModule, MatListModule} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    EmailValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    QuillEditorModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule\n  ],\n  exports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule\n  ],\n  providers: [AuthGuard, Authentication, AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {Routes, RouterModule} from '@angular/router';\n\nimport {AuthenticationComponent} from './security/authentication.component';\nimport {AuthGuard} from './security/authGuard';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\n\nconst MainRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/readBoard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'readBoard',\n    loadChildren: 'app/readboard/readboard.module#ReadBoardModule'\n  },\n  {\n    path: 'writeboard',\n    loadChildren: 'app/writeboard/writeboard.module#WriteBoardModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: 'app/security/authentication.module#AuthenticationModule',\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      MainRoutes,\n      {\n        enableTracing: true // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authGuard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authGuard.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Authentication } from '../security/authentication';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authentication: Authentication,\n        private router: Router\n      ) {}\n\n      canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable | Promise | boolean {\n      console.log('AuthGuard ------ ' + this.authentication.isLoggedIn);\n      if (!this.authentication.isLoggedIn) {\n        // redirect the user\n        this.router.navigate(['/authentication']);\n        return false;\n      }\n      return true;\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Authentication.html":{"url":"injectables/Authentication.html","title":"injectable - Authentication","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Authentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Authentication {\n  username: string;\n  password: string;\n  isLoggedIn: boolean;\n  constructor() {\n        console.info('Auth Constructor ' + this.isLoggedIn);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationComponent.html":{"url":"components/AuthenticationComponent.html","title":"component - AuthenticationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/security/authentication.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                authentication\n            \n\n\n\n\n            \n                templateUrl\n                authentication.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                error\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                loginForm\n                            \n                            \n                                register\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                getEmailError\n                            \n                            \n                                getPasswordError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                            \n                                showLogin\n                            \n                            \n                                showRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, _authenticationService: AuthenticationService, router: Router, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEmailError\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEmailError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Value required\" | \"Not a valid email\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPasswordError\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPasswordError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Value required\" | \"\" | \"Minimum lenght is 4\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowRegister()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authentication:     Authentication\n\n                    \n                \n                    \n                        \n                            Type :     Authentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        register:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/security/authentication.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/security/authentication.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../security/authentication.service';\nimport {Authentication} from '../security/authentication';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {emailValidator} from '../validator/emailValidator';\nimport {regexPattern} from '../validator/regexPattern';\n\n@Component({\n  selector: 'authentication',\n  templateUrl: 'authentication.component.html'\n})\n\nexport class AuthenticationComponent implements OnInit {\n\n  error = false;\n  token: any;\n  isLoggedIn = false;\n  register = false;\n  login = true;\n  loginForm: FormGroup;\n\n  constructor(public authentication: Authentication,\n              private _authenticationService: AuthenticationService, private router: Router, private  formBuilder: FormBuilder) {\n    console.info('Auth Comp Constructor');\n    this.authentication = authentication;\n  }\n\n  ngOnInit() {\n    console.info('Loading Authentication');\n    this.createForm();\n    this.register = false;\n    this.login = true;\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group(\n      {\n        'username': [this.authentication.username, Validators.compose([Validators.email])],\n        'password': [this.authentication.password, Validators.compose([Validators.minLength(4)])]\n      });\n    /*this.loginForm = new FormGroup({\n      'username': new FormControl(this.authentication.username, [Validators.required, Validators.email]),\n      'password': new FormControl(this.authentication.password, Validators.required)\n    });*/\n  }\n\n  onLogin() {\n    console.info('Login Component ');\n    console.info('Login username = ' + this.loginForm.value.username);\n    console.info('Login password = ' + this.loginForm.value.password);\n\n    this._authenticationService.login(this.loginForm.value.username, this.loginForm.value.password)\n      .subscribe(\n        token => {\n          if (token === '') {\n            this.error = true;\n          } else {\n            this.error = false;\n            console.info('No error === ' + token);\n            console.info('Is LogedIn === ' + this.authentication.isLoggedIn);\n            this.router.navigate(['readBoard']);\n          }\n        });\n  }\n\n  showRegister() {\n    this.login = false;\n    this.register = true;\n  }\n\n  showLogin() {\n    this.login = true;\n    this.register = false;\n  }\n\n  get username() {\n    return this.loginForm.get('username');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  getEmailError() {\n    return this.username.hasError('required') ? 'Value required' :\n      this.username.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n\n  getPasswordError() {\n    return this.password.hasError('required') ? 'Value required' :\n      this.password.hasError('minlength') ? 'Minimum lenght is 4' :\n        '';\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n        \n            \n                Sign In\n            \n            \n              \n                  \n                    \n                    {{getEmailError()}}\n                  \n              \n              \n                \n                  \n                  {{getPasswordError()}}\n                \n              \n            \n            Invalid login\n            \n                Create New Account\n                Login\n            \n        \n\n\n\n\n\n\n    \n        \n\n            Register\n        \n        \n            \n                Name:\n                \n            -->\n\n          \n            \n              \n              {{getEmailError()}}\n            \n          \n          \n            \n              \n              {{getPasswordError()}}\n            \n          \n          \n            \n              \n              {{getPasswordError()}}\n            \n          \n\n           \n                Email :\n                \n            \n            \n                Password:\n                \n            \n            \n                Re-enter Password:\n                \n            -->\n        \n        \n            Sign-In\n            Sing Up\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Sign In                                                                                                {{getEmailError()}}                                                                                                  {{getPasswordError()}}                                                      Invalid login                            Create New Account                Login                                            Register                                            Name:                            -->                                                  {{getEmailError()}}                                                                        {{getPasswordError()}}                                                                        {{getPasswordError()}}                                                 Email :                                                        Password:                                                        Re-enter Password:                            -->                            Sign-In            Sing Up            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthenticationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticationRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { Authentication } from './authentication';\nimport { AuthGuard } from './authGuard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication.routing.module';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    CdkTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: []\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationRoutingModule.html":{"url":"modules/AuthenticationRoutingModule.html","title":"module - AuthenticationRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { NgModule }  from '@angular/core';\n\nconst AuthenticationRoutes: Routes = [\n    \n    {\n        path: '',        \n        component: AuthenticationComponent,\n    }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(AuthenticationRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class AuthenticationRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginDataUrl\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleLogin\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(result: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleLogin(data: any, username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     String\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginDataUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginDataUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().loginURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Authentication} from './authentication';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\n\nlet loggedIn: boolean;\n\n@Injectable()\nexport class AuthenticationService {\n  token: string;\n  private loginDataUrl = URLMapper.getURL().loginURL();\n\n  constructor(private authentication: Authentication, private http: HttpClient) {\n    console.log('Authentication Service constructor');\n    this.token = localStorage.getItem('token');\n    this.isLoggedIn();\n    loggedIn = this.authentication.isLoggedIn;\n  }\n\n  login(username: string, password: string)  {\n    console.log(this.loginDataUrl);\n    this.authentication.username = username;\n    this.authentication.password = password;\n    return this.http.post(this.loginDataUrl, this.authentication)\n      .map(res => this.handleLogin(res, username, password))\n      .do(token => console.log(token))\n      .catch(this.handleError);\n  }\n\n  logout() {\n\n    this.token = undefined;\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.authentication.isLoggedIn = false;\n    this.authentication.username = '';\n    this.authentication.password = '';\n    loggedIn = false;\n    return Observable.of(true);\n  }\n\n  isLoggedIn() {\n    console.log(localStorage.getItem('token'));\n    this.authentication.username = localStorage.getItem('username');\n    this.authentication.isLoggedIn = !!localStorage.getItem('token');\n    loggedIn = !!localStorage.getItem('token');\n  }\n\n  private handleLogin(data: any, username: string, password: string): String {\n    const auth = data\n    console.log('Passed parameter :' + username + ' ' + password);\n    console.log('Auth parameter :' + auth.username + ' ' + auth.password);\n    if (auth.username === username && auth.password === password) {\n      this.token = 'token';\n      this.authentication.username = username;\n      this.authentication.isLoggedIn = true;\n      localStorage.setItem('token', this.token);\n      localStorage.setItem('username', username);\n      this.authentication.password = '';\n      console.log('Is LoggedIn success :' + this.authentication.isLoggedIn);\n      loggedIn = true;\n      return this.token;\n    } else {\n      this.authentication.isLoggedIn = false;\n      console.log('Is LoggedIn failed :' + this.authentication.isLoggedIn);\n      loggedIn = false;\n      return '';\n    }\n  }\n\n  private handleError(result: Response) {\n    return Observable.throw('authentication failure' + result);\n  }\n}\n\nexport function isLoggedIn() {\n  console.log('----' + loggedIn + '----');\n  return loggedIn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmailValidatorDirective.html":{"url":"directives/EmailValidatorDirective.html","title":"directive - EmailValidatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EmailValidatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validator/emailValidator.ts\n        \n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , : , : true }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailValidator\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        emailValidator\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, FormGroup } from '@angular/forms';\n\nexport function emailValidator(regexp: RegExp): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const value = control.value;\n    if (value === '') {\n      return null;\n    }\n\n    console.info('VALUE ===== ' + regexp.test(value))\n    return !regexp.test(value) ? { 'patternInvalid': { regexp } } : null;\n  };\n}\n@Directive({\n  selector: '[appEmail]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidatorDirective, multi: true}]\n})\nexport class EmailValidatorDirective implements Validator {\n  @Input() emailValidator: string;\n\n  validate(control: AbstractControl): {[key: string]: any} {\n    return this.emailValidator ? emailValidator(new RegExp(this.emailValidator, 'i'))(control)\n      : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-layout\n            \n\n\n\n\n            \n                templateUrl\n                layout.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                error\n                            \n                            \n                                isActive\n                            \n                            \n                                isCollapsed\n                            \n                            \n                                location\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                loggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onchange\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, _authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(path: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nloggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onchange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authentication:     Authentication\n\n                    \n                \n                    \n                        \n                            Type :     Authentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActive:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCollapsed:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     Location\n\n                    \n                \n                    \n                        \n                            Type :     Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../security/authentication.service';\nimport {Router} from '@angular/router';\nimport {Authentication} from '../security/authentication';\n\n\n\n@Component({\n  selector: 'ra-layout',\n  templateUrl: 'layout.component.html'\n})\n\nexport class LayoutComponent implements OnInit {\n\n  isActive = false;\n  location: Location;\n  error = false;\n  token: any;\n  isCollapsed = false;\n\n  constructor(public authentication: Authentication, private _authenticationService: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {\n      console.info('Loading Layout');\n  }\n\n  isSelected(path): boolean {\n    return location.href.indexOf(path) !== -1;\n  }\n\n\n  logout() {\n    this._authenticationService.logout().subscribe((stat: boolean) => {this.router.navigate(['/readBoard']); });\n  }\n\n  loggedIn() {\n    this._authenticationService.isLoggedIn();\n  }\n\n  onchange() {\n    console.log('change');\n  }\n\n  toggleMenu() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n      my_library_booksReadBoard\n      keyboardWriteBoard\n      Login\n      Logout\n    \n  \n\n  \n    \n      \n        \n          menu\n        \n      \n\n      ReadAdda\n\n      \n        \n          \n            \n              my_library_booksReadBoard\n            \n          \n          \n            \n              keyboardWriteBoard\n            \n          \n        \n        \n        \n        Login\n        Logout\n        \n      \n    \n    \n      \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            my_library_booksReadBoard      keyboardWriteBoard      Login      Logout                                    menu                    ReadAdda                                                  my_library_booksReadBoard                                                          keyboardWriteBoard                                                      Login        Logout                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadBoardComponent.html":{"url":"components/ReadBoardComponent.html","title":"component - ReadBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/readboard/readboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n            \n                selector\n                readboard\n            \n\n\n\n\n            \n                templateUrl\n                readboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                selectedStory\n                            \n                            \n                                showAdvanceSearch\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStories\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onScroll\n                            \n                            \n                                openStory\n                            \n                            \n                                toggleAdvanceSearch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_readboardService: ReadBoardService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _readboardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openStory\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenStory(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleAdvanceSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleAdvanceSearch()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStory:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAdvanceSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAdvanceSearch:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stories:     Story[]\n\n                    \n                \n                    \n                        \n                            Type :     Story[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ReadBoardService } from './readboard.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'readboard',\n  templateUrl: 'readboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class ReadBoardComponent implements OnInit {\n  stories: Story[] = new Array();\n  selectedStory: Story;\n  errorMessage: string;\n  showAdvanceSearch = false;\n  constructor(private _readboardService: ReadBoardService, private router: Router, private route: ActivatedRoute) { }\n  ngOnInit() {\n      console.info('Loading ReadBoard');\n      this.getStories();\n  }\n  toggleAdvanceSearch() {\n      this.showAdvanceSearch = ! this.showAdvanceSearch;\n  }\n  getStories() {\n      console.info('Loading getStories');\n    console.info('stories' + this.stories);\n      this._readboardService.getStories().subscribe(\n          stories => this.stories = this.stories.concat(stories),\n          error =>  this.errorMessage = error);\n  }\n  onScroll() {\n    const windowHeight = 'innerHeight' in window ? window.innerHeight : document.getElementById('readList').offsetHeight;\n    const body = document.body, html = document.getElementById('readList');\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight,  html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n        this.getStories();\n    }\n  }\n  openStory(storyId) {\n      this.router.navigate(['story', {storyId: storyId}], {relativeTo: this.route});\n\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n    \n\n\n\n    \n         \n            {{story.title}}\n            {{story.createdDate}}\n        \n        {{story.storyShortDescription}}\n        \n            {{story.likes}}\n            {{story.disLikes}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                             {{story.title}}            {{story.createdDate}}                {{story.storyShortDescription}}                    {{story.likes}}            {{story.disLikes}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReadBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardModule.html":{"url":"modules/ReadBoardModule.html","title":"module - ReadBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ReadBoardComponent\n                            \n                            \n                                StoryBoardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReadBoardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ReadBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReadBoardComponent } from './readboard.component';\nimport { ReadBoardService } from './readboard.service';\nimport { CommonModule } from '@angular/common';\nimport { ReadBoardRoutingModule } from './readboard.routing.module';\nimport { StoryBoardComponent } from './storyboard.component';\n\n@NgModule({\n  declarations: [\n    ReadBoardComponent,\n    StoryBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    ReadBoardRoutingModule\n  ],\n  providers: [ReadBoardService]\n})\nexport class ReadBoardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardRoutingModule.html":{"url":"modules/ReadBoardRoutingModule.html","title":"module - ReadBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { ReadBoardComponent } from './readboard.component';\nimport { StoryBoardComponent } from './storyboard.component';\nimport { NgModule } from '@angular/core';\n\nconst ReadBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: ReadBoardComponent\n  },\n  {\n    path: ':storyId',\n    component: StoryBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(ReadBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class ReadBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadBoardService.html":{"url":"injectables/ReadBoardService.html","title":"injectable - ReadBoardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReadBoardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/readboard/readboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storyListUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAppPath\n                            \n                            \n                                getStories\n                            \n                            \n                                getStory\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleStoryDetailError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAppPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAppPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory(storyID: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyID\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleStoryDetailError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleStoryDetailError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storyListUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _storyListUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().storyListURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Story} from '../entity/story';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport {Observable} from 'rxjs/Observable';\n@Injectable()\nexport class ReadBoardService {\n  constructor(private http: HttpClient) {\n  }\n\n  private _storyListUrl = URLMapper.getURL().storyListURL();\n\n  getStories() {\n    console.log(this._storyListUrl);\n    const httpHeader = new Headers();\n\n    return this.http.get(this._storyListUrl)\n      .do(data => console.log(data))\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n\n  private getAppPath() {\n    console.log('HOST :' + location.origin);\n    const pathArray = location.href.split('/');\n    let appPath = '/';\n    for (let i = 1; i (storyUrl)\n      .do(data => console.log(data))\n      .catch(this.handleStoryDetailError);\n  }\n\n  private handleStoryDetailError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestEndPointURL.html":{"url":"classes/RestEndPointURL.html","title":"class - RestEndPointURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestEndPointURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceURL.html":{"url":"interfaces/ServiceURL.html","title":"interface - ServiceURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginURL\n                                \n                                \n                                    storyListURL\n                                \n                                \n                                    storyURL\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authorName\n                                \n                                \n                                        content\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        disLikes\n                                \n                                \n                                        likes\n                                \n                                \n                                        modifiedDate\n                                \n                                \n                                        storyId\n                                \n                                \n                                        storyShortDescription\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorName\n                                    \n                                \n                                \n                                    \n                                        authorName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disLikes\n                                    \n                                \n                                \n                                    \n                                        disLikes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes\n                                    \n                                \n                                \n                                    \n                                        likes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyShortDescription\n                                    \n                                \n                                \n                                    \n                                        storyShortDescription:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Story {\n  storyId: number;\n  title: string;\n  storyShortDescription: string;\n  createdDate: string;\n  modifiedDate: string;\n  authorName: string;\n  likes: number;\n  disLikes: number;\n  content: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoryBoardComponent.html":{"url":"components/StoryBoardComponent.html","title":"component - StoryBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoryBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/readboard/storyboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n\n\n\n\n            \n                templateUrl\n                storyboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                story\n                            \n                            \n                                storyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, _readBoardService: ReadBoardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _readBoardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            story\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        story:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storyId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {ReadBoardService} from './readboard.service';\n\n\n@Component({\n  templateUrl: 'storyboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class StoryBoardComponent implements OnInit {\n  storyId: number;\n  story: Story;\n  errorMessage: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private _readBoardService: ReadBoardService, private router: Router) {\n    console.log('Query Params === ' + JSON.stringify(activatedRoute.snapshot.params));\n    this.storyId = activatedRoute.snapshot.params['storyId'];\n  }\n\n  ngOnInit() {\n    console.info('Loading StoryBoard');\n    this.getStory();\n  }\n\n  getStory() {\n    console.info('Loading getStory ' + this.storyId);\n    this._readBoardService.getStory(this.storyId).subscribe(\n      story => this.story = story,\n      error => this.errorMessage = error);\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoryBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestURL.html":{"url":"classes/TestURL.html","title":"class - TestURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/URLMapper.html":{"url":"classes/URLMapper.html","title":"class - URLMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  URLMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                    Private\n                                serviceURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     URLMapper\n\n                    \n                \n                    \n                        \n                            Type :     URLMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serviceURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceURL:     ServiceURL\n\n                    \n                \n                    \n                        \n                            Type :     ServiceURL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ServiceURL\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WriteBoardComponent.html":{"url":"components/WriteBoardComponent.html","title":"component - WriteBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WriteBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/writeboard/writeboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                writeboard\n            \n\n\n\n\n            \n                templateUrl\n                writeboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ckeditorContent\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                editorContent\n                            \n                            \n                                    Public\n                                editorOptions\n                            \n                            \n                                writeStoryForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContentChanged\n                            \n                            \n                                onEditorBlured\n                            \n                            \n                                onEditorCreated\n                            \n                            \n                                onEditorFocused\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/writeboard/writeboard.component.ts:22\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onContentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonContentChanged(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorBlured\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorBlured(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorCreated(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorFocused\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorFocused(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ckeditorContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ckeditorContent:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Some html'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorContent:     \n\n                    \n                \n                    \n                        \n                            Default value : `I am Example content`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    placeholder: 'insert content...'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeStoryForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        writeStoryForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { isLoggedIn } from '../security/authentication.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {emailValidator} from '../validator/emailValidator';\nimport {regexPattern} from '../validator/regexPattern';\n\n@Component({\n  selector: 'writeboard',\n  templateUrl: 'writeboard.component.html'\n})\n\n\nexport class WriteBoardComponent implements OnInit {\n  ckeditorContent = 'Some html';\n  writeStoryForm: FormGroup;\n\n  public editor;\n  public editorContent = `I am Example content`;\n  public editorOptions = {\n    placeholder: 'insert content...'\n  };\n\n  constructor() {}\n\n  ngOnInit() {\n      console.info('Loading WriteBoard');\n      this.createForm();\n  }\n\n  private createForm() {\n    this.writeStoryForm = new FormGroup({\n      'ckeditorContent': new FormControl(this.ckeditorContent),\n    });\n  }\n\n  onEditorBlured(quill) {\n    console.log('editor blur!', quill);\n  }\n\n  onEditorFocused(quill) {\n    console.log('editor focus!', quill);\n  }\n\n  onEditorCreated(quill) {\n    this.editor = quill;\n    console.log('quill is ready! this is current quill instance object', quill);\n  }\n\n  onContentChanged({ quill, html, text }) {\n    console.log('quill content is changed!', quill, html, text);\n  }\n}\n\n    \n\n    \n        \n    \n        Write your story\n        \n            Title:\n            \n        \n\n        -->\n\n\n      \n\n        \n            Search Tags:\n            \n        \n\n        Publish\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Write your story                    Title:                            -->                          Search Tags:                            Publish    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'WriteBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardModule.html":{"url":"modules/WriteBoardModule.html","title":"module - WriteBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WriteBoardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WriteBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {WriteBoardComponent} from './writeboard.component';\nimport {CommonModule} from '@angular/common';\nimport {WriteBoardRoutingModule} from './writeboard.routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\n@NgModule({\n  declarations: [\n    WriteBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    WriteBoardRoutingModule,\n    QuillEditorModule,\n    FormsModule\n  ],\n  providers: []\n})\nexport class WriteBoardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardRoutingModule.html":{"url":"modules/WriteBoardRoutingModule.html","title":"module - WriteBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { WriteBoardComponent } from './writeboard.component';\nimport { NgModule } from '@angular/core';\n\nconst WriteBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: WriteBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(WriteBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class WriteBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                RestEndPointURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                TestURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                URLMapper\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                interface\n            \n            \n                ServiceURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/entity/story.ts\n            \n            \n                interface\n            \n            \n                Story\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.component.ts\n            \n            \n                component\n            \n            \n                ReadBoardComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.service.ts\n            \n            \n                injectable\n            \n            \n                ReadBoardService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/readboard/storyboard.component.ts\n            \n            \n                component\n            \n            \n                StoryBoardComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/security/authGuard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.component.ts\n            \n            \n                component\n            \n            \n                AuthenticationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                function\n            \n            \n                isLoggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                variable\n            \n            \n                loggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.ts\n            \n            \n                injectable\n            \n            \n                Authentication\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                directive\n            \n            \n                EmailValidatorDirective\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                function\n            \n            \n                emailValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/validator/regexPattern.ts\n            \n            \n                variable\n            \n            \n                regexPattern\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/writeboard/writeboard.component.ts\n            \n            \n                component\n            \n            \n                WriteBoardComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.10\n        \n            @angular/cdk : ^5.2.0\n        \n            @angular/cli : 1.6.8\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/compiler-cli : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/flex-layout : ^5.0.0-beta.14\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/language-service : ^5.2.0\n        \n            @angular/material : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @compodoc/compodoc : ^1.1.2\n        \n            bootstrap : ^4.0.0\n        \n            core-js : ^2.4.1\n        \n            express : ^4.16.3\n        \n            hammerjs : ^2.0.8\n        \n            ngx-quill-editor : ^2.2.2\n        \n            popper : ^1.0.1\n        \n            rxjs : ^5.5.6\n        \n            typescript : ~2.5.3\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../emailValidator.ts)\n                        \n                        \n                            isLoggedIn   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validator/emailValidator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailValidator(regexp: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regexp\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReadadda\nThis project was generated with Angular CLI version 1.6.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            8 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            12 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            loggedIn   (src/.../authentication.service.ts)\n                        \n                        \n                            regexPattern   (src/.../regexPattern.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n\n    src/app/validator/regexPattern.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            regexPattern\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexPattern:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {email: new RegExp('(?:[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*|\"' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")' +\n    '@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.)' +\n    '{3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])')}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
