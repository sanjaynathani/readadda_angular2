var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.593,1,1.08]],["body/components/AppComponent.html",[0,1.057,1,1.847,2,0.324,3,0.28,4,1.767,5,1.767,6,0.239,7,2.806,8,1.413,9,2.665,10,1.611,11,2.927,12,2.665,13,4.499,14,2.365,15,5.071,16,0.572,17,1.197,18,2.846,19,0.894,20,3.361,21,2.181,22,1.1,23,3.361,24,0.894,25,0.032,26,1.38,27,0.822,28,0.894,29,3.266,30,3.361,31,0.894,32,1.475,33,0.766,34,0.518,35,1.948,36,0.324,37,0.198,38,1.948,39,1.767,40,2.44,41,2.806,42,1.948,43,2.806,44,1.146,45,2.365,46,2.365,47,1.667,48,2.846,49,1.767,50,1.767,51,1.056,52,1.767,53,1.245,54,1.767,55,1.767,56,1.146,57,1.767,58,1.146,59,1.146,60,1.611,61,1.146,62,1.611,63,1.767,64,0.022,65,0.022]],["title/modules/AppModule.html",[66,0.539,67,2.042]],["body/modules/AppModule.html",[1,2.038,2,0.247,3,0.214,6,0.182,21,2.147,25,0.033,33,1.073,34,0.394,35,1.484,36,0.422,37,0.151,44,0.873,53,1.974,61,1.818,64,0.018,65,0.018,66,0.633,67,4.032,68,1.227,69,2.54,70,2.303,71,1.923,72,2.137,73,2.137,74,2.137,75,2.137,76,2.137,77,3.089,78,2.555,79,1.818,80,2.156,81,1.484,82,1.346,83,2.561,84,3.72,85,3.658,86,2.7,87,2.561,88,2.137,89,3.72,90,2.561,91,2.156,92,0.804,93,3.72,94,1.859,95,2.7,96,3.105,97,1.227,98,1.499,99,2.561,100,2.137,101,1.859,102,2.561,103,1.484,104,2.561,105,1.65,106,2.137,107,2.561,108,1.859,109,3.105,110,1.859,111,1.65,112,1.65,113,4.382,114,3.72,115,4.382,116,4.382,117,4.382,118,3.105,119,1.65,120,3.72,121,2.137,122,1.859]],["title/modules/AppRoutingModule.html",[66,0.539,77,1.836]],["body/modules/AppRoutingModule.html",[1,1.363,2,0.385,3,0.333,6,0.284,25,0.032,33,1.036,34,0.616,51,1.255,60,1.916,64,0.025,65,0.025,66,0.68,77,2.317,78,2.413,79,1.363,91,2.317,92,1.255,98,2.028,100,3.337,106,3.337,123,3.998,124,2.21,125,3.998,126,1.754,127,5.035,128,3.354,129,3.998,130,4.203,131,3.998,132,3.998,133,5.512,134,3.998,135,3.998,136,2.902,137,3.998,138,3.998,139,3.998,140,1.916]],["title/injectables/AuthGuard.html",[78,1.518,141,1.173]],["body/injectables/AuthGuard.html",[2,0.33,3,0.286,6,0.243,8,1.077,16,0.583,17,1.213,19,1.213,22,1.114,24,1.213,25,0.032,26,1.114,27,1.114,28,1.213,31,1.362,33,0.929,34,0.528,36,0.33,37,0.202,64,0.023,65,0.023,78,2.185,79,1.993,92,1.077,105,2.21,136,4.125,140,1.643,141,1.897,142,2.862,143,2.21,144,3.456,145,3.428,146,3.428,147,5.458,148,5.121,149,5.458,150,3.428,151,4.559,152,3.301,153,4.559,154,2.396,155,2.21,156,1.432,157,3.428,158,3.309,159,3.428,160,3.428,161,3.428,162,1.802]],["title/injectables/Authentication.html",[79,1.08,141,1.173]],["body/injectables/Authentication.html",[2,0.388,3,0.336,6,0.286,16,0.685,19,1.543,22,1.418,25,0.032,27,1.352,33,0.685,34,0.62,36,0.388,37,0.237,64,0.025,65,0.025,79,1.724,141,2.048,154,2.906,163,3.359,164,1.873,165,3.049,166,4.21,167,4.21,168,5.056,169,2.457,170,4.024,171,4.024,172,3.359,173,3.359]],["title/components/AuthenticationComponent.html",[0,0.593,51,0.995]],["body/components/AuthenticationComponent.html",[0,0.829,1,0.55,2,0.155,3,0.135,4,0.848,5,0.848,6,0.114,8,0.819,9,1.725,10,0.773,11,2.402,12,0.848,14,0.848,16,0.275,17,0.694,18,1.982,19,0.694,21,1.519,22,1.398,24,0.429,25,0.033,26,1.139,27,0.922,28,0.429,29,2.383,31,1.4,32,1.816,33,0.793,34,0.248,35,0.935,36,0.155,37,0.095,39,0.848,41,1.347,44,0.55,45,1.371,46,1.371,47,0.966,48,1.982,49,0.848,50,0.848,51,1.184,52,0.848,53,0.598,54,0.848,55,0.848,56,0.55,57,0.848,58,0.55,59,0.55,60,0.773,61,0.55,62,0.773,63,0.848,64,0.013,65,0.013,79,1.91,92,0.507,97,0.773,105,1.04,108,1.171,140,2.122,143,1.04,144,2.701,156,1.391,158,1.171,162,2.705,164,0.966,165,1.982,166,3.637,167,3.004,172,1.347,174,1.347,175,1.512,176,2.608,177,1.25,178,2.399,179,3.521,180,3.77,181,4.428,182,3.383,183,3.147,184,4.851,185,5.146,186,3.77,187,3.77,188,3.77,189,4.66,190,2.608,191,1.613,192,1.613,193,2.129,194,3.77,195,2.383,196,3.147,197,1.613,198,2.608,199,2.608,200,2.177,201,1.613,202,1.613,203,1.613,204,1.613,205,1.613,206,1.807,207,1.613,208,1.613,209,1.613,210,3.004,211,1.613,212,1.613,213,1.613,214,1.613,215,1.613,216,1.613,217,1.613,218,1.347,219,0.935,220,1.04,221,1.347,222,1.347,223,1.613,224,1.347,225,1.347,226,3.283,227,3.283,228,2.608,229,1.613,230,1.347,231,1.613,232,1.347,233,1.613,234,1.412,235,1.613,236,2.608,237,1.613,238,1.613,239,3.283,240,1.613,241,2.608,242,1.613,243,1.347,244,2.608,245,1.613,246,1.613,247,1.613,248,1.613,249,1.613,250,1.613,251,1.613,252,1.613,253,1.613,254,3.77,255,2.608,256,2.608,257,2.608,258,2.608,259,2.608,260,2.608,261,2.608]],["title/modules/AuthenticationModule.html",[66,0.539,103,1.836]],["body/modules/AuthenticationModule.html",[2,0.332,3,0.288,6,0.245,21,1.389,25,0.033,33,1.071,34,0.531,36,0.441,37,0.203,44,1.176,51,1.838,64,0.023,65,0.023,66,0.779,68,1.653,69,2.977,70,1.812,71,2.008,78,2.193,79,1.561,80,2.652,81,1.999,82,1.812,95,3.322,96,3.82,97,1.653,98,1.843,103,3.515,119,2.222,262,2.878,263,2.878,264,2.878,265,3.392,266,3.448,267,4.576,268,3.448,269,4.576,270,3.82,271,4.576,272,2.878,273,3.448,274,3.322,275,2.222,276,3.448]],["title/modules/AuthenticationRoutingModule.html",[66,0.539,265,1.836]],["body/modules/AuthenticationRoutingModule.html",[0,0.79,2,0.407,3,0.352,6,0.3,25,0.033,33,1.004,34,0.65,36,0.502,37,0.249,51,1.636,64,0.026,65,0.026,66,0.719,91,3.02,92,1.326,98,2.099,124,2.286,126,1.853,128,2.447,265,3.02,272,3.524,277,4.222,278,4.222,279,4.222]],["title/injectables/AuthenticationService.html",[21,1.276,141,1.173]],["body/injectables/AuthenticationService.html",[2,0.199,3,0.172,6,0.147,16,0.352,17,0.844,19,0.844,21,1.278,22,1.293,24,1.31,25,0.033,26,1.057,27,1.14,28,1.151,31,1.498,32,0.907,33,0.923,34,0.318,36,0.306,37,0.122,38,1.199,42,3.208,64,0.021,65,0.016,79,1.748,94,1.501,126,0.907,140,1.52,141,1.429,143,1.333,152,1.333,154,1.087,155,1.333,156,1.738,158,3.72,162,2.274,164,1.175,165,2.452,166,4.017,167,4.017,169,2.414,173,1.726,179,2.302,182,3.386,193,0.907,206,0.991,224,1.726,230,3.611,232,3.22,280,1.333,281,4.326,282,2.647,283,3.171,284,3.611,285,3.22,286,3.611,287,3.171,288,3.171,289,3.22,290,2.068,291,3.171,292,2.068,293,3.171,294,2.068,295,3.171,296,2.068,297,2.068,298,3.171,299,2.068,300,0.907,301,1.726,302,1.726,303,1.726,304,1.726,305,1.726,306,2.068,307,1.726,308,4.665,309,3.858,310,2.068,311,2.068,312,2.068,313,2.068,314,2.068,315,2.068,316,1.726,317,1.726,318,2.068,319,2.068,320,2.068,321,2.068,322,2.068,323,2.068,324,2.068,325,2.068,326,3.171,327,3.171,328,2.068,329,2.068,330,3.171,331,2.068,332,2.068,333,2.068,334,2.068,335,1.199,336,1.199]],["title/directives/EmailValidatorDirective.html",[47,1.173,61,1.08]],["body/directives/EmailValidatorDirective.html",[2,0.305,3,0.264,6,0.225,8,1.357,10,1.518,11,2.071,16,0.539,17,1.15,22,1.056,24,0.843,25,0.033,26,0.774,27,1.203,28,0.843,31,1.472,33,0.735,34,0.488,36,0.416,37,0.187,47,1.822,61,1.678,62,2.071,64,0.021,65,0.021,71,2.159,97,1.518,126,1.39,140,2.071,169,2.129,193,1.896,195,4.015,210,2.299,219,2.851,335,1.836,337,2.299,338,5.284,339,3.167,340,4.321,341,5.531,342,3.167,343,4.321,344,3.167,345,2.643,346,3.167,347,4.321,348,4.321,349,2.643,350,3.607,351,4.321,352,3.167,353,2.851,354,3.167,355,4.321,356,3.167,357,3.167,358,3.167,359,3.167,360,3.167,361,3.167,362,3.167]],["title/components/LayoutComponent.html",[0,0.593,53,1.173]],["body/components/LayoutComponent.html",[0,0.904,1,0.761,2,0.215,3,0.186,4,1.174,5,1.174,6,0.158,8,1.056,9,2.125,10,1.07,11,2.656,12,1.174,14,1.174,16,0.38,17,0.894,18,2.365,19,0.594,21,1.813,22,1.436,24,0.894,25,0.032,26,1.24,27,1.1,28,0.894,29,2.935,31,1.4,32,2.118,33,0.766,34,0.344,35,1.294,36,0.215,37,0.132,39,1.174,40,2.44,42,2.608,43,1.864,44,0.761,45,1.767,46,1.767,47,1.245,48,2.365,49,1.174,50,1.174,51,0.701,52,1.174,53,1.667,54,2.125,55,1.174,56,0.761,57,1.174,58,0.761,59,0.761,60,1.07,61,0.761,62,1.07,63,1.174,64,0.017,65,0.017,79,1.955,92,0.701,98,0.899,105,1.439,122,2.935,128,1.294,143,1.439,144,3.05,154,2.125,156,1.056,162,2.666,164,1.245,175,1.949,177,1.611,178,2.608,179,3.266,182,3.266,193,1.774,206,1.938,222,1.864,284,4.521,345,3.756,363,1.864,364,3.362,365,4.499,366,4.499,367,5.262,368,3.362,369,4.499,370,3.362,371,3.362,372,2.233,373,2.233,374,2.233,375,2.233,376,2.233,377,2.233,378,2.233,379,2.233,380,2.233,381,2.233,382,2.233,383,2.233,384,1.621,385,2.233,386,2.233,387,2.233,388,3.362,389,4.499,390,4.499,391,3.362]],["title/components/ReadBoardComponent.html",[0,0.593,56,1.08]],["body/components/ReadBoardComponent.html",[0,0.88,1,0.716,2,0.202,3,0.175,4,1.104,5,1.104,6,0.149,8,1.008,9,2.047,10,1.007,11,2.61,12,1.104,14,1.104,16,0.357,17,0.854,18,2.292,19,0.559,22,1.358,24,0.854,25,0.032,26,1.211,27,1.066,28,0.854,31,1.318,32,1.914,33,0.8,34,0.323,36,0.202,37,0.124,38,1.217,39,1.687,44,0.716,45,2.047,46,1.687,47,1.189,48,2.292,49,1.104,50,1.104,51,0.66,52,1.104,53,0.778,54,1.104,55,1.104,56,1.487,57,1.104,58,0.716,59,0.716,60,1.007,61,0.716,62,1.007,63,1.104,64,0.016,65,0.016,71,1.408,92,0.66,124,1.709,126,1.914,130,3.251,140,1.007,144,2.987,152,1.354,154,1.104,155,1.354,156,1.008,162,2.047,164,1.189,169,1.569,175,1.86,178,1.86,193,1.408,206,1.538,234,1.095,243,1.753,392,1.753,393,2.374,394,3.209,395,3.64,396,4.361,397,4.361,398,1.955,399,3.41,400,4.361,401,4.361,402,3.209,403,2.1,404,3.64,405,3.209,406,2.679,407,2.1,408,2.1,409,2.1,410,2.1,411,3.209,412,2.1,413,1.569,414,2.1,415,2.1,416,3.209,417,2.1,418,1.525,419,1.525,420,2.679,421,3.895,422,2.1,423,2.679,424,2.1,425,2.1,426,2.1,427,1.753,428,3.209,429,2.1,430,2.1,431,2.1,432,2.1,433,2.1,434,2.1,435,2.1,436,3.209,437,2.1,438,2.1,439,2.1,440,2.1,441,2.1,442,3.209,443,2.1,444,2.1,445,2.1,446,2.1,447,4.361,448,3.209,449,3.209,450,3.209]],["title/modules/ReadBoardModule.html",[66,0.539,451,2.042]],["body/modules/ReadBoardModule.html",[2,0.328,3,0.284,6,0.242,25,0.032,33,1.042,34,0.525,36,0.438,37,0.201,44,1.163,56,2.063,58,1.989,64,0.022,65,0.022,66,0.773,68,1.634,69,2.96,70,1.792,71,2.241,80,2.632,81,1.976,82,1.792,98,1.829,118,3.791,119,2.197,270,3.791,274,3.296,275,2.197,393,2.854,419,2.474,451,4.048,452,2.846,453,2.846,454,2.846,455,2.846,456,3.381,457,3.409,458,2.846,459,3.409,460,2.846,461,4.541,462,4.541]],["title/modules/ReadBoardRoutingModule.html",[66,0.539,456,1.836]],["body/modules/ReadBoardRoutingModule.html",[0,0.953,2,0.392,3,0.339,6,0.288,25,0.033,33,1.02,34,0.626,36,0.49,37,0.24,56,1.735,58,1.735,64,0.025,65,0.025,66,0.692,91,2.95,92,1.277,98,2.05,124,2.233,126,1.784,128,2.95,413,1.638,456,2.95,458,3.393,460,3.393,463,4.065,464,4.065,465,4.065]],["title/injectables/ReadBoardService.html",[141,1.173,393,1.518]],["body/injectables/ReadBoardService.html",[2,0.252,3,0.218,6,0.186,16,0.445,17,1.005,19,0.696,22,1.353,24,1.292,25,0.032,26,1.188,27,1.188,28,1.292,31,1.508,33,0.983,34,0.403,36,0.252,37,0.154,38,1.516,64,0.019,65,0.019,94,1.899,126,1.658,141,1.643,152,1.686,155,1.686,156,1.885,164,1.4,169,1.054,178,3.112,193,1.148,206,1.254,234,0.892,282,3.154,285,3.154,286,4.055,289,4.482,300,1.148,301,2.184,302,2.184,303,2.184,304,2.184,305,2.184,316,2.184,384,1.899,393,1.811,398,0.892,399,3.897,413,1.054,418,1.899,466,2.184,467,4.858,468,4.858,469,3.779,470,2.616,471,2.616,472,2.616,473,2.616,474,2.616,475,2.743,476,2.616,477,3.779,478,2.616,479,3.779,480,2.616,481,3.779,482,2.616,483,2.616,484,2.616,485,2.616,486,2.616,487,3.779,488,3.779,489,2.616,490,3.779,491,3.779,492,3.154,493,3.779,494,3.779,495,4.858,496,3.779,497,3.779,498,3.779,499,3.779,500,3.779,501,3.154,502,2.616,503,1.516,504,2.616,505,2.616,506,2.616,507,1.686,508,2.616]],["title/classes/RestEndPointURL.html",[37,0.187,509,1.665]],["body/classes/RestEndPointURL.html",[2,0.284,3,0.245,6,0.209,8,1.753,16,0.501,17,1.093,19,0.783,22,1.157,24,0.783,25,0.033,26,0.719,28,0.783,31,1.554,32,2.077,36,0.493,37,0.302,64,0.02,65,0.02,156,1.29,177,2.961,234,1.614,300,2.077,336,2.743,353,1.706,398,1.003,413,1.906,503,2.381,507,2.648,509,2.487,510,1.706,511,3.01,512,3.597,513,3.597,514,2.942,515,2.942,516,3.301,517,2.942,518,2.648,519,1.706,520,2.648,521,2.159,522,1.897,523,2.648,524,1.897,525,1.185,526,1.897,527,2.648,528,1.897]],["title/interfaces/ServiceURL.html",[511,1.665,525,1.276]],["body/interfaces/ServiceURL.html",[2,0.291,3,0.252,6,0.215,8,1.709,16,0.515,17,1.114,19,0.804,22,1.174,24,0.804,25,0.033,26,0.739,28,0.804,31,1.565,36,0.499,37,0.283,64,0.021,65,0.021,156,1.315,177,2.766,234,1.637,300,2.107,336,2.783,353,1.753,398,1.031,413,1.934,503,2.426,507,2.698,509,2.2,510,1.753,511,3.033,512,3.628,513,3.628,516,3.34,518,2.698,519,1.753,520,2.698,521,2.2,522,1.949,523,2.698,524,1.949,525,1.686,526,1.949,527,2.698,528,1.949,529,3.024,530,3.024,531,3.024]],["title/interfaces/Story.html",[398,1.08,525,1.276]],["body/interfaces/Story.html",[2,0.35,3,0.303,6,0.258,16,0.619,25,0.031,27,1.516,36,0.35,64,0.023,65,0.023,164,1.755,169,2.613,398,1.616,413,2.25,475,4.501,525,1.909,532,3.035,533,5.585,534,4.662,535,5.585,536,5.585,537,5.585,538,5.585,539,5.585,540,4.662]],["title/components/StoryBoardComponent.html",[0,0.593,58,1.08]],["body/components/StoryBoardComponent.html",[0,0.968,1,0.9,2,0.254,3,0.22,4,1.387,5,1.387,6,0.187,8,1.194,9,2.343,10,1.265,11,2.66,12,1.387,14,1.387,16,0.449,17,1.012,18,2.564,19,0.702,22,1.317,24,0.702,25,0.032,26,1.264,27,1.192,28,0.702,31,1.012,32,1.669,33,0.88,34,0.406,36,0.254,37,0.156,38,1.53,39,1.999,44,0.9,45,1.999,46,1.999,47,1.409,48,2.564,49,1.387,50,1.387,51,0.829,52,1.387,53,0.978,54,1.387,55,1.387,56,0.9,57,1.387,58,1.663,59,0.9,60,1.265,61,0.9,62,1.265,63,1.387,64,0.019,65,0.019,71,1.669,92,1.194,144,3.217,156,1.194,164,1.409,169,1.796,175,2.204,178,2.204,393,2.581,395,4.072,398,2.003,399,3.753,404,4.495,406,3.721,413,1.965,418,1.916,419,1.916,420,2.203,423,2.203,427,2.203,475,3.236,541,2.203,542,3.803,543,2.639,544,3.803,545,2.639,546,2.639,547,2.639,548,2.639,549,2.639,550,2.639,551,2.639,552,3.803,553,2.639,554,2.639,555,2.639]],["title/classes/TestURL.html",[37,0.187,521,1.665]],["body/classes/TestURL.html",[2,0.284,3,0.245,6,0.209,8,1.753,16,0.501,17,1.093,19,0.783,22,1.157,24,0.783,25,0.033,26,0.719,28,0.783,31,1.554,36,0.493,37,0.302,64,0.02,65,0.02,156,1.29,169,1.906,177,2.961,234,1.614,300,2.077,336,2.743,353,1.706,398,1.003,413,1.906,503,2.381,507,2.648,509,2.159,510,1.706,511,3.01,512,3.597,513,3.597,516,3.301,518,2.648,519,1.706,520,2.648,521,2.487,522,1.897,523,2.648,524,1.897,525,1.185,526,1.897,527,2.648,528,1.897,556,2.942,557,2.942,558,2.942]],["title/classes/URLMapper.html",[37,0.187,300,1.39]],["body/classes/URLMapper.html",[2,0.282,3,0.244,6,0.208,8,1.689,16,0.498,17,1.089,19,1.256,22,1.249,25,0.033,27,1.001,31,1.482,36,0.492,37,0.301,64,0.02,65,0.02,156,1.75,164,1.516,177,2.742,234,1.61,300,2.445,336,2.736,353,1.697,398,0.999,413,1.649,503,2.373,509,2.152,510,1.697,511,3.22,512,3.042,513,3.042,516,3.042,518,3.592,519,2.962,520,2.639,521,2.152,522,3.294,523,2.639,524,1.887,525,1.18,526,1.887,527,2.639,528,1.887,559,4.093,560,2.928,561,2.928]],["title/components/WriteBoardComponent.html",[0,0.593,59,1.08]],["body/components/WriteBoardComponent.html",[0,0.878,1,0.713,2,0.201,3,0.174,4,1.098,5,1.098,6,0.148,8,1.004,9,2.041,10,1.001,11,2.607,12,1.098,14,1.098,16,0.356,17,0.85,18,2.286,19,1.033,22,1.4,24,1.157,25,0.032,26,1.297,27,0.949,28,1.157,31,1.315,32,2.169,33,0.841,34,0.322,35,1.211,36,0.201,37,0.123,39,1.098,44,0.713,45,2.598,46,1.68,47,1.184,48,2.286,49,1.098,50,1.098,51,0.656,52,1.098,53,0.774,54,1.098,55,1.098,56,0.713,57,1.098,58,0.713,59,1.483,60,2.085,61,0.713,62,1.001,63,1.098,64,0.016,65,0.016,92,0.656,97,1.001,108,1.517,111,3.577,112,2.803,136,1.517,156,1.219,164,1.184,165,1.098,169,1.288,175,1.853,177,2.607,183,3.63,193,1.704,195,1.517,206,1.861,210,3.402,218,1.744,219,1.211,220,1.347,221,1.744,225,1.744,234,1.09,398,1.09,519,1.211,534,3.912,540,2.668,562,1.744,563,3.197,564,4.687,565,4.349,566,4.349,567,4.349,568,3.882,569,3.197,570,3.197,571,3.197,572,2.089,573,2.089,574,2.089,575,2.089,576,2.089,577,3.197,578,2.089,579,3.197,580,2.089,581,3.197,582,2.089,583,2.089,584,2.089,585,3.197,586,2.089,587,3.241,588,3.197,589,3.197,590,2.089,591,2.089,592,2.089,593,2.089,594,3.197,595,2.089,596,2.089,597,2.089,598,3.197,599,2.089,600,2.089,601,3.197,602,1.744,603,3.197,604,3.197,605,3.197,606,3.197]],["title/modules/WriteBoardModule.html",[66,0.539,607,2.042]],["body/modules/WriteBoardModule.html",[2,0.367,3,0.318,6,0.27,25,0.032,33,1.054,34,0.586,36,0.47,37,0.225,44,1.299,59,2.051,64,0.024,65,0.024,66,0.831,68,1.825,69,3.124,70,2.001,71,2.142,80,2.83,81,2.207,82,2.001,95,3.544,97,1.825,98,1.967,109,4.075,110,2.764,111,2.455,112,2.455,274,3.544,275,2.455,607,3.991,608,3.179,609,3.179,610,3.179,611,3.485,612,3.808,613,3.179,614,3.808]],["title/modules/WriteBoardRoutingModule.html",[66,0.539,611,1.836]],["body/modules/WriteBoardRoutingModule.html",[0,0.79,2,0.407,3,0.352,6,0.3,25,0.033,33,1.004,34,0.65,36,0.502,37,0.249,59,1.777,64,0.026,65,0.026,66,0.719,91,3.02,92,1.326,98,2.099,124,2.286,126,1.853,128,2.447,611,3.02,613,3.524,615,4.222,616,4.222,617,4.222]],["title/coverage.html",[618,3.607]],["body/coverage.html",[0,1.071,1,1.089,6,0.227,7,2.664,21,1.286,25,0.032,27,0.78,37,0.291,42,1.85,47,1.183,51,1.002,53,1.183,56,1.089,58,1.089,59,1.089,61,1.089,64,0.021,65,0.021,78,1.53,79,1.089,101,3.154,141,1.964,142,2.664,163,2.664,165,1.678,174,2.664,219,1.85,220,2.057,234,1.089,280,3.184,300,1.401,335,2.518,337,3.154,363,2.664,392,2.664,393,1.53,398,1.089,466,2.664,509,1.678,510,3.073,511,1.678,521,1.678,525,1.75,532,2.664,541,2.664,562,2.664,618,2.664,619,3.192,620,3.192,621,3.192,622,6.468,623,4.939,624,4.345,625,4.939,626,3.192,627,3.192,628,3.192,629,3.192,630,3.192,631,3.192,632,3.192,633,5.722,634,3.849,635,2.664,636,3.192,637,2.664,638,2.664,639,3.192,640,3.192]],["title/dependencies.html",[68,1.826,641,2.645]],["body/dependencies.html",[25,0.033,34,0.57,64,0.024,65,0.024,68,1.775,70,1.946,85,4.002,86,3.48,88,3.091,92,1.163,97,1.775,110,2.688,111,2.387,112,2.387,119,2.387,121,3.091,122,2.688,275,2.387,307,3.091,642,3.702,643,6.32,644,3.702,645,5.317,646,3.702,647,3.702,648,4.795,649,3.091,650,3.702,651,3.702,652,3.702,653,3.702,654,3.702,655,3.702,656,3.702,657,3.702,658,3.702,659,3.702,660,3.702,661,3.702,662,3.702,663,3.702,664,3.702,665,3.702,666,3.702,667,3.702,668,3.702,669,3.702,670,3.702,671,3.702,672,3.702,673,3.702]],["title/miscellaneous/functions.html",[335,2.208,674,1.705]],["body/miscellaneous/functions.html",[16,0.803,24,1.255,25,0.029,26,1.154,28,1.255,64,0.028,65,0.028,165,3.116,219,3.229,280,3.041,317,3.939,335,2.735,337,3.425,349,3.939,350,3.939,674,3.041,675,4.718,676,3.939]],["title/index.html",[16,0.45,677,2.645,678,2.645]],["body/index.html",[0,0.991,3,0.306,6,0.26,25,0.024,26,0.897,40,2.663,64,0.024,65,0.024,82,1.928,234,1.251,492,3.062,501,3.978,602,3.062,649,4.419,679,4.766,680,5.604,681,5.294,682,3.669,683,3.669,684,3.669,685,6.061,686,6.061,687,3.669,688,3.669,689,3.669,690,3.669,691,3.669,692,3.669,693,3.669,694,3.669,695,5.294,696,3.669,697,5.809,698,3.669,699,3.669,700,3.669,701,3.669,702,3.669,703,3.669,704,3.062,705,4.766,706,5.809,707,4.766,708,4.766,709,3.669,710,5.604,711,3.669,712,3.669,713,3.669,714,5.294,715,3.669,716,3.669,717,3.669,718,3.669]],["title/modules.html",[66,0.736]],["body/modules.html",[25,0.026,64,0.026,65,0.026,66,0.75,67,2.841,77,2.555,86,4.346,103,2.555,265,2.555,451,2.841,456,2.555,607,2.841,611,2.555,719,5.988,720,5.988,721,6.368,722,5.988,723,5.988]],["title/overview.html",[724,3.607]],["body/overview.html",[0,0.585,1,1.986,21,1.968,25,0.032,36,0.301,37,0.184,44,1.066,47,1.158,51,1.534,53,1.81,56,1.878,58,1.666,59,1.666,61,1.666,64,0.021,65,0.021,66,0.729,67,4.1,68,1.498,69,1.812,70,1.643,71,1.372,72,2.609,73,2.609,74,2.609,75,2.609,76,2.609,77,2.832,78,2.342,79,1.666,80,2.483,81,1.812,82,1.643,103,3.296,124,1.372,141,1.158,200,2.609,262,2.609,263,2.609,264,2.609,265,2.832,384,2.269,393,2.519,451,3.922,452,2.609,453,2.609,454,2.609,455,2.609,456,2.832,525,1.259,607,3.665,608,2.609,609,2.609,610,2.609,611,2.832,724,2.609,725,3.126,726,3.126,727,3.126,728,3.126,729,3.126]],["title/routes.html",[124,1.896]],["body/routes.html",[25,0.029,64,0.029,65,0.029,124,2.228]],["title/miscellaneous/variables.html",[634,2.765,674,1.705]],["body/miscellaneous/variables.html",[16,0.594,25,0.032,27,1.343,42,2.994,64,0.023,65,0.023,101,4.262,140,1.672,154,2.424,162,1.833,193,2.267,196,2.912,206,2.476,220,3.329,234,1.19,280,2.248,587,4.901,634,2.532,635,2.912,637,2.912,638,2.912,674,2.248,676,2.912,704,3.849,730,3.488,731,3.488,732,3.488,733,3.488,734,6.211,735,4.611,736,4.611,737,4.611,738,3.488,739,3.488,740,4.611,741,4.611,742,4.611,743,4.611,744,5.715,745,3.488,746,3.488,747,4.611,748,4.611,749,4.611,750,4.611,751,3.488,752,3.488,753,3.488,754,3.488]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":633,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":626,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":628,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":636,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":627,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":631,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":630,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":629,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":632,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":384,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"overview.html":{}}}],["1.0.1",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["1.1.3",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":683,"title":{},"body":{"index.html":{}}}],["12",{"_index":729,"title":{},"body":{"overview.html":{}}}],["2",{"_index":728,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["2.5.7",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["2.7.2",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["3",{"_index":727,"title":{},"body":{"overview.html":{}}}],["3}(?:25[0",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":200,"title":{},"body":{"components/AuthenticationComponent.html":{},"overview.html":{}}}],["4.1.1",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["4.10.2",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["4][0",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["5]|2[0",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":726,"title":{},"body":{"overview.html":{}}}],["6.0.3",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["6.0.7",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":725,"title":{},"body":{"overview.html":{}}}],["9",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&\\'*+/=?^_",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\\\.)+[a",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\\\[(?:(?:25[0",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_authenticationservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["_readboardservic",{"_index":406,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["_storylisturl",{"_index":467,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["abstractcontrol",{"_index":341,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["accessor",{"_index":213,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["account",{"_index":257,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["activatedrout",{"_index":404,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["activatedroute.snapshot.params['storyid",{"_index":553,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroutesnapshot",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_compon",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["adda",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["adda'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["angular",{"_index":681,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/t",{"_index":268,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["angular/cli",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":275,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["angular/compil",{"_index":648,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":492,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["app.compon",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.routing.modul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["app/readboard/readboard.module#readboardmodul",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/security/authentication.module#authenticationmodul",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/writeboard/writeboard.module#writeboardmodul",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appemail",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["appmodul",{"_index":67,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppath",{"_index":506,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["approutingmodul",{"_index":77,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":416,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["artifact",{"_index":698,"title":{},"body":{"index.html":{}}}],["auth",{"_index":323,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth.password",{"_index":327,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["auth.usernam",{"_index":326,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["authent",{"_index":79,"title":{"injectables/Authentication.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authentication'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["authentication.compon",{"_index":272,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["authentication.component.html",{"_index":176,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["authentication.routing.modul",{"_index":276,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":273,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationcompon",{"_index":51,"title":{"components/AuthenticationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmodul",{"_index":103,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":278,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["authenticationroutingmodul",{"_index":265,"title":{"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservic",{"_index":21,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":78,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authornam",{"_index":533,"title":{},"body":{"interfaces/Story.html":{}}}],["automat",{"_index":691,"title":{},"body":{"index.html":{}}}],["avail",{"_index":723,"title":{},"body":{"modules.html":{}}}],["beta.14",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["blur",{"_index":595,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["bodi",{"_index":433,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["body.offsetheight",{"_index":438,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["boolean",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":721,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":697,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/WriteBoardComponent.html":{}}}],["canactivate(next",{"_index":146,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch(this.handleerror",{"_index":316,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["catch(this.handlestorydetailerror",{"_index":508,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["cdktablemodul",{"_index":267,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["chang",{"_index":602,"title":{},"body":{"components/WriteBoardComponent.html":{},"index.html":{}}}],["check",{"_index":717,"title":{},"body":{"index.html":{}}}],["ckeditorcont",{"_index":564,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["class",{"_index":37,"title":{"classes/RestEndPointURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":649,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":262,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":263,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_import",{"_index":264,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_readboardmodul",{"_index":452,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_declar",{"_index":453,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_import",{"_index":455,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_readboardcomponent_provid",{"_index":454,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodul",{"_index":608,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_declar",{"_index":609,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_import",{"_index":610,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["code",{"_index":693,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":274,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{}}}],["comp",{"_index":223,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["compodoc/compodoc",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["consol",{"_index":498,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.error(error",{"_index":499,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.info('auth",{"_index":172,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{}}}],["console.info('i",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{}}}],["console.info('load",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["console.info('login",{"_index":239,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["console.info('no",{"_index":245,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["console.info('stori",{"_index":422,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["console.info('valu",{"_index":354,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["console.log",{"_index":336,"title":{},"body":{"injectables/AuthenticationService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["console.log('auth",{"_index":325,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('authent",{"_index":306,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('authguard",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('chang",{"_index":387,"title":{},"body":{"components/LayoutComponent.html":{}}}],["console.log('editor",{"_index":594,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["console.log('host",{"_index":502,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log('i",{"_index":330,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('pass",{"_index":324,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log('queri",{"_index":549,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["console.log('quil",{"_index":598,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["console.log(data",{"_index":488,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(localstorage.getitem('token",{"_index":321,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(this._storylisturl",{"_index":483,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(this.logindataurl",{"_index":310,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["console.log(token",{"_index":315,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["const",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["constructor(_authenticationservic",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(_readboardservic",{"_index":403,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["constructor(activatedrout",{"_index":543,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["constructor(authent",{"_index":143,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["constructor(http",{"_index":470,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["constructor(priv",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["constructor(publ",{"_index":222,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["content",{"_index":534,"title":{},"body":{"interfaces/Story.html":{},"components/WriteBoardComponent.html":{}}}],["control",{"_index":343,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["control.valu",{"_index":352,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["core",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":618,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":256,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["createdd",{"_index":535,"title":{},"body":{"interfaces/Story.html":{}}}],["createform",{"_index":183,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["current",{"_index":600,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["data",{"_index":293,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["declar",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["default",{"_index":206,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["delay(5000",{"_index":489,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["depend",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":688,"title":{},"body":{"index.html":{}}}],["develop",{"_index":684,"title":{},"body":{"index.html":{}}}],["direct",{"_index":47,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":696,"title":{},"body":{"index.html":{}}}],["directori",{"_index":701,"title":{},"body":{"index.html":{}}}],["dislik",{"_index":536,"title":{},"body":{"interfaces/Story.html":{}}}],["dist",{"_index":700,"title":{},"body":{"index.html":{}}}],["do(",{"_index":425,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["do(data",{"_index":487,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["do(token",{"_index":314,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["docheight",{"_index":436,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["document.bodi",{"_index":434,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document.getelementbyid('readlist",{"_index":435,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["document.getelementbyid('readlist').offsetheight",{"_index":432,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["dynam",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["e2",{"_index":711,"title":{},"body":{"index.html":{}}}],["editor",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["editorcont",{"_index":565,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["editoropt",{"_index":566,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["email",{"_index":196,"title":{},"body":{"components/AuthenticationComponent.html":{},"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":219,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailvalidator(new",{"_index":360,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["emailvalidator(regexp",{"_index":349,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["emailvalidatordirect",{"_index":61,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enabletrac",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":710,"title":{},"body":{"index.html":{}}}],["enter",{"_index":259,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["entity/stori",{"_index":418,"title":{},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["environ",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":178,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["errormessag",{"_index":395,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["exampl",{"_index":585,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["execut",{"_index":707,"title":{},"body":{"index.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["fail",{"_index":332,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["failur",{"_index":334,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["fals",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":703,"title":{},"body":{"index.html":{}}}],["flexlayoutmodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["focu",{"_index":596,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["formbuild",{"_index":189,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol",{"_index":218,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["formcontrol(this.authentication.password",{"_index":238,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol(this.authentication.usernam",{"_index":235,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["formcontrol(this.ckeditorcont",{"_index":593,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["formgroup",{"_index":210,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{}}}],["formsmodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/WriteBoardModule.html":{}}}],["full",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":335,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":713,"title":{},"body":{"index.html":{}}}],["gener",{"_index":680,"title":{},"body":{"index.html":{}}}],["get",{"_index":677,"title":{"index.html":{}},"body":{}}],["getapppath",{"_index":468,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["getemailerror",{"_index":184,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getpassword",{"_index":216,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getpassworderror",{"_index":185,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["getstori",{"_index":399,"title":{},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["getstory(storyid",{"_index":474,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["geturl",{"_index":522,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["getusernam",{"_index":214,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["go",{"_index":716,"title":{},"body":{"index.html":{}}}],["graph",{"_index":722,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":282,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["handleerror(error",{"_index":477,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handleerror(result",{"_index":288,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlelogin",{"_index":283,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlelogin(data",{"_index":291,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["handlestorydetailerror",{"_index":469,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror(error",{"_index":479,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header",{"_index":485,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["help",{"_index":714,"title":{},"body":{"index.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["html.clientheight",{"_index":439,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["html.offsetheight",{"_index":441,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["html.scrollheight",{"_index":440,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["http",{"_index":285,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["http://localhost:4200",{"_index":690,"title":{},"body":{"index.html":{}}}],["http://taleaddaapi.herokuapp.com/taleadda/authent",{"_index":526,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["httpclient",{"_index":286,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["httpclientmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":484,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["https://taleaddaapi.herokuapp.com/taleadda/stori",{"_index":527,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["i'))(control",{"_index":362,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["identifi",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["infrastructur",{"_index":496,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["inject",{"_index":141,"title":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{},"coverage.html":{},"overview.html":{}}}],["innerheight",{"_index":429,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["input",{"_index":338,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["insert",{"_index":589,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["instanc",{"_index":519,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["instead",{"_index":497,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["interfac",{"_index":525,"title":{"interfaces/ServiceURL.html":{},"interfaces/Story.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"overview.html":{}}}],["invalid",{"_index":255,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["isact",{"_index":365,"title":{},"body":{"components/LayoutComponent.html":{}}}],["iscollaps",{"_index":366,"title":{},"body":{"components/LayoutComponent.html":{}}}],["isloggedin",{"_index":165,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isprogress",{"_index":400,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["isselect",{"_index":368,"title":{},"body":{"components/LayoutComponent.html":{}}}],["isselected(path",{"_index":371,"title":{},"body":{"components/LayoutComponent.html":{}}}],["js",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(activatedroute.snapshot.param",{"_index":551,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["karma",{"_index":709,"title":{},"body":{"index.html":{}}}],["key",{"_index":351,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["keyboardwriteboard",{"_index":390,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/LayoutComponent.html":{},"dependencies.html":{}}}],["layout'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["layout.component.html",{"_index":364,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout/layout.compon",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutcompon",{"_index":53,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["lenght",{"_index":199,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["like",{"_index":537,"title":{},"body":{"interfaces/Story.html":{}}}],["liter",{"_index":344,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["load",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["loadchildren",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["localstorage.getitem('token",{"_index":309,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem('usernam",{"_index":322,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('token",{"_index":318,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('usernam",{"_index":319,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('token",{"_index":328,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem('usernam",{"_index":329,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["locat",{"_index":367,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.indexof(path",{"_index":383,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.split",{"_index":505,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["location.origin",{"_index":503,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["log",{"_index":495,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["logedin",{"_index":246,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["loggedin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":179,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["login(usernam",{"_index":295,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["logindataurl",{"_index":281,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["loginform",{"_index":180,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["loginurl",{"_index":512,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["logout",{"_index":284,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["mainrout",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map(r",{"_index":312,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["matbuttonmodul",{"_index":269,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["matcardmodul",{"_index":461,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["match",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdividermodul",{"_index":462,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["matformfieldmodul",{"_index":270,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{}}}],["math.max(body.scrollheight",{"_index":437,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["maticonmodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodul",{"_index":271,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["matlistmodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodul",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressbarmodul",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/ReadBoardModule.html":{}}}],["matsidenavmodul",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":391,"title":{},"body":{"components/LayoutComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["method",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["minimum",{"_index":198,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["miscellan",{"_index":674,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedd",{"_index":538,"title":{},"body":{"interfaces/Story.html":{}}}],["modul",{"_index":66,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":715,"title":{},"body":{"index.html":{}}}],["multi",{"_index":358,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["my_library_booksreadboard",{"_index":389,"title":{},"body":{"components/LayoutComponent.html":{}}}],["name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":689,"title":{},"body":{"index.html":{}}}],["new",{"_index":234,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["ng",{"_index":686,"title":{},"body":{"index.html":{}}}],["ng_valid",{"_index":347,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["ngoninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["ngx",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["null",{"_index":353,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["number",{"_index":475,"title":{},"body":{"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{}}}],["object",{"_index":587,"title":{},"body":{"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{}}}],["observable.of(tru",{"_index":320,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["observable.throw('authent",{"_index":333,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["observable.throw(error",{"_index":500,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["onchang",{"_index":345,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{}}}],["oncontentchang",{"_index":568,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oncontentchanged(undefin",{"_index":575,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorblur",{"_index":569,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorblured(quil",{"_index":577,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorcr",{"_index":570,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorcreated(quil",{"_index":579,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorfocus",{"_index":571,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oneditorfocused(quil",{"_index":581,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["oninit",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["onlogin",{"_index":186,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["onscrol",{"_index":401,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["openstori",{"_index":402,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["openstory(storyid",{"_index":411,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["option",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":724,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":641,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":550,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":166,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["path",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["patharray",{"_index":504,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["pathmatch",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterninvalid",{"_index":356,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["placehold",{"_index":588,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["platformbrowserdynam",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["popper",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["privat",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["prod",{"_index":702,"title":{},"body":{"index.html":{}}}],["product",{"_index":704,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":679,"title":{},"body":{"index.html":{}}}],["promis",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":164,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["protractor",{"_index":712,"title":{},"body":{"index.html":{}}}],["provid",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["public",{"_index":177,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["publish",{"_index":606,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["quill",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["quilleditormodul",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{}}}],["ra",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["re",{"_index":258,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["reactiveformsmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["read",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["readadda",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["readboard",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ReadBoardComponent.html":{}}}],["readboard'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["readboard.compon",{"_index":458,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["readboard.component.html",{"_index":394,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["readboard.routing.modul",{"_index":459,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["readboard.servic",{"_index":419,"title":{},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{}}}],["readboardcompon",{"_index":56,"title":{"components/ReadBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readboardmodul",{"_index":451,"title":{"modules/ReadBoardModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardrout",{"_index":464,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["readboardroutingmodul",{"_index":456,"title":{"modules/ReadBoardRoutingModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardservic",{"_index":393,"title":{"injectables/ReadBoardService.html":{}},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readi",{"_index":599,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["readm",{"_index":718,"title":{},"body":{"index.html":{}}}],["real",{"_index":490,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["redirect",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirectto",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexp",{"_index":350,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["regexp('(?:[a",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(this.emailvalid",{"_index":361,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexp.test(valu",{"_index":355,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexpattern",{"_index":220,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["regist",{"_index":181,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["relativeto",{"_index":445,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["reload",{"_index":692,"title":{},"body":{"index.html":{}}}],["remot",{"_index":494,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["requir",{"_index":194,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["reset",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["respons",{"_index":289,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["restendpointurl",{"_index":509,"title":{"classes/RestEndPointURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["result",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{}}}],["rout",{"_index":124,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":144,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["routermodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":279,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forchild(readboardrout",{"_index":465,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["routermodule.forchild(writeboardrout",{"_index":617,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forroot",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":685,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":305,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/catch",{"_index":304,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/do",{"_index":303,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/map",{"_index":302,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["rxjs/observ",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthenticationService.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{}}}],["scaffold",{"_index":694,"title":{},"body":{"index.html":{}}}],["search",{"_index":604,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["security/authent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{}}}],["security/authentication.compon",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["security/authentication.modul",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["security/authentication.servic",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/WriteBoardComponent.html":{}}}],["security/authguard",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["selectedstori",{"_index":396,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["send",{"_index":493,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["serv",{"_index":687,"title":{},"body":{"index.html":{}}}],["server",{"_index":501,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["servic",{"_index":307,"title":{},"body":{"injectables/AuthenticationService.html":{},"dependencies.html":{}}}],["serviceurl",{"_index":511,"title":{"interfaces/ServiceURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["serviceurlconfig",{"_index":301,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{}}}],["showlogin",{"_index":187,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["showprogressbar",{"_index":397,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["showregist",{"_index":188,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["sign",{"_index":254,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["simplechang",{"_index":346,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["sing",{"_index":260,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"index.html":{}}}],["src/.../authentication.service.t",{"_index":676,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../emailvalidator.t",{"_index":675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regexpattern.t",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.module.t",{"_index":123,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/entity/story.t",{"_index":532,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.t",{"_index":363,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:15",{"_index":380,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:16",{"_index":381,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:17",{"_index":379,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:18",{"_index":382,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:19",{"_index":370,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:21",{"_index":378,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:23",{"_index":375,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:27",{"_index":372,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:32",{"_index":374,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:36",{"_index":373,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:40",{"_index":376,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/layout/layout.component.ts:44",{"_index":377,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/readboard/readboard.component.t",{"_index":392,"title":{},"body":{"components/ReadBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.component.ts:13",{"_index":417,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:14",{"_index":415,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:15",{"_index":414,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:16",{"_index":405,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:18",{"_index":409,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:23",{"_index":408,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:27",{"_index":407,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:37",{"_index":410,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.component.ts:46",{"_index":412,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["src/app/readboard/readboard.module.t",{"_index":457,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["src/app/readboard/readboard.routing.module.t",{"_index":463,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["src/app/readboard/readboard.service.t",{"_index":466,"title":{},"body":{"injectables/ReadBoardService.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.service.ts:11",{"_index":471,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:15",{"_index":482,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:17",{"_index":473,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:27",{"_index":478,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:34",{"_index":472,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:44",{"_index":476,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:51",{"_index":480,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/storyboard.component.t",{"_index":541,"title":{},"body":{"components/StoryBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/storyboard.component.ts:13",{"_index":548,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:14",{"_index":547,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:15",{"_index":544,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:22",{"_index":546,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:27",{"_index":545,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/security/authentication.component.t",{"_index":174,"title":{},"body":{"components/AuthenticationComponent.html":{},"coverage.html":{}}}],["src/app/security/authentication.component.ts:16",{"_index":207,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:17",{"_index":212,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:18",{"_index":208,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:19",{"_index":211,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:20",{"_index":209,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:21",{"_index":190,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:23",{"_index":205,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:29",{"_index":201,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:36",{"_index":191,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:48",{"_index":202,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:67",{"_index":204,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:72",{"_index":203,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:77",{"_index":215,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:81",{"_index":217,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:85",{"_index":192,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.component.ts:91",{"_index":197,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["src/app/security/authentication.module.t",{"_index":266,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/security/authentication.routing.module.t",{"_index":277,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["src/app/security/authentication.service.t",{"_index":280,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/security/authentication.service.ts:15",{"_index":299,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:16",{"_index":287,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:25",{"_index":296,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:35",{"_index":297,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:47",{"_index":294,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:54",{"_index":292,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.service.ts:76",{"_index":290,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/security/authentication.t",{"_index":163,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{}}}],["src/app/security/authentication.ts:5",{"_index":171,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:6",{"_index":170,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:7",{"_index":168,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authguard.t",{"_index":142,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/security/authguard.ts:14",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/security/authguard.ts:7",{"_index":145,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/serviceurlconfig.t",{"_index":510,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["src/app/serviceurlconfig.ts:10",{"_index":561,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:19",{"_index":529,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:2",{"_index":560,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:20",{"_index":530,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:21",{"_index":531,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:25",{"_index":556,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:3",{"_index":559,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:30",{"_index":557,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:35",{"_index":558,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:42",{"_index":514,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:43",{"_index":515,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:44",{"_index":517,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/validator/emailvalidator.t",{"_index":337,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validator/emailvalidator.ts:20",{"_index":339,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/emailvalidator.ts:22",{"_index":342,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/regexpattern.t",{"_index":635,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/writeboard/writeboard.component.t",{"_index":562,"title":{},"body":{"components/WriteBoardComponent.html":{},"coverage.html":{}}}],["src/app/writeboard/writeboard.component.ts:15",{"_index":583,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:16",{"_index":591,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:18",{"_index":584,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:19",{"_index":586,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:20",{"_index":590,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:22",{"_index":572,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:26",{"_index":574,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:31",{"_index":573,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:37",{"_index":578,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:41",{"_index":582,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:45",{"_index":580,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.component.ts:50",{"_index":576,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["src/app/writeboard/writeboard.module.t",{"_index":612,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["src/app/writeboard/writeboard.routing.module.t",{"_index":615,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":637,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":638,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":678,"title":{"index.html":{}},"body":{}}],["state",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["statement",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":518,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["store",{"_index":699,"title":{},"body":{"index.html":{}}}],["stori",{"_index":398,"title":{"interfaces/Story.html":{}},"body":{"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{}}}],["story.dislik",{"_index":450,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.lik",{"_index":449,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.storyshortdescript",{"_index":448,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["story.titl",{"_index":447,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["storyboard",{"_index":554,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboard.compon",{"_index":460,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["storyboard.component.html",{"_index":542,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboardcompon",{"_index":58,"title":{"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyid",{"_index":413,"title":{},"body":{"components/ReadBoardComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storylisturl",{"_index":513,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storyshortdescript",{"_index":539,"title":{},"body":{"interfaces/Story.html":{}}}],["storyurl",{"_index":507,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{}}}],["storyurl(storyid",{"_index":516,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["string",{"_index":169,"title":{},"body":{"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"components/WriteBoardComponent.html":{}}}],["subscrib",{"_index":243,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/ReadBoardComponent.html":{}}}],["success",{"_index":331,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["support",{"_index":719,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":720,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":640,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":639,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":605,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["templat",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["templateurl",{"_index":175,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["test",{"_index":706,"title":{},"body":{"index.html":{}}}],["testurl",{"_index":521,"title":{"classes/TestURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["text",{"_index":601,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["this._authenticationservice.isloggedin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/LayoutComponent.html":{}}}],["this._authenticationservice.login(this.loginform.value.usernam",{"_index":242,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this._authenticationservice.logout().subscribe((stat",{"_index":385,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this._readboardservice.getstori",{"_index":424,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this._readboardservice.getstory(this.storyid).subscrib",{"_index":555,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.authent",{"_index":224,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.isloggedin",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.password",{"_index":232,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.authentication.usernam",{"_index":230,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["this.createform",{"_index":225,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["this.editor",{"_index":597,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["this.emailvalid",{"_index":359,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["this.error",{"_index":244,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.errormessag",{"_index":427,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.formbuilder.group",{"_index":229,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.getstori",{"_index":420,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.handlelogin(r",{"_index":313,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.get(this._storylisturl",{"_index":486,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["this.http.post(this.logindataurl",{"_index":311,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.inst",{"_index":523,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.instance.serviceurl",{"_index":524,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.iscollaps",{"_index":388,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.isloggedin",{"_index":173,"title":{},"body":{"injectables/Authentication.html":{},"injectables/AuthenticationService.html":{}}}],["this.login",{"_index":227,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform",{"_index":228,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.get('password",{"_index":249,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.get('usernam",{"_index":248,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.value.password",{"_index":241,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.loginform.value.usernam",{"_index":240,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.password.haserror('minlength",{"_index":253,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.password.haserror('requir",{"_index":252,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.regist",{"_index":226,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.rout",{"_index":446,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.router.navigate(['/authent",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.router.navigate(['/readboard",{"_index":386,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.router.navigate(['readboard",{"_index":247,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.router.navigate(['stori",{"_index":444,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.serviceurl",{"_index":520,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.showprogressbar",{"_index":421,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.stori",{"_index":423,"title":{},"body":{"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{}}}],["this.stories.concat(stori",{"_index":426,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["this.storyid",{"_index":552,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.token",{"_index":308,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.username.haserror('email",{"_index":251,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.username.haserror('requir",{"_index":250,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["this.writestoryform",{"_index":592,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["titl",{"_index":540,"title":{},"body":{"interfaces/Story.html":{},"components/WriteBoardComponent.html":{}}}],["togglemenu",{"_index":369,"title":{},"body":{"components/LayoutComponent.html":{}}}],["token",{"_index":182,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["true",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/ReadBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"components/WriteBoardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":668,"title":{},"body":{"dependencies.html":{}}}],["undefin",{"_index":317,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":705,"title":{},"body":{"index.html":{}}}],["up",{"_index":261,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["url",{"_index":528,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["urlmapp",{"_index":300,"title":{"classes/URLMapper.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["urlmapper.geturl().loginurl",{"_index":298,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["urlmapper.geturl().storylisturl",{"_index":481,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["us",{"_index":695,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":357,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["user",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["usernam",{"_index":167,"title":{},"body":{"injectables/Authentication.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{}}}],["valid",{"_index":195,"title":{},"body":{"components/AuthenticationComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/WriteBoardComponent.html":{}}}],["validate(control",{"_index":340,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validator/emailvalid",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["validator/regexpattern",{"_index":221,"title":{},"body":{"components/AuthenticationComponent.html":{},"components/WriteBoardComponent.html":{}}}],["validatorfn",{"_index":348,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validators.compose([validators.email",{"_index":231,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.compose([validators.minlength(4",{"_index":233,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.email",{"_index":237,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["validators.requir",{"_index":236,"title":{},"body":{"components/AuthenticationComponent.html":{}}}],["valu",{"_index":193,"title":{},"body":{"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"injectables/ReadBoardService.html":{},"components/WriteBoardComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["variabl",{"_index":634,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":682,"title":{},"body":{"index.html":{}}}],["via",{"_index":708,"title":{},"body":{"index.html":{}}}],["void",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"injectables/AuthenticationService.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"classes/RestEndPointURL.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["webpack",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["window",{"_index":430,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["window.innerheight",{"_index":431,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["window.pageyoffset",{"_index":443,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["windowbottom",{"_index":442,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["windowheight",{"_index":428,"title":{},"body":{"components/ReadBoardComponent.html":{}}}],["world",{"_index":491,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["write",{"_index":603,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["writeboard",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{}}}],["writeboard.compon",{"_index":613,"title":{},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["writeboard.component.html",{"_index":563,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["writeboard.routing.modul",{"_index":614,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["writeboardcompon",{"_index":59,"title":{"components/WriteBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthenticationComponent.html":{},"components/LayoutComponent.html":{},"components/ReadBoardComponent.html":{},"components/StoryBoardComponent.html":{},"components/WriteBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["writeboardmodul",{"_index":607,"title":{"modules/WriteBoardModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["writeboardrout",{"_index":616,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["writeboardroutingmodul",{"_index":611,"title":{"modules/WriteBoardRoutingModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["writestoryform",{"_index":567,"title":{},"body":{"components/WriteBoardComponent.html":{}}}],["x01",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\\\\\[\\x01",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                read-adda\n            \n\n\n\n            \n                template\n                Loading..\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from './security/authentication.service';\n\n@Component({\n  selector: 'read-adda',\n  template: 'Loading..',\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(private _authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    console.info('Loading ReadAdda');\n    console.info('Is LoggedIn = ' + this._authenticationService.isLoggedIn());\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                EmailValidatorDirective\n                            \n                            \n                                LayoutComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     Authentication\n                            \n                            \n                                     AuthenticationService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from './../environments/environment';\nimport { AuthenticationModule } from './security/authentication.module';\nimport { Authentication } from './security/authentication';\nimport { AuthenticationService } from './security/authentication.service';\nimport { AuthGuard } from './security/authGuard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { EmailValidatorDirective } from './validator/emailValidator';\nimport { QuillEditorModule } from 'ngx-quill-editor';\nimport {MatToolbarModule, MatMenuModule, MatIconModule, MatSidenavModule, MatListModule, MatProgressBarModule} from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    EmailValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    QuillEditorModule,\n    MatToolbarModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatProgressBarModule\n  ],\n  exports: [\n    MatSidenavModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule\n  ],\n  providers: [AuthGuard, Authentication, AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {Routes, RouterModule} from '@angular/router';\n\nimport {AuthenticationComponent} from './security/authentication.component';\nimport {AuthGuard} from './security/authGuard';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\n\nconst MainRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/readBoard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'readBoard',\n    loadChildren: 'app/readboard/readboard.module#ReadBoardModule'\n  },\n  {\n    path: 'writeboard',\n    loadChildren: 'app/writeboard/writeboard.module#WriteBoardModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: 'app/security/authentication.module#AuthenticationModule',\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      MainRoutes,\n      {\n        enableTracing: true // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authGuard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authGuard.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Authentication } from '../security/authentication';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authentication: Authentication,\n        private router: Router\n      ) {}\n\n      canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable | Promise | boolean {\n      console.log('AuthGuard ------ ' + this.authentication.isLoggedIn);\n      if (!this.authentication.isLoggedIn) {\n        // redirect the user\n        this.router.navigate(['/authentication']);\n        return false;\n      }\n      return true;\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Authentication.html":{"url":"injectables/Authentication.html","title":"injectable - Authentication","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Authentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Authentication {\n  username: string;\n  password: string;\n  isLoggedIn: boolean;\n  constructor() {\n        console.info('Auth Constructor ' + this.isLoggedIn);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthenticationComponent.html":{"url":"components/AuthenticationComponent.html","title":"component - AuthenticationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AuthenticationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/security/authentication.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                authentication\n            \n\n\n\n\n            \n                templateUrl\n                authentication.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                error\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                loginForm\n                            \n                            \n                                register\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                getEmailError\n                            \n                            \n                                getPasswordError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogin\n                            \n                            \n                                showLogin\n                            \n                            \n                                showRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, _authenticationService: AuthenticationService, router: Router, formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEmailError\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEmailError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Value required\" | \"Not a valid email\" | \"\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPasswordError\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPasswordError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     \"Value required\" | \"\" | \"Minimum lenght is 4\"\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowLogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:72\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowRegister()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authentication:     Authentication\n\n                    \n                \n                    \n                        \n                            Type :     Authentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        login:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            register\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        register:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/security/authentication.component.ts:77\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/security/authentication.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../security/authentication.service';\nimport {Authentication} from '../security/authentication';\nimport {FormGroup, FormControl, Validators, FormBuilder} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {emailValidator} from '../validator/emailValidator';\nimport {regexPattern} from '../validator/regexPattern';\n\n@Component({\n  selector: 'authentication',\n  templateUrl: 'authentication.component.html'\n})\n\nexport class AuthenticationComponent implements OnInit {\n\n  error = false;\n  token: any;\n  isLoggedIn = false;\n  register = false;\n  login = true;\n  loginForm: FormGroup;\n\n  constructor(public authentication: Authentication,\n              private _authenticationService: AuthenticationService, private router: Router, private  formBuilder: FormBuilder) {\n    console.info('Auth Comp Constructor');\n    this.authentication = authentication;\n  }\n\n  ngOnInit() {\n    console.info('Loading Authentication');\n    this.createForm();\n    this.register = false;\n    this.login = true;\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group(\n      {\n        'username': [this.authentication.username, Validators.compose([Validators.email])],\n        'password': [this.authentication.password, Validators.compose([Validators.minLength(4)])]\n      });\n    /*this.loginForm = new FormGroup({\n      'username': new FormControl(this.authentication.username, [Validators.required, Validators.email]),\n      'password': new FormControl(this.authentication.password, Validators.required)\n    });*/\n  }\n\n  onLogin() {\n    console.info('Login Component ');\n    console.info('Login username = ' + this.loginForm.value.username);\n    console.info('Login password = ' + this.loginForm.value.password);\n\n    this._authenticationService.login(this.loginForm.value.username, this.loginForm.value.password)\n      .subscribe(\n        token => {\n          if (token === '') {\n            this.error = true;\n          } else {\n            this.error = false;\n            console.info('No error === ' + token);\n            console.info('Is LogedIn === ' + this.authentication.isLoggedIn);\n            this.router.navigate(['readBoard']);\n          }\n        });\n  }\n\n  showRegister() {\n    this.login = false;\n    this.register = true;\n  }\n\n  showLogin() {\n    this.login = true;\n    this.register = false;\n  }\n\n  get username() {\n    return this.loginForm.get('username');\n  }\n\n  get password() {\n    return this.loginForm.get('password');\n  }\n\n  getEmailError() {\n    return this.username.hasError('required') ? 'Value required' :\n      this.username.hasError('email') ? 'Not a valid email' :\n        '';\n  }\n\n  getPasswordError() {\n    return this.password.hasError('required') ? 'Value required' :\n      this.password.hasError('minlength') ? 'Minimum lenght is 4' :\n        '';\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n        \n            \n                Sign In\n            \n            \n              \n                  \n                    \n                    {{getEmailError()}}\n                  \n              \n              \n                \n                  \n                  {{getPasswordError()}}\n                \n              \n            \n            Invalid login\n            \n                Create New Account\n                Login\n            \n        \n\n\n\n\n\n\n    \n        \n\n            Register\n        \n        \n            \n                Name:\n                \n            -->\n\n          \n            \n              \n              {{getEmailError()}}\n            \n          \n          \n            \n              \n              {{getPasswordError()}}\n            \n          \n          \n            \n              \n              {{getPasswordError()}}\n            \n          \n\n           \n                Email :\n                \n            \n            \n                Password:\n                \n            \n            \n                Re-enter Password:\n                \n            -->\n        \n        \n            Sign-In\n            Sing Up\n        \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    Sign In                                                                                                {{getEmailError()}}                                                                                                  {{getPasswordError()}}                                                      Invalid login                            Create New Account                Login                                            Register                                            Name:                            -->                                                  {{getEmailError()}}                                                                        {{getPasswordError()}}                                                                        {{getPasswordError()}}                                                 Email :                                                        Password:                                                        Re-enter Password:                            -->                            Sign-In            Sing Up            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthenticationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthenticationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticationRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { Authentication } from './authentication';\nimport { AuthGuard } from './authGuard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication.routing.module';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    CdkTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: []\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationRoutingModule.html":{"url":"modules/AuthenticationRoutingModule.html","title":"module - AuthenticationRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { NgModule }  from '@angular/core';\n\nconst AuthenticationRoutes: Routes = [\n    \n    {\n        path: '',        \n        component: AuthenticationComponent,\n    }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(AuthenticationRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class AuthenticationRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loginDataUrl\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleLogin\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(result: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        result\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleLogin(data: any, username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     String\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loginDataUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginDataUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().loginURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Authentication} from './authentication';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\n\nlet loggedIn: boolean;\n\n@Injectable()\nexport class AuthenticationService {\n  token: string;\n  private loginDataUrl = URLMapper.getURL().loginURL();\n\n  constructor(private authentication: Authentication, private http: HttpClient) {\n    console.log('Authentication Service constructor');\n    this.token = localStorage.getItem('token');\n    this.isLoggedIn();\n    loggedIn = this.authentication.isLoggedIn;\n  }\n\n  login(username: string, password: string)  {\n    console.log(this.loginDataUrl);\n    this.authentication.username = username;\n    this.authentication.password = password;\n    return this.http.post(this.loginDataUrl, this.authentication)\n      .map(res => this.handleLogin(res, username, password))\n      .do(token => console.log(token))\n      .catch(this.handleError);\n  }\n\n  logout() {\n\n    this.token = undefined;\n    localStorage.removeItem('token');\n    localStorage.removeItem('username');\n    this.authentication.isLoggedIn = false;\n    this.authentication.username = '';\n    this.authentication.password = '';\n    loggedIn = false;\n    return Observable.of(true);\n  }\n\n  isLoggedIn() {\n    console.log(localStorage.getItem('token'));\n    this.authentication.username = localStorage.getItem('username');\n    this.authentication.isLoggedIn = !!localStorage.getItem('token');\n    loggedIn = !!localStorage.getItem('token');\n  }\n\n  private handleLogin(data: any, username: string, password: string): String {\n    const auth = data\n    console.log('Passed parameter :' + username + ' ' + password);\n    console.log('Auth parameter :' + auth.username + ' ' + auth.password);\n    if (auth.username === username && auth.password === password) {\n      this.token = 'token';\n      this.authentication.username = username;\n      this.authentication.isLoggedIn = true;\n      localStorage.setItem('token', this.token);\n      localStorage.setItem('username', username);\n      this.authentication.password = '';\n      console.log('Is LoggedIn success :' + this.authentication.isLoggedIn);\n      loggedIn = true;\n      return this.token;\n    } else {\n      this.authentication.isLoggedIn = false;\n      console.log('Is LoggedIn failed :' + this.authentication.isLoggedIn);\n      loggedIn = false;\n      return '';\n    }\n  }\n\n  private handleError(result: Response) {\n    return Observable.throw('authentication failure' + result);\n  }\n}\n\nexport function isLoggedIn() {\n  console.log('----' + loggedIn + '----');\n  return loggedIn;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmailValidatorDirective.html":{"url":"directives/EmailValidatorDirective.html","title":"directive - EmailValidatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EmailValidatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/validator/emailValidator.ts\n        \n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , : , : true }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailValidator\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        emailValidator\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, FormGroup } from '@angular/forms';\n\nexport function emailValidator(regexp: RegExp): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const value = control.value;\n    if (value === '') {\n      return null;\n    }\n\n    console.info('VALUE ===== ' + regexp.test(value))\n    return !regexp.test(value) ? { 'patternInvalid': { regexp } } : null;\n  };\n}\n@Directive({\n  selector: '[appEmail]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidatorDirective, multi: true}]\n})\nexport class EmailValidatorDirective implements Validator {\n  @Input() emailValidator: string;\n\n  validate(control: AbstractControl): {[key: string]: any} {\n    return this.emailValidator ? emailValidator(new RegExp(this.emailValidator, 'i'))(control)\n      : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-layout\n            \n\n\n\n\n            \n                templateUrl\n                layout.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authentication\n                            \n                            \n                                error\n                            \n                            \n                                isActive\n                            \n                            \n                                isCollapsed\n                            \n                            \n                                location\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isSelected\n                            \n                            \n                                loggedIn\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onchange\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, _authenticationService: AuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/layout/layout.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(path: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nloggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:36\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onchange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonchange()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleMenu\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleMenu()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authentication:     Authentication\n\n                    \n                \n                    \n                        \n                            Type :     Authentication\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isActive:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCollapsed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCollapsed:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     Location\n\n                    \n                \n                    \n                        \n                            Type :     Location\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, NgModule, OnInit} from '@angular/core';\nimport {AuthenticationService} from '../security/authentication.service';\nimport {Router} from '@angular/router';\nimport {Authentication} from '../security/authentication';\n\n\n\n@Component({\n  selector: 'ra-layout',\n  templateUrl: 'layout.component.html'\n})\n\nexport class LayoutComponent implements OnInit {\n\n  isActive = false;\n  location: Location;\n  error = false;\n  token: any;\n  isCollapsed = false;\n\n  constructor(public authentication: Authentication, private _authenticationService: AuthenticationService, private router: Router) {}\n\n  ngOnInit() {\n      console.info('Loading Layout');\n  }\n\n  isSelected(path): boolean {\n    return location.href.indexOf(path) !== -1;\n  }\n\n\n  logout() {\n    this._authenticationService.logout().subscribe((stat: boolean) => {this.router.navigate(['/readBoard']); });\n  }\n\n  loggedIn() {\n    this._authenticationService.isLoggedIn();\n  }\n\n  onchange() {\n    console.log('change');\n  }\n\n  toggleMenu() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n}\n\n\n\n    \n\n    \n        \n  \n    \n      my_library_booksReadBoard\n      keyboardWriteBoard\n      Login\n      Logout\n    \n  \n\n  \n    \n      \n        \n          menu\n        \n\n      \n\n      ReadAdda\n\n      \n        \n          \n            \n              my_library_booksReadBoard\n            \n          \n          \n            \n              keyboardWriteBoard\n            \n          \n        \n        \n        \n        Login\n        Logout\n        \n      \n\n    \n    \n      \n      \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            my_library_booksReadBoard      keyboardWriteBoard      Login      Logout                                    menu                    ReadAdda                                                  my_library_booksReadBoard                                                          keyboardWriteBoard                                                      Login        Logout                                                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ReadBoardComponent.html":{"url":"components/ReadBoardComponent.html","title":"component - ReadBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ReadBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/readboard/readboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n            \n                selector\n                readboard\n            \n\n\n\n\n            \n                templateUrl\n                readboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                selectedStory\n                            \n                            \n                                showProgressBar\n                            \n                            \n                                stories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStories\n                            \n                            \n                                isProgressing\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onScroll\n                            \n                            \n                                openStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_readboardService: ReadBoardService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _readboardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isProgressing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisProgressing()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onScroll\n                            \n                            \n                        \n                    \n                \n                \n                    \nonScroll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openStory\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenStory(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedStory\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectedStory:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showProgressBar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showProgressBar:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stories\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stories:     Story[]\n\n                    \n                \n                    \n                        \n                            Type :     Story[]\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ReadBoardService } from './readboard.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'readboard',\n  templateUrl: 'readboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class ReadBoardComponent implements OnInit {\n  stories: Story[] = new Array();\n  selectedStory: Story;\n  errorMessage: string;\n  showProgressBar = false;\n  constructor(private _readboardService: ReadBoardService, private router: Router, private route: ActivatedRoute) { }\n  ngOnInit() {\n      console.info('Loading ReadBoard');\n      this.getStories();\n  }\n\n  isProgressing() {\n      return this.showProgressBar;\n  }\n\n  getStories() {\n      console.info('Loading getStories');\n    console.info('stories' + this.stories);\n    this.showProgressBar = true;\n      this._readboardService.getStories()\n        .do(s => this.showProgressBar = false)\n        .subscribe(\n          stories => this.stories = this.stories.concat(stories),\n          error =>  this.errorMessage = error);\n  }\n  onScroll() {\n    const windowHeight = 'innerHeight' in window ? window.innerHeight : document.getElementById('readList').offsetHeight;\n    const body = document.body, html = document.getElementById('readList');\n    const docHeight = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight,  html.scrollHeight, html.offsetHeight);\n    const windowBottom = windowHeight + window.pageYOffset;\n    if (windowBottom >= docHeight) {\n        this.getStories();\n    }\n  }\n  openStory(storyId) {\n      this.router.navigate(['story', {storyId: storyId}], {relativeTo: this.route});\n\n  }\n}\n\n    \n\n    \n        \n\n  \n\n\n\n    \n         \n            {{story.title}}\n            {{story.title}}\n        \n        \n        {{story.storyShortDescription}}\n        \n        \n            {{story.likes}}\n            {{story.disLikes}}\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                           {{story.title}}            {{story.title}}                        {{story.storyShortDescription}}                            {{story.likes}}            {{story.disLikes}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'ReadBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardModule.html":{"url":"modules/ReadBoardModule.html","title":"module - ReadBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ReadBoardComponent\n                            \n                            \n                                StoryBoardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReadBoardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ReadBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReadBoardComponent } from './readboard.component';\nimport { ReadBoardService } from './readboard.service';\nimport { CommonModule } from '@angular/common';\nimport { ReadBoardRoutingModule } from './readboard.routing.module';\nimport { StoryBoardComponent } from './storyboard.component';\nimport {MatCardModule, MatDividerModule, MatFormFieldModule, MatProgressBarModule} from '@angular/material';\n\n@NgModule({\n  declarations: [\n    ReadBoardComponent,\n    StoryBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    ReadBoardRoutingModule,\n    MatFormFieldModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatDividerModule\n  ],\n  providers: [ReadBoardService]\n})\nexport class ReadBoardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardRoutingModule.html":{"url":"modules/ReadBoardRoutingModule.html","title":"module - ReadBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { ReadBoardComponent } from './readboard.component';\nimport { StoryBoardComponent } from './storyboard.component';\nimport { NgModule } from '@angular/core';\n\nconst ReadBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: ReadBoardComponent\n  },\n  {\n    path: ':storyId',\n    component: StoryBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(ReadBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class ReadBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadBoardService.html":{"url":"injectables/ReadBoardService.html","title":"injectable - ReadBoardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReadBoardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/readboard/readboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storyListUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAppPath\n                            \n                            \n                                getStories\n                            \n                            \n                                getStory\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleStoryDetailError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAppPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAppPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:17\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory(storyID: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyID\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleStoryDetailError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleStoryDetailError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storyListUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _storyListUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().storyListURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Story} from '../entity/story';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport {Observable} from 'rxjs/Observable';\n@Injectable()\nexport class ReadBoardService {\n  constructor(private http: HttpClient) {\n  }\n\n  private _storyListUrl = URLMapper.getURL().storyListURL();\n\n  getStories() {\n    console.log(this._storyListUrl);\n    const httpHeader = new Headers();\n\n    return this.http.get(this._storyListUrl)\n      .do(data => console.log(data))\n      //.delay(5000)\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n\n  private getAppPath() {\n    console.log('HOST :' + location.origin);\n    const pathArray = location.href.split('/');\n    let appPath = '/';\n    for (let i = 1; i (storyUrl)\n      .do(data => console.log(data))\n      .catch(this.handleStoryDetailError);\n  }\n\n  private handleStoryDetailError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestEndPointURL.html":{"url":"classes/RestEndPointURL.html","title":"class - RestEndPointURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestEndPointURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceURL.html":{"url":"interfaces/ServiceURL.html","title":"interface - ServiceURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginURL\n                                \n                                \n                                    storyListURL\n                                \n                                \n                                    storyURL\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authorName\n                                \n                                \n                                        content\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        disLikes\n                                \n                                \n                                        likes\n                                \n                                \n                                        modifiedDate\n                                \n                                \n                                        storyId\n                                \n                                \n                                        storyShortDescription\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorName\n                                    \n                                \n                                \n                                    \n                                        authorName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disLikes\n                                    \n                                \n                                \n                                    \n                                        disLikes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes\n                                    \n                                \n                                \n                                    \n                                        likes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyShortDescription\n                                    \n                                \n                                \n                                    \n                                        storyShortDescription:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Story {\n  storyId: number;\n  title: string;\n  storyShortDescription: string;\n  createdDate: string;\n  modifiedDate: string;\n  authorName: string;\n  likes: number;\n  disLikes: number;\n  content: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoryBoardComponent.html":{"url":"components/StoryBoardComponent.html","title":"component - StoryBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoryBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/readboard/storyboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n\n\n\n\n            \n                templateUrl\n                storyboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                story\n                            \n                            \n                                storyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, _readBoardService: ReadBoardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        _readBoardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            story\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        story:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storyId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {ReadBoardService} from './readboard.service';\n\n\n@Component({\n  templateUrl: 'storyboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class StoryBoardComponent implements OnInit {\n  storyId: number;\n  story: Story;\n  errorMessage: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private _readBoardService: ReadBoardService, private router: Router) {\n    console.log('Query Params === ' + JSON.stringify(activatedRoute.snapshot.params));\n    this.storyId = activatedRoute.snapshot.params['storyId'];\n  }\n\n  ngOnInit() {\n    console.info('Loading StoryBoard');\n    this.getStory();\n  }\n\n  getStory() {\n    console.info('Loading getStory ' + this.storyId);\n    this._readBoardService.getStory(this.storyId).subscribe(\n      story => this.story = story,\n      error => this.errorMessage = error);\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoryBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestURL.html":{"url":"classes/TestURL.html","title":"class - TestURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestURL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/URLMapper.html":{"url":"classes/URLMapper.html","title":"class - URLMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  URLMapper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                instance\n                            \n                            \n                                    Private\n                                serviceURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     URLMapper\n\n                    \n                \n                    \n                        \n                            Type :     URLMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serviceURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceURL:     ServiceURL\n\n                    \n                \n                    \n                        \n                            Type :     ServiceURL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     ServiceURL\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WriteBoardComponent.html":{"url":"components/WriteBoardComponent.html","title":"component - WriteBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WriteBoardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/writeboard/writeboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                writeboard\n            \n\n\n\n\n            \n                templateUrl\n                writeboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ckeditorContent\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                    Public\n                                editorContent\n                            \n                            \n                                    Public\n                                editorOptions\n                            \n                            \n                                writeStoryForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onContentChanged\n                            \n                            \n                                onEditorBlured\n                            \n                            \n                                onEditorCreated\n                            \n                            \n                                onEditorFocused\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/writeboard/writeboard.component.ts:22\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createForm()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onContentChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \nonContentChanged(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorBlured\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorBlured(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorCreated(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEditorFocused\n                            \n                            \n                        \n                    \n                \n                \n                    \nonEditorFocused(quill: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        quill\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ckeditorContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ckeditorContent:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Some html'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorContent:     \n\n                    \n                \n                    \n                        \n                            Default value : `I am Example content`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editorOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorOptions:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    placeholder: 'insert content...'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeStoryForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        writeStoryForm:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/writeboard/writeboard.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { isLoggedIn } from '../security/authentication.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport {emailValidator} from '../validator/emailValidator';\nimport {regexPattern} from '../validator/regexPattern';\n\n@Component({\n  selector: 'writeboard',\n  templateUrl: 'writeboard.component.html'\n})\n\n\nexport class WriteBoardComponent implements OnInit {\n  ckeditorContent = 'Some html';\n  writeStoryForm: FormGroup;\n\n  public editor;\n  public editorContent = `I am Example content`;\n  public editorOptions = {\n    placeholder: 'insert content...'\n  };\n\n  constructor() {}\n\n  ngOnInit() {\n      console.info('Loading WriteBoard');\n      this.createForm();\n  }\n\n  private createForm() {\n    this.writeStoryForm = new FormGroup({\n      'ckeditorContent': new FormControl(this.ckeditorContent),\n    });\n  }\n\n  onEditorBlured(quill) {\n    console.log('editor blur!', quill);\n  }\n\n  onEditorFocused(quill) {\n    console.log('editor focus!', quill);\n  }\n\n  onEditorCreated(quill) {\n    this.editor = quill;\n    console.log('quill is ready! this is current quill instance object', quill);\n  }\n\n  onContentChanged({ quill, html, text }) {\n    console.log('quill content is changed!', quill, html, text);\n  }\n}\n\n    \n\n    \n        \n    \n        Write your story\n        \n            Title:\n            \n        \n\n        -->\n\n\n      \n\n        \n            Search Tags:\n            \n        \n\n        Publish\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Write your story                    Title:                            -->                          Search Tags:                            Publish    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'WriteBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardModule.html":{"url":"modules/WriteBoardModule.html","title":"module - WriteBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WriteBoardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WriteBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {WriteBoardComponent} from './writeboard.component';\nimport {CommonModule} from '@angular/common';\nimport {WriteBoardRoutingModule} from './writeboard.routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\n@NgModule({\n  declarations: [\n    WriteBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    WriteBoardRoutingModule,\n    QuillEditorModule,\n    FormsModule\n  ],\n  providers: []\n})\nexport class WriteBoardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardRoutingModule.html":{"url":"modules/WriteBoardRoutingModule.html","title":"module - WriteBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { WriteBoardComponent } from './writeboard.component';\nimport { NgModule } from '@angular/core';\n\nconst WriteBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: WriteBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(WriteBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class WriteBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                RestEndPointURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                TestURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                URLMapper\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                interface\n            \n            \n                ServiceURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/entity/story.ts\n            \n            \n                interface\n            \n            \n                Story\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutComponent\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.component.ts\n            \n            \n                component\n            \n            \n                ReadBoardComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.service.ts\n            \n            \n                injectable\n            \n            \n                ReadBoardService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/readboard/storyboard.component.ts\n            \n            \n                component\n            \n            \n                StoryBoardComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/security/authGuard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.component.ts\n            \n            \n                component\n            \n            \n                AuthenticationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                function\n            \n            \n                isLoggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                variable\n            \n            \n                loggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.ts\n            \n            \n                injectable\n            \n            \n                Authentication\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                directive\n            \n            \n                EmailValidatorDirective\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                function\n            \n            \n                emailValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/validator/regexPattern.ts\n            \n            \n                variable\n            \n            \n                regexPattern\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/writeboard/writeboard.component.ts\n            \n            \n                component\n            \n            \n                WriteBoardComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/cli : ^6.0.7\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/compiler-cli : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/flex-layout : ^5.0.0-beta.14\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/language-service : ^6.0.3\n        \n            @angular/material : ^6.2.0\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @compodoc/compodoc : ^1.1.3\n        \n            bootstrap : ^4.1.1\n        \n            core-js : ^2.5.7\n        \n            express : ^4.16.3\n        \n            hammerjs : ^2.0.8\n        \n            ngx-quill-editor : ^2.2.2\n        \n            popper : ^1.0.1\n        \n            rxjs : ^6.2.0\n        \n            typescript : 2.7.2\n        \n            webpack : ^4.10.2\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../emailValidator.ts)\n                        \n                        \n                            isLoggedIn   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validator/emailValidator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailValidator(regexp: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regexp\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReadadda\nThis project was generated with Angular CLI version 1.6.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            8 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            12 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            loggedIn   (src/.../authentication.service.ts)\n                        \n                        \n                            regexPattern   (src/.../regexPattern.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n\n    src/app/validator/regexPattern.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            regexPattern\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexPattern:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {email: new RegExp('(?:[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*|\"' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")' +\n    '@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.)' +\n    '{3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])')}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
