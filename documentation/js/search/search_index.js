var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.747,1,1.181]],["body/components/AppComponent.html",[0,1.273,1,1.917,2,0.321,3,0.278,4,1.831,5,1.831,6,0.236,7,2.398,8,1.408,9,2.925,10,1.637,11,3.343,12,2.925,13,4.019,14,2.545,15,4.62,16,0.577,17,1.286,18,3.162,19,1.11,20,2.891,21,2.827,22,1.071,23,2.891,24,1.11,25,0.034,26,1.533,27,1.013,28,1.11,29,4.019,30,2.891,31,0.925,32,1.637,33,0.802,34,0.52,35,2.398,36,0.321,37,0.195,38,2.073,39,1.831,40,1.831,41,2.891,42,2.073,43,2.891,44,1.11,45,2.545,46,2.545,47,1.692,48,3.162,49,1.831,50,1.831,51,1.11,52,1.831,53,1.217,54,2.925,55,1.831,56,1.338,57,1.831,58,1.217,59,1.831,60,1.217,61,1.831,62,1.11,63,1.217,64,1.637,65,1.11,66,1.637,67,1.831,68,0.023,69,0.023]],["title/modules/AppModule.html",[70,0.442,71,1.949]],["body/modules/AppModule.html",[1,2.14,2,0.23,3,0.199,6,0.169,21,2.735,25,0.036,33,1.196,34,0.372,35,1.715,36,0.424,37,0.14,40,2.413,44,0.794,53,2.033,56,2.235,58,2.033,65,1.854,68,0.018,69,0.018,70,0.453,71,3.811,72,0.957,73,2.158,74,1.946,75,1.764,76,1.715,77,1.715,78,1.715,79,1.715,80,1.715,81,2.735,82,2.235,83,2.033,84,1.782,85,1.171,86,1.055,87,1.483,88,3.147,89,1.715,90,1.483,91,1.782,92,0.87,93,3.147,94,1.715,95,2.257,96,2.611,97,1.171,98,1.325,99,2.067,100,1.715,101,3.147,102,2.067,103,3.147,104,2.067,105,2.067,106,1.715,107,1.483,108,2.067,109,1.171,110,2.067,111,1.715,112,1.715,113,2.067,114,2.067,115,2.067,116,2.067,117,2.611,118,1.483,119,1.483,120,1.483,121,0.957,122,1.483,123,1.715,124,1.715,125,1.715,126,1.715,127,1.715,128,1.715,129,1.715,130,1.715,131,1.715,132,1.715,133,1.715,134,1.715,135,1.715,136,2.067]],["title/modules/AppRoutingModule.html",[70,0.442,81,1.742]],["body/modules/AppRoutingModule.html",[1,1.396,2,0.405,3,0.349,6,0.297,25,0.035,33,1.159,34,0.655,51,1.396,64,2.06,68,0.026,69,0.026,70,0.523,81,2.06,82,2.169,83,1.531,91,2.06,92,1.531,98,1.974,106,3.018,112,3.018,121,1.683,137,3.638,138,2.169,139,3.638,140,4.688,141,3.47,142,3.638,143,4.688,144,3.638,145,3.638,146,5.187,147,3.638,148,3.638,149,3.018,150,3.638,151,3.638,152,3.638,153,2.304]],["title/injectables/AuthGuard.html",[82,1.424,154,1.295]],["body/injectables/AuthGuard.html",[2,0.337,3,0.291,6,0.247,8,1.063,16,0.606,17,1.33,19,1.595,22,1.108,24,1.595,25,0.035,26,1.214,27,1.456,28,1.595,31,1.517,33,1.017,34,0.546,36,0.337,37,0.205,68,0.023,69,0.023,82,1.923,83,2.321,92,1.277,111,2.517,149,4.429,153,1.922,154,1.995,155,2.517,156,3.034,157,4.683,158,3.034,159,3.034,160,5.097,161,4.739,162,5.097,163,3.034,164,4.156,165,3.931,166,4.156,167,2.98,168,2.517,169,1.923,170,3.034,171,4.156,172,3.034,173,3.034,174,3.034,175,2.517]],["title/injectables/Authentication.html",[83,1.295,154,1.295]],["body/injectables/Authentication.html",[2,0.408,3,0.352,6,0.299,16,0.732,19,2.109,22,1.465,25,0.034,27,1.825,33,0.732,34,0.66,36,0.408,37,0.248,68,0.026,69,0.026,83,1.984,154,2.192,167,3.734,176,3.042,177,2.669,178,3.941,179,5.495,180,5.495,181,4.712,182,2.97,183,3.667,184,3.667,185,3.667,186,3.667]],["title/modules/AuthenticationModule.html",[70,0.442,109,1.742]],["body/modules/AuthenticationModule.html",[2,0.356,3,0.308,6,0.261,21,1.815,25,0.036,33,1.19,34,0.577,36,0.48,37,0.217,44,1.23,51,2.151,68,0.024,69,0.024,70,0.62,72,1.483,73,2.76,74,1.636,75,1.996,82,1.996,83,1.815,84,2.442,85,1.815,86,1.636,95,3.093,96,3.577,97,1.815,98,1.815,109,3.297,187,2.658,188,2.658,189,2.658,190,3.173,191,3.205,192,2.658,193,3.205,194,3.093,195,2.029,196,3.205]],["title/modules/AuthenticationRoutingModule.html",[70,0.442,190,1.742]],["body/modules/AuthenticationRoutingModule.html",[0,0.943,2,0.432,3,0.373,6,0.317,25,0.036,33,1.12,34,0.699,36,0.544,37,0.263,51,1.876,68,0.027,69,0.027,70,0.559,91,2.768,92,1.636,98,2.058,121,1.798,138,2.262,141,2.46,190,2.768,192,3.223,197,3.885,198,3.885,199,3.885]],["title/components/CenterComponent.html",[0,0.747,53,1.295]],["body/components/CenterComponent.html",[0,1.306,1,1.192,2,0.345,3,0.298,4,1.967,5,1.967,6,0.253,8,1.48,9,3.038,10,1.759,11,3.387,12,1.967,14,1.967,16,0.62,17,1.352,18,3.26,22,0.828,25,0.034,26,1.504,31,0.994,32,1.759,33,0.62,34,0.559,36,0.345,37,0.21,39,1.967,44,1.192,45,2.674,46,2.674,47,1.778,48,3.26,49,1.967,50,1.967,51,1.192,52,1.967,53,2.167,54,3.409,55,1.967,56,1.438,57,1.967,58,1.308,59,1.967,60,1.308,61,1.967,62,1.192,63,1.308,64,1.759,65,1.192,66,1.759,67,1.967,68,0.024,69,0.024,200,2.577,201,4.797,202,3.503,203,4.223,204,3.107]],["title/directives/EmailValidatorDirective.html",[47,1.295,65,1.181]],["body/directives/EmailValidatorDirective.html",[2,0.308,3,0.266,6,0.226,8,1.366,10,1.568,11,2.208,16,0.552,17,1.248,22,1.039,24,1.063,25,0.036,26,0.809,27,1.582,28,1.063,31,1.653,33,0.778,34,0.498,36,0.434,37,0.187,47,1.9,65,1.732,66,2.208,68,0.022,69,0.022,75,2.089,97,1.568,121,1.281,153,2.469,182,2.501,205,1.985,206,5.164,207,4.899,208,3.237,209,2.768,210,3.899,211,5.164,212,2.768,213,3.899,214,2.768,215,2.768,216,2.768,217,3.899,218,3.899,219,2.768,220,1.753,221,2.296,222,3.234,223,3.899,224,2.796,225,2.768,226,2.556,227,2.768,228,3.899,229,2.768,230,2.768,231,2.768,232,2.768,233,2.768,234,2.768,235,2.768]],["title/components/LayoutComponent.html",[0,0.747,58,1.295]],["body/components/LayoutComponent.html",[0,1.308,1,1.197,2,0.347,3,0.299,4,1.974,5,1.974,6,0.254,8,1.483,9,3.043,10,1.765,11,3.389,12,1.974,14,2.68,16,0.622,17,1.355,18,3.264,22,0.831,25,0.034,26,1.506,31,0.998,32,1.765,33,0.622,34,0.561,36,0.347,37,0.211,39,1.974,44,1.197,45,2.68,46,2.68,47,1.782,48,3.264,49,1.974,50,1.974,51,1.197,52,1.974,53,1.312,54,3.413,55,1.974,56,1.443,57,1.974,58,2.17,59,1.974,60,1.312,61,1.974,62,1.197,63,1.312,64,1.765,65,1.197,66,1.765,67,1.974,68,0.024,69,0.024,236,2.586,237,4.806,238,4.806,239,3.117]],["title/modules/ReadBoardModule.html",[70,0.442,240,1.949]],["body/modules/ReadBoardModule.html",[2,0.347,3,0.299,6,0.254,25,0.035,33,1.154,34,0.561,36,0.471,37,0.211,44,1.197,60,2.435,62,2.134,68,0.024,69,0.024,70,0.609,72,1.443,73,2.721,74,1.591,75,2.224,84,2.397,85,1.765,86,1.591,98,1.782,194,3.035,195,1.974,240,3.819,241,2.586,242,2.586,243,2.586,244,2.586,245,2.903,246,3.148,247,3.117,248,2.586,249,2.586,250,3.117,251,2.586]],["title/modules/ReadBoardRoutingModule.html",[70,0.442,246,1.742]],["body/modules/ReadBoardRoutingModule.html",[0,1.153,2,0.413,3,0.356,6,0.303,25,0.036,33,1.139,34,0.668,36,0.528,37,0.251,60,1.999,62,1.823,68,0.027,69,0.027,70,0.534,91,2.689,92,1.563,98,1.999,121,1.718,138,2.198,141,3.007,246,2.689,248,3.079,251,3.079,252,3.712,253,3.712,254,1.563,255,3.712]],["title/injectables/ReadBoardService.html",[154,1.295,245,1.571]],["body/injectables/ReadBoardService.html",[2,0.245,3,0.211,6,0.179,16,0.439,17,1.056,19,0.845,22,1.367,24,1.688,25,0.035,26,1.285,27,1.541,28,1.688,31,1.689,33,1.077,34,0.396,36,0.245,37,0.149,38,1.579,68,0.019,69,0.019,94,1.826,121,1.527,154,1.667,165,1.826,168,1.826,169,2.615,177,1.869,182,2.021,224,1.579,245,1.685,254,0.927,256,1.826,257,4.399,258,4.399,259,4.103,260,3.301,261,3.301,262,2.202,263,4.399,264,2.202,265,3.301,266,2.202,267,2.202,268,2.202,269,2.202,270,3.301,271,4.947,272,2.202,273,4.103,274,3.301,275,2.202,276,1.826,277,3.301,278,2.202,279,0.845,280,1.826,281,1.019,282,2.202,283,2.202,284,2.202,285,2.202,286,2.202,287,2.202,288,2.202,289,0.927,290,2.202,291,2.202,292,3.301,293,3.301,294,3.301,295,3.301,296,2.202,297,3.301,298,3.301,299,2.738,300,3.301,301,3.301,302,4.399,303,3.301,304,3.301,305,3.301,306,3.301,307,3.301,308,2.738,309,2.202,310,1.247,311,2.202,312,2.202,313,2.202,314,1.826,315,1.394,316,2.202]],["title/classes/RestEndPointURL.html",[37,0.208,317,1.571]],["body/classes/RestEndPointURL.html",[2,0.269,3,0.232,6,0.197,8,1.793,16,0.482,17,1.132,19,0.928,22,1.115,24,0.928,25,0.036,26,0.706,28,0.928,31,1.735,32,2.369,36,0.512,37,0.311,68,0.02,69,0.02,169,1.637,226,1.369,254,1.489,279,0.928,281,1.936,289,1.761,310,2.003,315,2.24,317,2.135,318,1.369,319,2.699,320,3.684,321,3.241,322,3.241,323,2.417,324,2.417,325,2.915,326,2.417,327,2.24,328,1.531,329,2.24,330,1.806,331,1.531,332,2.24,333,1.531,334,0.928,335,2.649,336,2.649,337,2.649,338,1.531,339,1.531,340,1.531,341,1.531,342,1.531,343,1.531,344,1.531,345,1.531,346,1.531,347,1.531,348,1.531,349,1.531,350,1.531,351,1.531,352,1.531,353,1.531]],["title/interfaces/ServiceURL.html",[319,1.571,334,1.181]],["body/interfaces/ServiceURL.html",[2,0.277,3,0.239,6,0.203,8,1.737,16,0.497,17,1.157,19,0.956,22,1.134,24,0.956,25,0.036,26,0.727,28,0.956,31,1.749,36,0.519,37,0.288,68,0.02,69,0.02,169,1.672,226,1.41,254,1.521,279,0.956,281,1.969,289,1.791,310,2.046,315,2.288,317,1.845,318,1.41,319,2.724,320,3.379,321,3.275,322,3.275,325,2.956,327,2.288,328,1.576,329,2.288,330,1.845,331,1.576,332,2.288,333,1.576,334,1.387,335,2.694,336,2.694,337,2.694,338,1.576,339,1.576,340,1.576,341,1.576,342,1.576,343,1.576,344,1.576,345,1.576,346,1.576,347,1.576,348,1.576,349,1.576,350,1.576,351,1.576,352,1.576,353,1.576,354,2.489,355,2.489,356,2.489]],["title/interfaces/Story.html",[279,1.181,334,1.181]],["body/interfaces/Story.html",[2,0.34,3,0.293,6,0.249,16,0.61,22,1.557,25,0.034,27,2.046,36,0.34,68,0.023,69,0.023,177,2.364,182,3.161,254,2.152,279,1.602,334,1.602,357,2.534,358,5.111,359,5.111,360,5.111,361,5.111,362,5.111,363,5.111,364,5.111,365,5.111,366,3.055,367,3.055,368,3.055,369,5.84,370,3.055,371,3.055,372,3.055,373,3.055,374,3.055,375,3.055]],["title/components/StoryBoardComponent.html",[0,0.747,62,1.181]],["body/components/StoryBoardComponent.html",[0,1.145,1,0.847,2,0.245,3,0.212,4,1.398,5,1.398,6,0.18,8,1.159,9,2.511,10,1.25,11,3.057,12,1.398,14,1.398,16,0.44,17,1.058,18,2.789,19,0.847,22,1.32,24,0.847,25,0.035,26,1.378,27,1.543,28,0.847,31,1.058,32,1.873,33,0.941,34,0.397,36,0.245,37,0.149,38,1.583,39,2.094,44,0.847,45,2.094,46,2.094,47,1.392,48,2.789,49,1.398,50,1.398,51,0.847,52,1.398,53,0.929,54,2.511,55,1.398,56,1.021,57,1.398,58,0.929,59,1.398,60,0.929,61,1.398,62,1.69,63,0.929,64,1.25,65,0.847,66,1.25,67,1.398,68,0.019,69,0.019,75,1.53,92,1.392,157,4.258,169,1.53,177,1.873,182,2.528,202,2.743,245,2.528,249,1.831,254,1.854,259,3.913,273,2.743,279,2.111,280,1.831,376,1.831,377,3.307,378,4.404,379,2.207,380,4.952,381,3.965,382,3.307,383,2.207,384,2.207,385,2.207,386,2.207,387,2.207,388,2.207,389,2.207,390,3.307,391,2.207,392,2.207,393,2.207,394,2.207,395,2.207,396,2.207]],["title/classes/TestURL.html",[37,0.208,330,1.571]],["body/classes/TestURL.html",[2,0.269,3,0.232,6,0.197,8,1.793,16,0.482,17,1.132,19,0.928,22,1.115,24,0.928,25,0.036,26,0.706,28,0.928,31,1.735,36,0.512,37,0.311,68,0.02,69,0.02,169,1.637,182,2.135,226,1.369,254,1.489,279,0.928,281,1.936,289,1.761,310,2.003,315,2.24,317,1.806,318,1.369,319,2.699,320,3.684,321,3.241,322,3.241,325,2.915,327,2.24,328,1.531,329,2.24,330,2.135,331,1.531,332,2.24,333,1.531,334,0.928,335,2.649,336,2.649,337,2.649,338,1.531,339,1.531,340,1.531,341,1.531,342,1.531,343,1.531,344,1.531,345,1.531,346,1.531,347,1.531,348,1.531,349,1.531,350,1.531,351,1.531,352,1.531,353,1.531,397,2.417,398,2.417,399,2.417]],["title/classes/URLMapper.html",[37,0.208,281,1.424]],["body/classes/URLMapper.html",[2,0.267,3,0.231,6,0.196,8,1.713,16,0.48,17,1.128,19,1.601,22,1.224,25,0.036,27,1.235,31,1.635,36,0.511,37,0.31,68,0.02,69,0.02,169,2.364,177,1.995,226,1.362,254,1.012,279,0.923,281,2.364,289,1.756,310,1.995,317,1.799,318,1.362,319,2.938,320,3.342,321,2.641,322,2.641,325,2.641,327,3.235,328,2.908,329,2.231,330,1.799,331,2.908,332,2.231,333,1.523,334,0.923,335,2.641,336,2.641,337,2.641,338,1.523,339,1.523,340,1.523,341,1.523,342,1.523,343,1.523,344,1.523,345,1.523,346,1.523,347,1.523,348,1.523,349,1.523,350,1.523,351,1.523,352,1.523,353,1.523,400,3.523,401,2.404,402,2.404]],["title/modules/WriteBoardModule.html",[70,0.442,403,1.949]],["body/modules/WriteBoardModule.html",[2,0.382,3,0.33,6,0.28,25,0.035,33,1.18,34,0.618,36,0.502,37,0.232,44,1.318,63,2.406,68,0.025,69,0.025,70,0.649,72,1.589,73,2.856,74,1.753,75,2.089,84,2.557,85,1.944,86,1.753,95,3.238,97,1.944,98,1.901,117,3.745,118,2.462,119,2.462,120,2.462,194,3.238,195,2.174,403,3.743,404,2.848,405,2.848,406,2.848,407,3.236,408,3.433,409,2.848,410,3.433]],["title/modules/WriteBoardRoutingModule.html",[70,0.442,407,1.742]],["body/modules/WriteBoardRoutingModule.html",[0,0.943,2,0.432,3,0.373,6,0.317,25,0.036,33,1.12,34,0.699,36,0.544,37,0.263,63,2.058,68,0.027,69,0.027,70,0.559,91,2.768,92,1.636,98,2.058,121,1.798,138,2.262,141,2.46,407,2.768,409,3.223,411,3.885,412,3.885,413,3.885]],["title/coverage.html",[414,3.48]],["body/coverage.html",[0,1.349,1,1.016,6,0.216,7,2.196,21,1.499,25,0.035,27,0.928,37,0.298,42,1.899,47,1.115,51,1.016,53,1.115,56,1.225,58,1.115,60,1.115,62,1.016,63,1.115,65,1.016,68,0.021,69,0.021,82,1.225,83,1.115,87,1.899,107,2.709,122,1.899,154,2.022,155,2.196,176,2.196,178,1.899,200,2.196,205,2.709,208,1.899,220,2.392,236,2.196,245,1.352,256,2.196,279,1.016,281,1.225,289,1.115,317,1.352,318,2.72,319,1.352,330,1.352,334,1.45,357,2.196,376,2.196,414,2.196,415,2.648,416,2.648,417,2.648,418,6.206,419,4.405,420,3.778,421,4.405,422,3.642,423,5.435,424,2.648,425,3.778,426,2.648,427,2.648,428,2.648,429,2.648,430,2.648,431,2.648,432,2.648,433,2.648,434,2.648,435,3.159,436,2.648,437,2.196,438,2.196,439,2.648,440,2.648,441,2.196,442,2.196,443,2.648,444,2.648]],["title/dependencies.html",[72,1.712,445,2.572]],["body/dependencies.html",[25,0.036,34,0.62,68,0.025,69,0.025,72,1.595,74,1.759,89,3.754,90,3.246,92,1.451,97,1.951,100,2.858,118,2.471,119,2.471,120,2.471,195,2.182,446,3.446,447,6.086,448,3.446,449,2.858,450,4.526,451,2.858,452,3.446,453,3.446,454,3.446,455,3.446,456,3.446,457,3.446,458,3.446,459,3.446,460,3.446,461,3.446,462,3.446,463,3.446,464,3.446,465,3.446,466,3.446,467,3.446,468,3.446,469,3.446,470,3.446,471,3.446,472,3.446,473,3.446,474,3.446,475,3.446,476,3.446]],["title/miscellaneous/functions.html",[220,2.343,477,1.628]],["body/miscellaneous/functions.html",[16,0.889,24,1.709,25,0.032,26,1.301,28,1.709,68,0.03,69,0.03,178,4.074,205,3.193,208,3.812,220,2.82,221,3.693,222,3.693,435,3.193,477,2.82,478,4.453,479,3.693,480,4.453]],["title/index.html",[16,0.513,481,2.572,482,2.572]],["body/index.html",[0,1.198,3,0.315,6,0.268,25,0.025,26,0.96,40,2.08,68,0.025,69,0.025,86,1.677,289,1.383,299,2.725,308,3.637,449,2.725,451,4.094,483,4.385,484,5.266,485,4.935,486,3.285,487,3.285,488,5.762,489,5.762,490,3.285,491,3.285,492,3.285,493,3.285,494,3.285,495,3.285,496,3.285,497,3.285,498,3.285,499,4.935,500,3.285,501,5.487,502,3.285,503,3.285,504,3.285,505,3.285,506,3.285,507,3.285,508,2.725,509,4.385,510,5.487,511,4.385,512,4.385,513,3.285,514,5.266,515,3.285,516,3.285,517,3.285,518,4.935,519,3.285,520,3.285,521,3.285,522,3.285]],["title/modules.html",[70,0.603]],["body/modules.html",[25,0.028,68,0.028,69,0.028,70,0.589,71,2.593,81,2.318,90,4.101,109,2.318,190,2.318,240,2.593,246,2.318,403,2.593,407,2.318,523,5.719,524,5.719,525,6.124,526,5.719,527,5.719]],["title/overview.html",[528,3.48]],["body/overview.html",[0,0.639,1,2.083,21,2.486,25,0.035,36,0.293,37,0.178,44,1.011,47,1.108,51,1.685,53,1.848,56,2.032,58,1.848,60,2.133,62,1.685,63,1.848,65,1.685,68,0.021,69,0.021,70,0.541,71,3.895,72,1.218,73,1.491,74,1.344,75,1.218,76,2.184,77,2.184,78,2.184,79,2.184,80,2.184,81,2.486,82,2.032,83,1.848,84,2.131,85,1.491,86,1.344,109,2.984,138,1.218,154,1.108,187,2.184,188,2.184,189,2.184,190,2.486,240,3.628,241,2.184,242,2.184,243,2.184,244,2.184,245,2.446,246,2.486,314,2.184,334,1.011,403,3.337,404,2.184,405,2.184,406,2.184,407,2.486,528,2.184,529,3.762,530,2.633,531,2.633,532,2.633,533,2.633]],["title/routes.html",[138,1.941]],["body/routes.html",[25,0.031,68,0.031,69,0.031,138,2.258]],["title/miscellaneous/variables.html",[422,2.653,477,1.628]],["body/miscellaneous/variables.html",[16,0.561,25,0.035,27,1.82,40,2.882,42,3.264,68,0.022,69,0.022,87,2.016,107,3.861,122,3.264,123,2.331,124,2.331,125,2.331,126,2.331,127,2.331,128,2.331,129,2.331,130,2.331,131,2.331,132,2.331,133,2.331,134,2.331,135,2.331,153,1.78,167,2.826,175,2.331,224,3.537,276,4.091,289,1.183,422,2.016,435,2.016,437,2.331,438,3.775,441,2.331,442,2.331,477,1.78,479,2.331,508,3.269,534,2.811,535,2.811,536,2.811,537,2.811,538,5.642,539,2.811,540,2.811,541,5.809,542,3.941,543,3.941,544,3.941,545,2.811,546,2.811,547,3.941,548,3.941,549,3.941,550,3.941,551,5.194,552,2.811,553,2.811,554,3.941,555,3.941,556,3.941,557,3.941,558,2.811,559,2.811,560,2.811,561,2.811]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["0.8.19",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":314,"title":{},"body":{"injectables/ReadBoardService.html":{},"overview.html":{}}}],["1.0.1",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":449,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12",{"_index":533,"title":{},"body":{"overview.html":{}}}],["1b9b",{"_index":339,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["2",{"_index":532,"title":{},"body":{"overview.html":{}}}],["2.2.2",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["21",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["2478eddfd53d",{"_index":347,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["3",{"_index":531,"title":{},"body":{"overview.html":{}}}],["3/14",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["3}(?:25[0",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":530,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":460,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["4.5.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["411d1809db3d",{"_index":353,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["4880",{"_index":340,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["49a5",{"_index":345,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["4][0",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4e81",{"_index":351,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["5.0.0",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["569031256946",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["5]|2[0",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5d474",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["5d474.appspot.com",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["5d474.appspot.com/o",{"_index":337,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["5d474.firebaseapp.com",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["5d474.firebaseio.com",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":529,"title":{},"body":{"overview.html":{}}}],["8d409386cf50",{"_index":342,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["9",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&\\'*+/=?^_",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\\\.)+[a",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\\\[(?:(?:25[0",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_authenticationservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["_readboardservic",{"_index":381,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["_storylisturl",{"_index":257,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["a7",{"_index":341,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["a864",{"_index":352,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["abstractcontrol",{"_index":211,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["ac6f",{"_index":346,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["activatedrout",{"_index":380,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroute.snapshot.params['storyid",{"_index":391,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroutesnapshot",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_compon",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["adda",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["adda'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["aizasybq21jezecwo82_owgobwlfkijczcewnb",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":485,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":195,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"injectables/ReadBoardService.html":{}}}],["angular/compil",{"_index":450,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":452,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":453,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["angularfire2",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angularfire2/auth",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfire2/databas",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfireauthmodul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiredatabasemodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["angularfiremodule.initializeapp(firebaseconfig",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["apikey",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":299,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["app.compon",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.routing.modul",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["app/readboard/readboard.module#readboardmodul",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/security/authentication.module#authenticationmodul",{"_index":150,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/writeboard/writeboard.module#writeboardmodul",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appemail",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["appmodul",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppath",{"_index":313,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["approutingmodul",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":502,"title":{},"body":{"index.html":{}}}],["authdomain",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["authent",{"_index":83,"title":{"injectables/Authentication.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authentication'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["authentication.compon",{"_index":192,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["authentication.routing.modul",{"_index":196,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":193,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationcompon",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmodul",{"_index":109,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":198,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["authenticationroutingmodul",{"_index":190,"title":{"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservic",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":82,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authornam",{"_index":358,"title":{},"body":{"interfaces/Story.html":{}}}],["automat",{"_index":494,"title":{},"body":{"index.html":{}}}],["avail",{"_index":527,"title":{},"body":{"modules.html":{}}}],["ba5d",{"_index":344,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["boolean",{"_index":167,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":525,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":501,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":149,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["canactivate(next",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch(this.handleerror",{"_index":296,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["catch(this.handlestorydetailerror",{"_index":316,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["center",{"_index":201,"title":{},"body":{"components/CenterComponent.html":{}}}],["center'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["center.component.html",{"_index":203,"title":{},"body":{"components/CenterComponent.html":{}}}],["centercompon",{"_index":53,"title":{"components/CenterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chang",{"_index":496,"title":{},"body":{"index.html":{}}}],["check",{"_index":521,"title":{},"body":{"index.html":{}}}],["class",{"_index":37,"title":{"classes/RestEndPointURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":451,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":187,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":188,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_import",{"_index":189,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_readboardmodul",{"_index":241,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_declar",{"_index":242,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_import",{"_index":244,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_readboardcomponent_provid",{"_index":243,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodul",{"_index":404,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_declar",{"_index":405,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_import",{"_index":406,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["code",{"_index":497,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":194,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{}}}],["compodoc/compodoc",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["consol",{"_index":305,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.error(error",{"_index":306,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.info('auth",{"_index":185,"title":{},"body":{"injectables/Authentication.html":{}}}],["console.info('i",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["console.info('load",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["console.info('valu",{"_index":227,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["console.log",{"_index":335,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["console.log('authguard",{"_index":170,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('host",{"_index":309,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log('queri",{"_index":387,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["console.log(data",{"_index":295,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(this._storylisturl",{"_index":287,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["const",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["constructor(_authenticationservic",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(activatedrout",{"_index":379,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["constructor(authent",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(http",{"_index":262,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["constructor(priv",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["content",{"_index":359,"title":{},"body":{"interfaces/Story.html":{}}}],["control",{"_index":213,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["control.valu",{"_index":225,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["core",{"_index":461,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":414,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdd",{"_index":360,"title":{},"body":{"interfaces/Story.html":{}}}],["d813",{"_index":350,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["data.stori",{"_index":293,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["databaseurl",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["declar",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["default",{"_index":276,"title":{},"body":{"injectables/ReadBoardService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["depend",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":491,"title":{},"body":{"index.html":{}}}],["develop",{"_index":487,"title":{},"body":{"index.html":{}}}],["direct",{"_index":47,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":500,"title":{},"body":{"index.html":{}}}],["directori",{"_index":505,"title":{},"body":{"index.html":{}}}],["dislik",{"_index":361,"title":{},"body":{"interfaces/Story.html":{}}}],["dist",{"_index":504,"title":{},"body":{"index.html":{}}}],["do(data",{"_index":294,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["document",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["dynam",{"_index":455,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":515,"title":{},"body":{"index.html":{}}}],["editor",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["email",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":208,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailvalidator(new",{"_index":233,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["emailvalidator(regexp",{"_index":221,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["emailvalidatordirect",{"_index":65,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enabletrac",{"_index":152,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":514,"title":{},"body":{"index.html":{}}}],["entity/stori",{"_index":280,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["environ",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":273,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["errormessag",{"_index":378,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["execut",{"_index":511,"title":{},"body":{"index.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":175,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["firebas",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["firebaseconfig",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["flag",{"_index":507,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":219,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["formsmodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/WriteBoardModule.html":{}}}],["full",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":220,"title":{"miscellaneous/functions.html":{}},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":517,"title":{},"body":{"index.html":{}}}],["gener",{"_index":484,"title":{},"body":{"index.html":{}}}],["get",{"_index":481,"title":{"index.html":{}},"body":{}}],["getapppath",{"_index":258,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["getstori",{"_index":259,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["getstory(storyid",{"_index":268,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["geturl",{"_index":331,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["go",{"_index":520,"title":{},"body":{"index.html":{}}}],["graph",{"_index":526,"title":{},"body":{"modules.html":{}}}],["handleerror",{"_index":260,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handleerror(error",{"_index":270,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror",{"_index":261,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror(error",{"_index":274,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header",{"_index":290,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["headercompon",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":518,"title":{},"body":{"index.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["http",{"_index":265,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["http://localhost:4200",{"_index":493,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":263,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["httpclientmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":288,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["https://firebasestorage.googleapis.com/v0/b/readadda",{"_index":336,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["https://readadda",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["i'))(control",{"_index":235,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["identifi",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["infrastructur",{"_index":303,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["inject",{"_index":154,"title":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":207,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["instanc",{"_index":328,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["instead",{"_index":304,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["interfac",{"_index":334,"title":{"interfaces/ServiceURL.html":{},"interfaces/Story.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"overview.html":{}}}],["isloggedin",{"_index":178,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["js",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(activatedroute.snapshot.param",{"_index":389,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["karma",{"_index":513,"title":{},"body":{"index.html":{}}}],["key",{"_index":223,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["layout",{"_index":237,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'nam",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["layout/center.compon",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header.compon",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout.compon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutcompon",{"_index":58,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["like",{"_index":362,"title":{},"body":{"interfaces/Story.html":{}}}],["liter",{"_index":214,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["load",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["loadchildren",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading..load",{"_index":238,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.split",{"_index":312,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["location.origin",{"_index":310,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["log",{"_index":302,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["loggedin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginurl",{"_index":321,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["mainrout",{"_index":140,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["map(data",{"_index":292,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["match",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["messagingsenderid",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["method",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["miscellan",{"_index":477,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedd",{"_index":363,"title":{},"body":{"interfaces/Story.html":{}}}],["modul",{"_index":70,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":519,"title":{},"body":{"index.html":{}}}],["multi",{"_index":231,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":492,"title":{},"body":{"index.html":{}}}],["new",{"_index":289,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":164,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["ng",{"_index":489,"title":{},"body":{"index.html":{}}}],["ng_valid",{"_index":217,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["ngmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["ngoninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["ngx",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["null",{"_index":226,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["number",{"_index":369,"title":{},"body":{"interfaces/Story.html":{}}}],["object",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":165,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{}}}],["observable.throw(error",{"_index":307,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["onchang",{"_index":215,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["oninit",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["option",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":528,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":445,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":388,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":179,"title":{},"body":{"injectables/Authentication.html":{}}}],["path",{"_index":141,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["patharray",{"_index":311,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["pathmatch",{"_index":144,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterninvalid",{"_index":229,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["popper",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["privat",{"_index":169,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["prod",{"_index":506,"title":{},"body":{"index.html":{}}}],["product",{"_index":508,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":483,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["promis",{"_index":166,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":177,"title":{},"body":{"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{}}}],["protractor",{"_index":516,"title":{},"body":{"index.html":{}}}],["provid",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["public",{"_index":320,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["quill",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["quilleditormodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{}}}],["ra",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["rc.2",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["read",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["readadda",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["readboard",{"_index":143,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["readboard'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["readboard.compon",{"_index":248,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["readboard.routing.modul",{"_index":250,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["readboard.servic",{"_index":249,"title":{},"body":{"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{}}}],["readboardcompon",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readboardmodul",{"_index":240,"title":{"modules/ReadBoardModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardrout",{"_index":253,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["readboardroutingmodul",{"_index":246,"title":{"modules/ReadBoardRoutingModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardservic",{"_index":245,"title":{"injectables/ReadBoardService.html":{}},"body":{"modules/ReadBoardModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readm",{"_index":522,"title":{},"body":{"index.html":{}}}],["real",{"_index":297,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["redirect",{"_index":172,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirectto",{"_index":142,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexp",{"_index":222,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["regexp('(?:[a",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(this.emailvalid",{"_index":234,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexp.test(valu",{"_index":228,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexpattern",{"_index":438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":495,"title":{},"body":{"index.html":{}}}],["remot",{"_index":301,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["respons",{"_index":271,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["restendpointurl",{"_index":317,"title":{"classes/RestEndPointURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["result",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["rout",{"_index":138,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{},"components/StoryBoardComponent.html":{}}}],["routermodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":199,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forchild(readboardrout",{"_index":255,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["routermodule.forchild(writeboardrout",{"_index":413,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forroot",{"_index":151,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":162,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":488,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":286,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/catch",{"_index":285,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/do",{"_index":284,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/map",{"_index":283,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/observ",{"_index":168,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{}}}],["scaffold",{"_index":498,"title":{},"body":{"index.html":{}}}],["security/authent",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["security/authentication.compon",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["security/authentication.modul",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["security/authentication.servic",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["security/authguard",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["send",{"_index":300,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["serv",{"_index":490,"title":{},"body":{"index.html":{}}}],["server",{"_index":308,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["servic",{"_index":454,"title":{},"body":{"dependencies.html":{}}}],["serviceurl",{"_index":319,"title":{"interfaces/ServiceURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["serviceurlconfig",{"_index":282,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["simplechang",{"_index":216,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"index.html":{}}}],["src/.../app.module.t",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.service.t",{"_index":479,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../emailvalidator.t",{"_index":478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regexpattern.t",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.routing.module.t",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/entity/story.t",{"_index":357,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/entity/story.ts:10",{"_index":367,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:2",{"_index":373,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:3",{"_index":375,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:4",{"_index":374,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:5",{"_index":368,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:6",{"_index":372,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:7",{"_index":366,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:8",{"_index":371,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:9",{"_index":370,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/layout/center.component.t",{"_index":200,"title":{},"body":{"components/CenterComponent.html":{},"coverage.html":{}}}],["src/app/layout/center.component.ts:10",{"_index":204,"title":{},"body":{"components/CenterComponent.html":{}}}],["src/app/layout/header.component.t",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["src/app/layout/layout.component.t",{"_index":236,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:10",{"_index":239,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/readboard/readboard.component.t",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["src/app/readboard/readboard.module.t",{"_index":247,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["src/app/readboard/readboard.routing.module.t",{"_index":252,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["src/app/readboard/readboard.service.t",{"_index":256,"title":{},"body":{"injectables/ReadBoardService.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.service.ts:11",{"_index":264,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:15",{"_index":278,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:17",{"_index":267,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:27",{"_index":272,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:34",{"_index":266,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:44",{"_index":269,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:52",{"_index":275,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/storyboard.component.t",{"_index":376,"title":{},"body":{"components/StoryBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/storyboard.component.ts:13",{"_index":386,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:14",{"_index":385,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:15",{"_index":382,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:22",{"_index":384,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:27",{"_index":383,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/security/authentication.component.t",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["src/app/security/authentication.module.t",{"_index":191,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/security/authentication.routing.module.t",{"_index":197,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["src/app/security/authentication.service.t",{"_index":435,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/security/authentication.t",{"_index":176,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{}}}],["src/app/security/authentication.ts:5",{"_index":184,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:6",{"_index":183,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:7",{"_index":181,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authguard.t",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/security/authguard.ts:14",{"_index":163,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/security/authguard.ts:7",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/serviceurlconfig.t",{"_index":318,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["src/app/serviceurlconfig.ts:10",{"_index":402,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:19",{"_index":354,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:2",{"_index":401,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:20",{"_index":355,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:21",{"_index":356,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:25",{"_index":397,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:3",{"_index":400,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:31",{"_index":398,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:37",{"_index":399,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:45",{"_index":323,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:46",{"_index":324,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:47",{"_index":326,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/validator/emailvalidator.t",{"_index":205,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validator/emailvalidator.ts:20",{"_index":209,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/emailvalidator.ts:22",{"_index":212,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/regexpattern.t",{"_index":437,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/writeboard/writeboard.component.t",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["src/app/writeboard/writeboard.module.t",{"_index":408,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["src/app/writeboard/writeboard.routing.module.t",{"_index":411,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":441,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":442,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":482,"title":{"index.html":{}},"body":{}}],["state",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["statement",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":327,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storagebucket",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":503,"title":{},"body":{"index.html":{}}}],["stori",{"_index":279,"title":{"interfaces/Story.html":{}},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["stories%2flogindata.json?alt=media&token=e27cfb8",{"_index":338,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["stories%2fstory.json?alt=media&token=55632eef",{"_index":349,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["stories%2fstorylist.json?alt=media&token=9d41b6df",{"_index":343,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storyboard",{"_index":392,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboard.compon",{"_index":251,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["storyboard.component.html",{"_index":377,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboardcompon",{"_index":62,"title":{"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyid",{"_index":254,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storylisturl",{"_index":322,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storyshortdescript",{"_index":364,"title":{},"body":{"interfaces/Story.html":{}}}],["storyurl",{"_index":315,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{}}}],["storyurl(storyid",{"_index":325,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["string",{"_index":182,"title":{},"body":{"injectables/Authentication.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{}}}],["support",{"_index":523,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":524,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["templateurl",{"_index":202,"title":{},"body":{"components/CenterComponent.html":{},"components/StoryBoardComponent.html":{}}}],["test",{"_index":510,"title":{},"body":{"index.html":{}}}],["testurl",{"_index":330,"title":{"classes/TestURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["this._authenticationservice.isloggedin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["this._readboardservice.getstory(this.storyid).subscrib",{"_index":394,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.authentication.isloggedin",{"_index":171,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.emailvalid",{"_index":232,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["this.errormessag",{"_index":396,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.getstori",{"_index":393,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.http.get(this._storylisturl",{"_index":291,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["this.inst",{"_index":332,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.instance.serviceurl",{"_index":333,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.isloggedin",{"_index":186,"title":{},"body":{"injectables/Authentication.html":{}}}],["this.router.navigate(['/authent",{"_index":174,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.serviceurl",{"_index":329,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.stori",{"_index":395,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.storyid",{"_index":390,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["titl",{"_index":365,"title":{},"body":{"interfaces/Story.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["true",{"_index":153,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["undefin",{"_index":480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":509,"title":{},"body":{"index.html":{}}}],["url",{"_index":348,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["urlmapp",{"_index":281,"title":{"classes/URLMapper.html":{}},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["urlmapper.geturl().storylisturl",{"_index":277,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["us",{"_index":499,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":230,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["user",{"_index":173,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["usernam",{"_index":180,"title":{},"body":{"injectables/Authentication.html":{}}}],["valid",{"_index":206,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validate(control",{"_index":210,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validator/emailvalid",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["validatorfn",{"_index":218,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["valu",{"_index":224,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["variabl",{"_index":422,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":486,"title":{},"body":{"index.html":{}}}],["via",{"_index":512,"title":{},"body":{"index.html":{}}}],["void",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"components/StoryBoardComponent.html":{}}}],["world",{"_index":298,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["writeboard",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["writeboard.compon",{"_index":409,"title":{},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["writeboard.routing.modul",{"_index":410,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["writeboardcompon",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["writeboardmodul",{"_index":403,"title":{"modules/WriteBoardModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["writeboardrout",{"_index":412,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["writeboardroutingmodul",{"_index":407,"title":{"modules/WriteBoardRoutingModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["x01",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\\\\\[\\x01",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                read-adda\n            \n\n\n\n            \n                template\n                Loading..\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from './security/authentication.service';\n\n@Component({\n  selector: 'read-adda',\n  template: 'Loading..',\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(private _authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    console.info('Loading ReadAdda');\n    console.info('Is LoggedIn = ' + this._authenticationService.isLoggedIn());\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nCenterComponent\n\nCenterComponent\n\nAppModule -->\n\nCenterComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LayoutComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                CenterComponent\n                            \n                            \n                                EmailValidatorDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     Authentication\n                            \n                            \n                                     AuthenticationService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from './../environments/environment';\nimport { AuthenticationModule } from './security/authentication.module';\nimport { Authentication } from './security/authentication';\nimport { AuthenticationService } from './security/authentication.service';\nimport { AuthGuard } from './security/authGuard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderComponent } from './layout/header.component';\nimport { CenterComponent } from './layout/center.component';\nimport {EmailValidatorDirective} from './validator/emailValidator';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyBQ21jEZecwO82_OWgobWlFKIJczcEwnbE',\n  authDomain: 'readadda-5d474.firebaseapp.com',\n  databaseURL: 'https://readadda-5d474.firebaseio.com',\n  projectId: 'readadda-5d474',\n  storageBucket: 'readadda-5d474.appspot.com',\n  messagingSenderId: '569031256946'\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    CenterComponent,\n    EmailValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularFireModule.initializeApp(firebaseConfig),\n    AngularFireDatabaseModule,\n    AngularFireAuthModule,\n    QuillEditorModule\n  ],\n  providers: [AuthGuard, Authentication, AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {Routes, RouterModule} from '@angular/router';\n\nimport {AuthenticationComponent} from './security/authentication.component';\nimport {AuthGuard} from './security/authGuard';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\n\nconst MainRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/readBoard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'readBoard',\n    loadChildren: 'app/readboard/readboard.module#ReadBoardModule'\n  },\n  {\n    path: 'writeboard',\n    loadChildren: 'app/writeboard/writeboard.module#WriteBoardModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: 'app/security/authentication.module#AuthenticationModule',\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      MainRoutes,\n      {\n        enableTracing: true // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authGuard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authGuard.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Authentication } from '../security/authentication';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authentication: Authentication,\n        private router: Router\n      ) {}\n\n      canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable | Promise | boolean {\n      console.log('AuthGuard ------ ' + this.authentication.isLoggedIn);\n      if (!this.authentication.isLoggedIn) {\n        // redirect the user\n        this.router.navigate(['/authentication']);\n        return false;\n      }\n      return true;\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Authentication.html":{"url":"injectables/Authentication.html","title":"injectable - Authentication","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Authentication\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Authentication {\n  username: string;\n  password: string;\n  isLoggedIn: boolean;\n  constructor() {\n        console.info('Auth Constructor ' + this.isLoggedIn);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthenticationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticationRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { Authentication } from './authentication';\nimport { AuthGuard } from './authGuard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication.routing.module';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n\n  ],\n  providers: []\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationRoutingModule.html":{"url":"modules/AuthenticationRoutingModule.html","title":"module - AuthenticationRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { NgModule }  from '@angular/core';\n\nconst AuthenticationRoutes: Routes = [\n    \n    {\n        path: '',        \n        component: AuthenticationComponent,\n    }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(AuthenticationRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class AuthenticationRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CenterComponent.html":{"url":"components/CenterComponent.html","title":"component - CenterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CenterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/center.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-center\n            \n\n\n\n\n            \n                templateUrl\n                center.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/center.component.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ra-center',\n  templateUrl: 'center.component.html'  \n})\n\nexport class CenterComponent implements OnInit {\n\n  ngOnInit() {\n      console.info('Loading Center');\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'CenterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmailValidatorDirective.html":{"url":"directives/EmailValidatorDirective.html","title":"directive - EmailValidatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EmailValidatorDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/app/validator/emailValidator.ts\n        \n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , : , : true }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailValidator\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        emailValidator\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, FormGroup } from '@angular/forms';\n\nexport function emailValidator(regexp: RegExp): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const value = control.value;\n    if (value === '') {\n      return null;\n    }\n\n    console.info('VALUE ===== ' + regexp.test(value))\n    return !regexp.test(value) ? { 'patternInvalid': { regexp } } : null;\n  };\n}\n@Directive({\n  selector: '[appEmail]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidatorDirective, multi: true}]\n})\nexport class EmailValidatorDirective implements Validator {\n  @Input() emailValidator: string;\n\n  validate(control: AbstractControl): {[key: string]: any} {\n    return this.emailValidator ? emailValidator(new RegExp(this.emailValidator, 'i'))(control)\n      : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-layout\n            \n\n\n\n            \n                template\n                Loading..Loading...\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ra-layout',\n  template: 'Loading..Loading...'\n})\n\nexport class LayoutComponent implements OnInit {\n\n  ngOnInit() {\n      console.info('Loading Layout');\n  }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardModule.html":{"url":"modules/ReadBoardModule.html","title":"module - ReadBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ReadBoardComponent\n                            \n                            \n                                StoryBoardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReadBoardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ReadBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReadBoardComponent } from './readboard.component';\nimport { ReadBoardService } from './readboard.service';\nimport { CommonModule } from '@angular/common';\nimport { ReadBoardRoutingModule } from './readboard.routing.module';\nimport { StoryBoardComponent } from './storyboard.component';\n\n@NgModule({\n  declarations: [\n    ReadBoardComponent,\n    StoryBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    ReadBoardRoutingModule\n  ],\n  providers: [ReadBoardService]\n})\nexport class ReadBoardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardRoutingModule.html":{"url":"modules/ReadBoardRoutingModule.html","title":"module - ReadBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { ReadBoardComponent } from './readboard.component';\nimport { StoryBoardComponent } from './storyboard.component';\nimport { NgModule } from '@angular/core';\n\nconst ReadBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: ReadBoardComponent\n  },\n  {\n    path: ':storyId',\n    component: StoryBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(ReadBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class ReadBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadBoardService.html":{"url":"injectables/ReadBoardService.html","title":"injectable - ReadBoardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReadBoardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/readboard/readboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storyListUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAppPath\n                            \n                            \n                                getStories\n                            \n                            \n                                getStory\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleStoryDetailError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAppPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAppPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:34\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory(storyID: String)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:44\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyID\n                                                        \n                                                                    String\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleStoryDetailError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleStoryDetailError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:52\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storyListUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _storyListUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().storyListURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Story} from '../entity/story';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport {Observable} from 'rxjs/Observable';\n@Injectable()\nexport class ReadBoardService {\n  constructor(private http: HttpClient) {\n  }\n\n  private _storyListUrl = URLMapper.getURL().storyListURL();\n\n  getStories() {\n    console.log(this._storyListUrl);\n    const httpHeader = new Headers();\n\n    return this.http.get(this._storyListUrl)\n      .map(data => data.stories)\n      .do(data => console.log(data))\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n\n  private getAppPath() {\n    console.log('HOST :' + location.origin);\n    const pathArray = location.href.split('/');\n    let appPath = '/';\n    for (let i = 1; i (storyUrl)\n      .map(data => data.story)\n      .do(data => console.log(data))\n      .catch(this.handleStoryDetailError);\n  }\n\n  private handleStoryDetailError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestEndPointURL.html":{"url":"classes/RestEndPointURL.html","title":"class - RestEndPointURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestEndPointURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:45\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:46\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:47\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FloginData.json?alt=media&token=e27cfb8e-1b9b-4880-a7ed-8d409386cf50';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FstoryList.json?alt=media&token=9d41b6df-ba5d-49a5-ac6f-2478eddfd53d';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2Fstory.json?alt=media&token=55632eef-d813-4e81-a864-411d1809db3d';\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceURL.html":{"url":"interfaces/ServiceURL.html","title":"interface - ServiceURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginURL\n                                \n                                \n                                    storyListURL\n                                \n                                \n                                    storyURL\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FloginData.json?alt=media&token=e27cfb8e-1b9b-4880-a7ed-8d409386cf50';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FstoryList.json?alt=media&token=9d41b6df-ba5d-49a5-ac6f-2478eddfd53d';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2Fstory.json?alt=media&token=55632eef-d813-4e81-a864-411d1809db3d';\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authorName\n                                \n                                \n                                        content\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        disLikes\n                                \n                                \n                                        likes\n                                \n                                \n                                        modifiedDate\n                                \n                                \n                                        storyId\n                                \n                                \n                                        storyShortDescription\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorName\n                                    \n                                \n                                \n                                    \n                                        authorName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disLikes\n                                    \n                                \n                                \n                                    \n                                        disLikes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes\n                                    \n                                \n                                \n                                    \n                                        likes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyShortDescription\n                                    \n                                \n                                \n                                    \n                                        storyShortDescription:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:3\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Story {\n  storyId: number;\n  title: string;\n  storyShortDescription: string;\n  createdDate: string;\n  modifiedDate: string;\n  authorName: string;\n  likes: number;\n  disLikes: number;\n  content: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoryBoardComponent.html":{"url":"components/StoryBoardComponent.html","title":"component - StoryBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoryBoardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/readboard/storyboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n\n\n\n\n            \n                templateUrl\n                storyboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                story\n                            \n                            \n                                storyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, _readBoardService: ReadBoardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    _readBoardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            story\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        story:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storyId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {ReadBoardService} from './readboard.service';\n\n\n@Component({\n  templateUrl: 'storyboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class StoryBoardComponent implements OnInit {\n  storyId: string;\n  story: Story;\n  errorMessage: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private _readBoardService: ReadBoardService, private router: Router) {\n    console.log('Query Params === ' + JSON.stringify(activatedRoute.snapshot.params));\n    this.storyId = activatedRoute.snapshot.params['storyId'];\n  }\n\n  ngOnInit() {\n    console.info('Loading StoryBoard');\n    this.getStory();\n  }\n\n  getStory() {\n    console.info('Loading getStory ' + this.storyId);\n    this._readBoardService.getStory(this.storyId).subscribe(\n      story => this.story = story,\n      error => this.errorMessage = error);\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoryBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestURL.html":{"url":"classes/TestURL.html","title":"class - TestURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:25\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:31\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:37\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FloginData.json?alt=media&token=e27cfb8e-1b9b-4880-a7ed-8d409386cf50';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FstoryList.json?alt=media&token=9d41b6df-ba5d-49a5-ac6f-2478eddfd53d';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2Fstory.json?alt=media&token=55632eef-d813-4e81-a864-411d1809db3d';\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/URLMapper.html":{"url":"classes/URLMapper.html","title":"class - URLMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  URLMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Private\n                                instance\n                            \n                            \n                                    Private\n                                serviceURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Private\n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     URLMapper\n\n                    \n                \n                    \n                        \n                            Type :     URLMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serviceURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceURL:     ServiceURL\n\n                    \n                \n                    \n                        \n                            Type :     ServiceURL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     ServiceURL\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FloginData.json?alt=media&token=e27cfb8e-1b9b-4880-a7ed-8d409386cf50';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2FstoryList.json?alt=media&token=9d41b6df-ba5d-49a5-ac6f-2478eddfd53d';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://firebasestorage.googleapis.com/v0/b/readadda-5d474.appspot.com/o/' +\n      'stories%2Fstory.json?alt=media&token=55632eef-d813-4e81-a864-411d1809db3d';\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardModule.html":{"url":"modules/WriteBoardModule.html","title":"module - WriteBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WriteBoardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WriteBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {WriteBoardComponent} from './writeboard.component';\nimport {CommonModule} from '@angular/common';\nimport {WriteBoardRoutingModule} from './writeboard.routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\n@NgModule({\n  declarations: [\n    WriteBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    WriteBoardRoutingModule,\n    QuillEditorModule,\n    FormsModule\n  ],\n  providers: []\n})\nexport class WriteBoardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardRoutingModule.html":{"url":"modules/WriteBoardRoutingModule.html","title":"module - WriteBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { WriteBoardComponent } from './writeboard.component';\nimport { NgModule } from '@angular/core';\n\nconst WriteBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: WriteBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(WriteBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class WriteBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                RestEndPointURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                TestURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                URLMapper\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                interface\n            \n            \n                ServiceURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/app.module.ts\n            \n            \n                variable\n            \n            \n                firebaseConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/entity/story.ts\n            \n            \n                interface\n            \n            \n                Story\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/layout/center.component.ts\n            \n            \n                component\n            \n            \n                CenterComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/layout/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.component.ts\n            \n            \n                component\n            \n            \n                ReadBoardComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.service.ts\n            \n            \n                injectable\n            \n            \n                ReadBoardService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/readboard/storyboard.component.ts\n            \n            \n                component\n            \n            \n                StoryBoardComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/security/authGuard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.component.ts\n            \n            \n                component\n            \n            \n                AuthenticationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                function\n            \n            \n                isLoggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                variable\n            \n            \n                loggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.ts\n            \n            \n                injectable\n            \n            \n                Authentication\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                directive\n            \n            \n                EmailValidatorDirective\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                function\n            \n            \n                emailValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/validator/regexPattern.ts\n            \n            \n                variable\n            \n            \n                regexPattern\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/writeboard/writeboard.component.ts\n            \n            \n                component\n            \n            \n                WriteBoardComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.0\n        \n            @angular/cli : 1.6.8\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/compiler-cli : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/language-service : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @compodoc/compodoc : ^1.1.2\n        \n            angularfire2 : ^5.0.0-rc.2\n        \n            bootstrap : ^4.0.0\n        \n            core-js : ^2.4.1\n        \n            express : ^4.16.3\n        \n            firebase : ^4.5.0\n        \n            ngx-quill-editor : ^2.2.2\n        \n            popper : ^1.0.1\n        \n            rxjs : ^5.5.6\n        \n            typescript : ~2.5.3\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../emailValidator.ts)\n                        \n                        \n                            isLoggedIn   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validator/emailValidator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailValidator(regexp: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regexp\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReadadda\nThis project was generated with Angular CLI version 1.6.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nCenterComponent\n\nCenterComponent\n\nAppModule -->\n\nCenterComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            8 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        8 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            12 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            firebaseConfig   (src/.../app.module.ts)\n                        \n                        \n                            loggedIn   (src/.../authentication.service.ts)\n                        \n                        \n                            regexPattern   (src/.../regexPattern.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            firebaseConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firebaseConfig:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiKey: 'AIzaSyBQ21jEZecwO82_OWgobWlFKIJczcEwnbE',\n  authDomain: 'readadda-5d474.firebaseapp.com',\n  databaseURL: 'https://readadda-5d474.firebaseio.com',\n  projectId: 'readadda-5d474',\n  storageBucket: 'readadda-5d474.appspot.com',\n  messagingSenderId: '569031256946'\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n\n    src/app/validator/regexPattern.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            regexPattern\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexPattern:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {email: new RegExp('(?:[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*|\"' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")' +\n    '@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.)' +\n    '{3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])')}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
