var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.1.6","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.747,1,1.181]],["body/components/AppComponent.html",[0,1.267,1,1.905,2,0.317,3,0.274,4,1.804,5,1.804,6,0.232,7,2.363,8,1.394,9,2.903,10,1.614,11,3.334,12,2.903,13,3.979,14,2.52,15,4.584,16,0.569,17,1.273,18,3.142,19,1.094,20,2.849,21,2.81,22,1.06,23,2.849,24,1.094,25,0.034,26,1.525,27,0.999,28,1.094,29,3.979,30,2.849,31,0.912,32,1.614,33,0.794,34,0.513,35,2.363,36,0.317,37,0.193,38,2.043,39,1.804,40,2.363,41,2.849,42,2.043,43,2.849,44,1.094,45,2.52,46,2.52,47,1.675,48,3.142,49,1.804,50,1.804,51,1.094,52,1.804,53,1.2,54,2.903,55,1.804,56,1.319,57,1.804,58,1.2,59,1.804,60,1.2,61,1.804,62,1.094,63,1.2,64,1.614,65,1.094,66,1.614,67,1.804,68,0.022,69,0.022]],["title/modules/AppModule.html",[70,0.442,71,1.949]],["body/modules/AppModule.html",[1,2.148,2,0.234,3,0.202,6,0.172,21,2.754,25,0.036,33,1.199,34,0.379,35,1.745,36,0.355,37,0.142,44,0.808,53,2.047,56,2.25,58,2.047,65,1.866,68,0.018,69,0.018,70,0.459,71,3.82,72,0.974,73,2.182,74,1.967,75,1.783,76,1.745,77,1.745,78,1.745,79,1.745,80,1.745,81,2.754,82,2.25,83,2.047,84,1.806,85,1.191,86,1.074,87,2.104,88,3.19,89,3.195,90,2.288,91,2.104,92,1.745,93,3.19,94,2.104,95,1.806,96,0.886,97,3.19,98,1.745,99,2.288,100,2.646,101,1.191,102,1.343,103,2.104,104,1.745,105,1.509,106,2.104,107,1.191,108,2.104,109,1.745,110,1.745,111,2.104,112,2.104,113,2.104,114,2.104,115,2.646,116,1.509,117,1.509,118,1.509,119,3.19,120,3.19,121,1.509]],["title/modules/AppRoutingModule.html",[70,0.442,81,1.742]],["body/modules/AppRoutingModule.html",[1,1.383,2,0.401,3,0.346,6,0.294,25,0.035,33,1.156,34,0.648,51,1.383,64,2.041,68,0.026,69,0.026,70,0.518,81,2.041,82,2.156,83,1.517,95,2.041,96,1.517,102,1.962,104,2.989,110,2.989,122,3.604,123,2.156,124,3.604,125,1.84,126,4.66,127,3.457,128,3.604,129,4.66,130,3.604,131,3.604,132,5.164,133,3.604,134,3.604,135,2.989,136,3.604,137,3.604,138,3.604,139,2.282]],["title/injectables/AuthGuard.html",[82,1.424,140,1.295]],["body/injectables/AuthGuard.html",[2,0.333,3,0.288,6,0.244,8,1.049,16,0.597,17,1.318,19,1.58,22,1.098,24,1.58,25,0.035,26,1.203,27,1.443,28,1.58,31,1.506,33,1.011,34,0.539,36,0.333,37,0.202,68,0.023,69,0.023,82,1.905,83,2.312,96,1.26,109,2.483,135,4.408,139,1.896,140,1.981,141,2.483,142,2.994,143,4.666,144,2.994,145,2.994,146,5.068,147,4.706,148,5.068,149,2.994,150,4.117,151,3.904,152,4.117,153,2.953,154,2.483,155,1.905,156,2.994,157,4.117,158,2.994,159,2.994,160,2.994,161,2.483]],["title/injectables/Authentication.html",[83,1.295,140,1.295]],["body/injectables/Authentication.html",[2,0.404,3,0.349,6,0.296,16,0.725,19,2.102,22,1.46,25,0.034,27,1.817,33,0.725,34,0.654,36,0.404,37,0.246,68,0.026,69,0.026,83,1.972,140,2.182,153,3.718,162,3.014,163,2.653,164,3.927,165,5.476,166,5.476,167,4.684,168,2.963,169,3.633,170,3.633,171,3.633,172,3.633]],["title/modules/AuthenticationModule.html",[70,0.442,107,1.742]],["body/modules/AuthenticationModule.html",[2,0.335,3,0.289,6,0.246,21,1.707,25,0.036,33,1.197,34,0.542,36,0.46,37,0.204,44,1.157,51,2.112,68,0.023,69,0.023,70,0.595,72,1.395,73,2.675,74,1.539,75,1.914,82,1.914,83,1.741,84,2.343,85,1.707,86,1.539,99,2.967,100,3.431,101,1.707,102,1.741,107,3.25,121,2.162,173,2.5,174,2.5,175,2.5,176,3.116,177,3.014,178,4.137,179,3.014,180,4.137,181,4.137,182,4.137,183,2.5,184,3.014,185,2.967,186,1.909,187,3.014]],["title/modules/AuthenticationRoutingModule.html",[70,0.442,176,1.742]],["body/modules/AuthenticationRoutingModule.html",[0,0.936,2,0.429,3,0.37,6,0.314,25,0.036,33,1.117,34,0.694,36,0.541,37,0.261,51,1.867,68,0.027,69,0.027,70,0.554,95,2.755,96,1.623,102,2.048,123,2.251,125,1.968,127,2.441,176,2.755,183,3.198,188,3.855,189,3.855,190,3.855]],["title/components/CenterComponent.html",[0,0.747,53,1.295]],["body/components/CenterComponent.html",[0,1.301,1,1.177,2,0.341,3,0.294,4,1.942,5,1.942,6,0.25,8,1.467,9,3.018,10,1.737,11,3.379,12,1.942,14,1.942,16,0.612,17,1.34,18,3.242,22,0.817,25,0.034,26,1.496,31,0.982,32,1.737,33,0.612,34,0.552,36,0.341,37,0.207,39,1.942,44,1.177,45,2.651,46,2.651,47,1.762,48,3.242,49,1.942,50,1.942,51,1.177,52,1.942,53,2.155,54,3.394,55,1.942,56,1.419,57,1.942,58,1.291,59,1.942,60,1.291,61,1.942,62,1.177,63,1.291,64,1.737,65,1.177,66,1.737,67,1.942,68,0.023,69,0.023,191,2.544,192,4.765,193,3.472,194,4.186,195,3.067]],["title/directives/EmailValidatorDirective.html",[47,1.295,65,1.181]],["body/directives/EmailValidatorDirective.html",[2,0.303,3,0.262,6,0.222,8,1.352,10,1.544,11,2.184,16,0.544,17,1.235,22,1.028,24,1.047,25,0.036,26,0.797,27,1.569,28,1.047,31,1.644,33,0.77,34,0.491,36,0.429,37,0.184,47,1.884,65,1.718,66,2.184,68,0.022,69,0.022,75,2.071,101,1.544,125,1.392,139,2.443,168,2.484,196,1.955,197,5.135,198,4.866,199,3.21,200,2.726,201,3.857,202,5.135,203,2.726,204,3.857,205,2.726,206,2.726,207,2.726,208,3.857,209,3.857,210,2.726,211,1.727,212,2.262,213,3.199,214,3.857,215,2.766,216,2.726,217,2.535,218,2.726,219,3.857,220,2.726,221,2.726,222,2.726,223,2.726,224,2.726,225,2.726,226,2.726]],["title/components/LayoutComponent.html",[0,0.747,58,1.295]],["body/components/LayoutComponent.html",[0,1.302,1,1.181,2,0.342,3,0.296,4,1.949,5,1.949,6,0.251,8,1.47,9,3.023,10,1.743,11,3.381,12,1.949,14,2.657,16,0.614,17,1.343,18,3.247,22,0.82,25,0.034,26,1.498,31,0.985,32,1.743,33,0.614,34,0.554,36,0.342,37,0.208,39,1.949,44,1.181,45,2.657,46,2.657,47,1.766,48,3.247,49,1.949,50,1.949,51,1.181,52,1.949,53,1.295,54,3.398,55,1.949,56,1.424,57,1.949,58,2.158,59,1.949,60,1.295,61,1.949,62,1.181,63,1.295,64,1.743,65,1.181,66,1.743,67,1.949,68,0.024,69,0.024,227,2.553,228,4.774,229,4.774,230,3.077]],["title/modules/ReadBoardModule.html",[70,0.442,231,1.949]],["body/modules/ReadBoardModule.html",[2,0.342,3,0.296,6,0.251,25,0.035,33,1.151,34,0.554,36,0.467,37,0.208,44,1.181,60,2.428,62,2.125,68,0.024,69,0.024,70,0.603,72,1.424,73,2.703,74,1.571,75,2.209,84,2.376,85,1.743,86,1.571,102,1.766,185,3.009,186,1.949,231,3.811,232,2.553,233,2.553,234,2.553,235,2.553,236,2.893,237,3.136,238,3.077,239,2.553,240,2.553,241,3.077,242,2.553]],["title/modules/ReadBoardRoutingModule.html",[70,0.442,237,1.742]],["body/modules/ReadBoardRoutingModule.html",[0,1.146,2,0.409,3,0.353,6,0.3,25,0.036,33,1.135,34,0.662,36,0.525,37,0.249,60,1.988,62,1.812,68,0.026,69,0.026,70,0.529,95,2.674,96,1.549,102,1.988,123,2.185,125,1.878,127,2.99,237,2.674,239,3.051,242,3.051,243,3.679,244,3.679,245,1.549,246,3.679]],["title/injectables/ReadBoardService.html",[140,1.295,236,1.571]],["body/injectables/ReadBoardService.html",[2,0.244,3,0.211,6,0.179,16,0.438,17,1.053,19,0.842,22,1.365,24,1.685,25,0.035,26,1.283,27,1.538,28,1.685,31,1.687,33,1.076,34,0.395,36,0.244,37,0.148,38,1.573,68,0.018,69,0.018,98,1.819,125,1.68,140,1.663,151,1.819,154,1.819,155,2.613,163,1.863,168,1.119,215,1.573,236,1.68,245,0.923,247,1.819,248,4.39,249,4.39,250,4.097,251,3.291,252,3.291,253,2.193,254,4.39,255,2.193,256,3.291,257,2.193,258,2.193,259,2.193,260,2.36,261,2.193,262,3.291,263,4.939,264,2.193,265,4.097,266,3.291,267,2.193,268,1.819,269,3.291,270,2.193,271,0.842,272,1.819,273,1.015,274,2.193,275,2.193,276,2.193,277,2.193,278,2.193,279,2.193,280,2.193,281,0.923,282,2.193,283,2.193,284,3.291,285,3.291,286,2.193,287,3.291,288,3.291,289,2.729,290,3.291,291,3.291,292,4.39,293,3.291,294,3.291,295,3.291,296,3.291,297,3.291,298,2.729,299,2.193,300,1.242,301,2.193,302,2.193,303,2.193,304,1.819,305,1.389,306,2.193]],["title/classes/RestEndPointURL.html",[37,0.208,307,1.571]],["body/classes/RestEndPointURL.html",[2,0.278,3,0.24,6,0.204,8,1.815,16,0.499,17,1.161,19,0.961,22,1.137,24,0.961,25,0.036,26,0.731,28,0.961,31,1.752,32,2.417,36,0.52,37,0.316,68,0.02,69,0.02,155,1.679,217,1.417,245,1.796,271,0.961,273,1.975,281,1.796,300,2.054,305,2.297,307,2.179,308,1.417,309,2.728,310,3.708,311,3.281,312,3.281,313,2.503,314,2.503,315,2.964,316,2.503,317,2.297,318,1.585,319,2.297,320,1.852,321,1.585,322,2.297,323,1.585,324,0.961,325,2.702,326,1.585,327,2.297,328,1.585]],["title/interfaces/ServiceURL.html",[309,1.571,324,1.181]],["body/interfaces/ServiceURL.html",[2,0.287,3,0.248,6,0.211,8,1.763,16,0.516,17,1.188,19,0.992,22,1.158,24,0.992,25,0.036,26,0.755,28,0.992,31,1.767,36,0.528,37,0.294,68,0.021,69,0.021,155,1.718,217,1.463,245,1.829,271,0.992,273,2.01,281,1.829,300,2.102,305,2.35,307,1.895,308,1.463,309,2.754,310,3.416,311,3.316,312,3.316,315,3.007,317,2.35,318,1.636,319,2.35,320,1.895,321,1.636,322,2.35,323,1.636,324,1.425,325,2.751,326,1.636,327,2.35,328,1.636,329,2.583,330,2.583,331,2.583]],["title/interfaces/Story.html",[271,1.181,324,1.181]],["body/interfaces/Story.html",[2,0.335,3,0.289,6,0.246,16,0.602,22,1.552,25,0.034,27,2.041,36,0.335,68,0.023,69,0.023,163,2.343,168,3.157,245,2.14,260,4.176,271,1.588,324,1.588,332,2.5,333,5.083,334,5.083,335,5.083,336,5.083,337,5.083,338,5.083,339,5.083,340,5.083,341,3.014,342,3.014,343,3.014,344,3.014,345,3.014,346,3.014,347,3.014,348,3.014,349,3.014]],["title/components/StoryBoardComponent.html",[0,0.747,62,1.181]],["body/components/StoryBoardComponent.html",[0,1.136,1,0.831,2,0.241,3,0.208,4,1.372,5,1.372,6,0.177,8,1.143,9,2.483,10,1.226,11,3.042,12,1.372,14,1.372,16,0.432,17,1.044,18,2.763,19,0.831,22,1.31,24,0.831,25,0.035,26,1.367,27,1.529,28,0.831,31,1.044,32,1.846,33,0.934,34,0.39,36,0.241,37,0.146,38,1.553,39,2.065,44,0.831,45,2.065,46,2.065,47,1.372,48,2.763,49,1.372,50,1.372,51,0.831,52,1.372,53,0.912,54,2.483,55,1.372,56,1.002,57,1.372,58,0.912,59,1.372,60,0.912,61,1.372,62,1.675,63,0.912,64,1.226,65,0.831,66,1.226,67,1.372,68,0.018,69,0.018,75,1.509,96,1.372,143,4.232,155,1.509,163,1.846,168,2.002,193,2.704,236,2.51,240,1.797,245,1.837,250,3.881,260,2.812,265,2.704,271,2.101,272,1.797,350,1.797,351,3.26,352,4.362,353,2.166,354,4.917,355,3.921,356,3.26,357,2.166,358,2.166,359,2.166,360,2.166,361,2.166,362,2.166,363,2.166,364,3.26,365,2.166,366,2.166,367,2.166,368,2.166,369,2.166,370,2.166]],["title/classes/TestURL.html",[37,0.208,320,1.571]],["body/classes/TestURL.html",[2,0.278,3,0.24,6,0.204,8,1.815,16,0.499,17,1.161,19,0.961,22,1.137,24,0.961,25,0.036,26,0.731,28,0.961,31,1.752,36,0.52,37,0.316,68,0.02,69,0.02,155,1.679,168,2.179,217,1.417,245,1.796,271,0.961,273,1.975,281,1.796,300,2.054,305,2.297,307,1.852,308,1.417,309,2.728,310,3.708,311,3.281,312,3.281,315,2.964,317,2.297,318,1.585,319,2.297,320,2.179,321,1.585,322,2.297,323,1.585,324,0.961,325,2.702,326,1.585,327,2.297,328,1.585,371,2.503,372,2.503,373,2.503]],["title/classes/URLMapper.html",[37,0.208,273,1.424]],["body/classes/URLMapper.html",[2,0.277,3,0.239,6,0.203,8,1.737,16,0.497,17,1.156,19,1.633,22,1.244,25,0.036,27,1.266,31,1.655,36,0.519,37,0.316,68,0.02,69,0.02,155,2.393,163,2.046,217,1.409,245,1.521,271,0.955,273,2.393,281,1.791,300,2.046,307,1.845,308,1.409,309,2.958,310,3.378,311,2.694,312,2.694,315,2.694,317,3.274,318,2.956,319,2.288,320,1.845,321,2.956,322,2.288,323,1.576,324,0.955,325,2.694,326,1.576,327,2.288,328,1.576,374,3.613,375,2.489,376,2.489]],["title/modules/WriteBoardModule.html",[70,0.442,377,1.949]],["body/modules/WriteBoardModule.html",[2,0.378,3,0.326,6,0.277,25,0.035,33,1.177,34,0.611,36,0.498,37,0.23,44,1.304,63,2.398,68,0.025,69,0.025,70,0.645,72,1.572,73,2.841,74,1.734,75,2.074,84,2.538,85,1.923,86,1.734,99,3.215,101,1.923,102,1.887,115,3.718,116,2.436,117,2.436,118,2.436,185,3.215,186,2.151,377,3.735,378,2.817,379,2.817,380,2.817,381,3.226,382,3.396,383,2.817,384,3.396]],["title/modules/WriteBoardRoutingModule.html",[70,0.442,381,1.742]],["body/modules/WriteBoardRoutingModule.html",[0,0.936,2,0.429,3,0.37,6,0.314,25,0.036,33,1.117,34,0.694,36,0.541,37,0.261,63,2.048,68,0.027,69,0.027,70,0.554,95,2.755,96,1.623,102,2.048,123,2.251,125,1.968,127,2.441,381,2.755,383,3.198,385,3.855,386,3.855,387,3.855]],["title/coverage.html",[388,3.48]],["body/coverage.html",[0,1.349,1,1.018,6,0.216,7,2.201,21,1.502,25,0.035,27,0.93,37,0.298,42,1.903,47,1.117,51,1.018,53,1.117,56,1.228,58,1.117,60,1.117,62,1.018,63,1.117,65,1.018,68,0.021,69,0.021,82,1.228,83,1.117,105,2.713,140,2.024,141,2.201,162,2.201,164,1.903,191,2.201,196,2.713,199,1.903,211,2.396,227,2.201,236,1.354,247,2.201,271,1.018,273,1.228,281,1.117,307,1.354,308,2.722,309,1.354,320,1.354,324,1.452,332,2.201,350,2.201,388,2.201,389,2.653,390,2.653,391,2.653,392,6.191,393,4.409,394,3.783,395,4.409,396,2.653,397,3.783,398,2.653,399,2.653,400,2.653,401,2.653,402,2.653,403,2.653,404,2.653,405,2.653,406,2.653,407,3.162,408,2.653,409,5.284,410,3.447,411,2.201,412,2.201,413,2.653,414,2.653,415,2.201,416,2.201,417,2.653,418,2.653]],["title/dependencies.html",[72,1.712,419,2.572]],["body/dependencies.html",[25,0.036,34,0.609,68,0.025,69,0.025,72,1.566,74,1.727,89,3.709,90,3.207,92,2.806,96,1.424,101,1.916,116,2.426,117,2.426,118,2.426,121,2.426,186,2.143,420,3.383,421,3.383,422,3.383,423,6.108,424,3.383,425,2.806,426,4.471,427,2.806,428,3.383,429,3.383,430,3.383,431,3.383,432,3.383,433,3.383,434,3.383,435,3.383,436,3.383,437,3.383,438,3.383,439,3.383,440,3.383,441,3.383,442,3.383,443,3.383,444,3.383,445,3.383,446,3.383,447,3.383,448,3.383,449,3.383]],["title/miscellaneous/functions.html",[211,2.343,450,1.628]],["body/miscellaneous/functions.html",[16,0.885,24,1.702,25,0.032,26,1.296,28,1.702,68,0.03,69,0.03,164,4.067,196,3.18,199,3.802,211,2.808,212,3.678,213,3.678,407,3.18,450,2.808,451,4.434,452,3.678,453,4.434]],["title/index.html",[16,0.513,454,2.572,455,2.572]],["body/index.html",[0,1.191,3,0.312,6,0.265,25,0.024,26,0.949,40,2.693,68,0.024,69,0.024,86,1.658,281,1.367,289,2.693,298,3.608,425,2.693,427,4.07,456,4.35,457,5.241,458,4.906,459,3.247,460,3.247,461,5.745,462,5.745,463,3.247,464,3.247,465,3.247,466,3.247,467,3.247,468,3.247,469,3.247,470,3.247,471,3.247,472,4.906,473,3.247,474,5.465,475,3.247,476,3.247,477,3.247,478,3.247,479,3.247,480,3.247,481,2.693,482,4.35,483,5.465,484,4.35,485,4.35,486,3.247,487,5.241,488,3.247,489,3.247,490,3.247,491,4.906,492,3.247,493,3.247,494,3.247,495,3.247]],["title/modules.html",[70,0.603]],["body/modules.html",[25,0.028,68,0.028,69,0.028,70,0.585,71,2.576,81,2.303,90,4.092,107,2.303,176,2.303,231,2.576,237,2.303,377,2.576,381,2.303,496,5.706,497,5.706,498,6.116,499,5.706,500,5.706]],["title/overview.html",[501,3.48]],["body/overview.html",[0,0.629,1,2.073,21,2.464,25,0.034,36,0.288,37,0.175,44,0.994,47,1.091,51,1.67,53,1.832,56,2.014,58,1.832,60,2.12,62,1.67,63,1.832,65,1.67,68,0.021,69,0.021,70,0.535,71,3.888,72,1.199,73,1.467,74,1.323,75,1.199,76,2.149,77,2.149,78,2.149,79,2.149,80,2.149,81,2.464,82,2.014,83,1.832,84,2.106,85,1.467,86,1.323,107,2.968,123,1.199,140,1.091,173,2.149,174,2.149,175,2.149,176,2.464,231,3.615,232,2.149,233,2.149,234,2.149,235,2.149,236,2.428,237,2.464,304,2.149,324,0.994,377,3.319,378,2.149,379,2.149,380,2.149,381,2.464,501,2.149,502,3.719,503,2.591,504,2.591,505,2.591,506,2.591]],["title/routes.html",[123,1.941]],["body/routes.html",[25,0.031,68,0.031,69,0.031,123,2.256]],["title/miscellaneous/variables.html",[410,2.653,450,1.628]],["body/miscellaneous/variables.html",[16,0.61,25,0.035,27,1.792,42,3.411,68,0.023,69,0.023,105,3.963,139,1.935,153,2.995,161,2.535,215,3.411,268,3.946,281,1.287,407,2.192,410,2.192,411,2.535,412,3.946,415,2.535,416,2.535,450,1.935,452,2.535,481,3.464,507,3.056,508,3.056,509,3.056,510,5.525,511,3.056,512,3.056,513,5.907,514,4.176,515,4.176,516,4.176,517,3.056,518,3.056,519,4.176,520,4.176,521,4.176,522,4.176,523,5.352,524,3.056,525,3.056,526,4.176,527,4.176,528,4.176,529,4.176,530,3.056,531,3.056,532,3.056,533,3.056]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["0.8.19",{"_index":449,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":409,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":396,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":402,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":406,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":397,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":395,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":393,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":394,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":404,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":403,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":408,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":304,"title":{},"body":{"injectables/ReadBoardService.html":{},"overview.html":{}}}],["1.0.1",{"_index":443,"title":{},"body":{"dependencies.html":{}}}],["1.1.2",{"_index":432,"title":{},"body":{"dependencies.html":{}}}],["1.6.8",{"_index":425,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12",{"_index":506,"title":{},"body":{"overview.html":{}}}],["2",{"_index":505,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":440,"title":{},"body":{"dependencies.html":{}}}],["2.2.2",{"_index":441,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["2.5.3",{"_index":447,"title":{},"body":{"dependencies.html":{}}}],["21",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":504,"title":{},"body":{"overview.html":{}}}],["3/14",{"_index":400,"title":{},"body":{"coverage.html":{}}}],["3}(?:25[0",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":503,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["4.16.3",{"_index":438,"title":{},"body":{"dependencies.html":{}}}],["4][0",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.0",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["5.2.10",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":445,"title":{},"body":{"dependencies.html":{}}}],["5]|2[0",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":502,"title":{},"body":{"overview.html":{}}}],["9",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9!#$%&\\'*+/=?^_",{"_index":514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9](?:[a",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?\\\\.)+[a",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9])?|\\\\[(?:(?:25[0",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]?|[a",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9][0",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]|[01]?[0",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_authenticationservic",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["_readboardservic",{"_index":355,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["_storylisturl",{"_index":248,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["abstractcontrol",{"_index":202,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["activatedrout",{"_index":354,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroute.snapshot.params['storyid",{"_index":365,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["activatedroutesnapshot",{"_index":146,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["actual_compon",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["adda",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["adda'},{'nam",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["angular",{"_index":458,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/t",{"_index":179,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["angular/cli",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":186,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/ReadBoardService.html":{}}}],["angular/compil",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["angular/languag",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"dependencies.html":{}}}],["app",{"_index":289,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["app.compon",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["app.routing.modul",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["app/readboard/readboard.module#readboardmodul",{"_index":133,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/security/authentication.module#authenticationmodul",{"_index":136,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["app/writeboard/writeboard.module#writeboardmodul",{"_index":134,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appemail",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["appmodul",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppath",{"_index":303,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["approutingmodul",{"_index":81,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":475,"title":{},"body":{"index.html":{}}}],["authent",{"_index":83,"title":{"injectables/Authentication.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authentication'},{'nam",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["authentication.compon",{"_index":183,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{}}}],["authentication.routing.modul",{"_index":187,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authentication.servic",{"_index":184,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["authenticationcompon",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authenticationmodul",{"_index":107,"title":{"modules/AuthenticationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationrout",{"_index":189,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["authenticationroutingmodul",{"_index":176,"title":{"modules/AuthenticationRoutingModule.html":{}},"body":{"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["authenticationservic",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":82,"title":{"injectables/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"modules/AuthenticationModule.html":{},"coverage.html":{},"overview.html":{}}}],["authornam",{"_index":333,"title":{},"body":{"interfaces/Story.html":{}}}],["automat",{"_index":467,"title":{},"body":{"index.html":{}}}],["avail",{"_index":500,"title":{},"body":{"modules.html":{}}}],["boolean",{"_index":153,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":498,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":474,"title":{},"body":{"index.html":{}}}],["canactiv",{"_index":135,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{}}}],["canactivate(next",{"_index":145,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["catch(this.handleerror",{"_index":286,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["catch(this.handlestorydetailerror",{"_index":306,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["cdktablemodul",{"_index":178,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["center",{"_index":192,"title":{},"body":{"components/CenterComponent.html":{}}}],["center'},{'nam",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["center.component.html",{"_index":194,"title":{},"body":{"components/CenterComponent.html":{}}}],["centercompon",{"_index":53,"title":{"components/CenterComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["chang",{"_index":469,"title":{},"body":{"index.html":{}}}],["check",{"_index":494,"title":{},"body":{"index.html":{}}}],["class",{"_index":37,"title":{"classes/RestEndPointURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":427,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cluster_appmodul",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authenticationmodul",{"_index":173,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_declar",{"_index":174,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_authenticationmodule_import",{"_index":175,"title":{},"body":{"modules/AuthenticationModule.html":{},"overview.html":{}}}],["cluster_readboardmodul",{"_index":232,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_declar",{"_index":233,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_import",{"_index":235,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_readboardmodule_readboardcomponent_provid",{"_index":234,"title":{},"body":{"modules/ReadBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodul",{"_index":378,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_declar",{"_index":379,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["cluster_writeboardmodule_import",{"_index":380,"title":{},"body":{"modules/WriteBoardModule.html":{},"overview.html":{}}}],["code",{"_index":470,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":185,"title":{},"body":{"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{}}}],["compodoc/compodoc",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["consol",{"_index":295,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.error(error",{"_index":296,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.info('auth",{"_index":171,"title":{},"body":{"injectables/Authentication.html":{}}}],["console.info('i",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["console.info('load",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["console.info('valu",{"_index":218,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["console.log",{"_index":325,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["console.log('authguard",{"_index":156,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["console.log('host",{"_index":299,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log('queri",{"_index":361,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["console.log(data",{"_index":285,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["console.log(this._storylisturl",{"_index":279,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["const",{"_index":125,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["constructor(_authenticationservic",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(activatedrout",{"_index":353,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["constructor(authent",{"_index":142,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["constructor(http",{"_index":253,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["constructor(priv",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["content",{"_index":334,"title":{},"body":{"interfaces/Story.html":{}}}],["control",{"_index":204,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["control.valu",{"_index":216,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["core",{"_index":434,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":388,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdd",{"_index":335,"title":{},"body":{"interfaces/Story.html":{}}}],["declar",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["default",{"_index":268,"title":{},"body":{"injectables/ReadBoardService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["depend",{"_index":72,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":464,"title":{},"body":{"index.html":{}}}],["develop",{"_index":460,"title":{},"body":{"index.html":{}}}],["direct",{"_index":47,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":473,"title":{},"body":{"index.html":{}}}],["directori",{"_index":478,"title":{},"body":{"index.html":{}}}],["dislik",{"_index":336,"title":{},"body":{"interfaces/Story.html":{}}}],["dist",{"_index":477,"title":{},"body":{"index.html":{}}}],["do(data",{"_index":284,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["document",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["dynam",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["e2",{"_index":488,"title":{},"body":{"index.html":{}}}],["editor",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["element",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["email",{"_index":511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":199,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailvalidator(new",{"_index":224,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["emailvalidator(regexp",{"_index":212,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["emailvalidatordirect",{"_index":65,"title":{"directives/EmailValidatorDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["enabletrac",{"_index":138,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["end",{"_index":487,"title":{},"body":{"index.html":{}}}],["entity/stori",{"_index":272,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["environ",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":265,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["errormessag",{"_index":352,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["execut",{"_index":484,"title":{},"body":{"index.html":{}}}],["export",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":161,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":480,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":210,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["formsmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/WriteBoardModule.html":{}}}],["full",{"_index":131,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":211,"title":{"miscellaneous/functions.html":{}},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["further",{"_index":490,"title":{},"body":{"index.html":{}}}],["gener",{"_index":457,"title":{},"body":{"index.html":{}}}],["get",{"_index":454,"title":{"index.html":{}},"body":{}}],["getapppath",{"_index":249,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["getstori",{"_index":250,"title":{},"body":{"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{}}}],["getstory(storyid",{"_index":259,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["geturl",{"_index":321,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["go",{"_index":493,"title":{},"body":{"index.html":{}}}],["graph",{"_index":499,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":439,"title":{},"body":{"dependencies.html":{}}}],["handleerror",{"_index":251,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handleerror(error",{"_index":262,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror",{"_index":252,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["handlestorydetailerror(error",{"_index":266,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header",{"_index":282,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["header'},{'nam",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["headercompon",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":491,"title":{},"body":{"index.html":{}}}],["html",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["http",{"_index":256,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["http://localhost:4200",{"_index":466,"title":{},"body":{"index.html":{}}}],["http://taleaddaapi.herokuapp.com/taleadda/authent",{"_index":326,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["httpclient",{"_index":254,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["httpclientmodul",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheader",{"_index":280,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["https://taleaddaapi.herokuapp.com/taleadda/stori",{"_index":327,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["i'))(control",{"_index":226,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["identifi",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["import",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["index",{"_index":16,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["infrastructur",{"_index":293,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["inject",{"_index":140,"title":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{}},"body":{"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":198,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["instanc",{"_index":318,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["instead",{"_index":294,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["interfac",{"_index":324,"title":{"interfaces/ServiceURL.html":{},"interfaces/Story.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"overview.html":{}}}],["isloggedin",{"_index":164,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["js",{"_index":435,"title":{},"body":{"dependencies.html":{}}}],["json.stringify(activatedroute.snapshot.param",{"_index":363,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["karma",{"_index":486,"title":{},"body":{"index.html":{}}}],["key",{"_index":214,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["layout",{"_index":228,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'nam",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["layout/center.compon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/header.compon",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["layout/layout.compon",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["layoutcompon",{"_index":58,"title":{"components/LayoutComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["like",{"_index":337,"title":{},"body":{"interfaces/Story.html":{}}}],["liter",{"_index":205,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["load",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["loadchildren",{"_index":132,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loading..load",{"_index":229,"title":{},"body":{"components/LayoutComponent.html":{}}}],["location.href.split",{"_index":302,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["location.origin",{"_index":300,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["log",{"_index":292,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["loggedin",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginurl",{"_index":311,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["mainrout",{"_index":126,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["matbuttonmodul",{"_index":180,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["match",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodul",{"_index":181,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["matinputmodul",{"_index":182,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["matmenumodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["method",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["miscellan",{"_index":450,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modifiedd",{"_index":338,"title":{},"body":{"interfaces/Story.html":{}}}],["modul",{"_index":70,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":492,"title":{},"body":{"index.html":{}}}],["multi",{"_index":222,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["name",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":465,"title":{},"body":{"index.html":{}}}],["new",{"_index":281,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":150,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["ng",{"_index":462,"title":{},"body":{"index.html":{}}}],["ng_valid",{"_index":208,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["ngmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["ngoninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["ngx",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["null",{"_index":217,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["number",{"_index":260,"title":{},"body":{"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{}}}],["object",{"_index":510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":151,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{}}}],["observable.throw(error",{"_index":297,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["onchang",{"_index":206,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["oninit",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["option",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":501,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":419,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":362,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":165,"title":{},"body":{"injectables/Authentication.html":{}}}],["path",{"_index":127,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["patharray",{"_index":301,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["pathmatch",{"_index":130,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["patterninvalid",{"_index":220,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["platformbrowserdynam",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["popper",{"_index":442,"title":{},"body":{"dependencies.html":{}}}],["privat",{"_index":155,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["prod",{"_index":479,"title":{},"body":{"index.html":{}}}],["product",{"_index":481,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":456,"title":{},"body":{"index.html":{}}}],["promis",{"_index":152,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["properti",{"_index":163,"title":{},"body":{"injectables/Authentication.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{}}}],["protractor",{"_index":489,"title":{},"body":{"index.html":{}}}],["provid",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"directives/EmailValidatorDirective.html":{},"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["public",{"_index":310,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["quill",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{},"dependencies.html":{}}}],["quilleditormodul",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/WriteBoardModule.html":{}}}],["ra",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["reactiveformsmodul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{}}}],["read",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["readadda",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["readboard",{"_index":129,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["readboard'},{'nam",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["readboard.compon",{"_index":239,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["readboard.routing.modul",{"_index":241,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["readboard.servic",{"_index":240,"title":{},"body":{"modules/ReadBoardModule.html":{},"components/StoryBoardComponent.html":{}}}],["readboardcompon",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readboardmodul",{"_index":231,"title":{"modules/ReadBoardModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardrout",{"_index":244,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["readboardroutingmodul",{"_index":237,"title":{"modules/ReadBoardRoutingModule.html":{}},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["readboardservic",{"_index":236,"title":{"injectables/ReadBoardService.html":{}},"body":{"modules/ReadBoardModule.html":{},"injectables/ReadBoardService.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["readm",{"_index":495,"title":{},"body":{"index.html":{}}}],["real",{"_index":287,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["redirect",{"_index":158,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["redirectto",{"_index":128,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["regexp",{"_index":213,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"miscellaneous/functions.html":{}}}],["regexp('(?:[a",{"_index":512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(this.emailvalid",{"_index":225,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexp.test(valu",{"_index":219,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["regexpattern",{"_index":412,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["reload",{"_index":468,"title":{},"body":{"index.html":{}}}],["remot",{"_index":291,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["reset",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}],["respons",{"_index":263,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["restendpointurl",{"_index":307,"title":{"classes/RestEndPointURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["result",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["rout",{"_index":123,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":143,"title":{},"body":{"injectables/AuthGuard.html":{},"components/StoryBoardComponent.html":{}}}],["routermodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthenticationRoutingModule.html":{},"modules/ReadBoardRoutingModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forchild(authenticationrout",{"_index":190,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["routermodule.forchild(readboardrout",{"_index":246,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["routermodule.forchild(writeboardrout",{"_index":387,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["routermodule.forroot",{"_index":137,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":148,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["run",{"_index":461,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":444,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/observable/of",{"_index":278,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/catch",{"_index":277,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/do",{"_index":276,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/add/operator/map",{"_index":275,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["rxjs/observ",{"_index":154,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/ReadBoardService.html":{}}}],["scaffold",{"_index":471,"title":{},"body":{"index.html":{}}}],["security/authent",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGuard.html":{}}}],["security/authentication.compon",{"_index":124,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["security/authentication.modul",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["security/authentication.servic",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["security/authguard",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["send",{"_index":290,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["serv",{"_index":463,"title":{},"body":{"index.html":{}}}],["server",{"_index":298,"title":{},"body":{"injectables/ReadBoardService.html":{},"index.html":{}}}],["servic",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["serviceurl",{"_index":309,"title":{"interfaces/ServiceURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["serviceurlconfig",{"_index":274,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["simplechang",{"_index":207,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"modules/AuthenticationModule.html":{},"modules/AuthenticationRoutingModule.html":{},"components/CenterComponent.html":{},"directives/EmailValidatorDirective.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"index.html":{}}}],["src/.../authentication.service.t",{"_index":452,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../emailvalidator.t",{"_index":451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.t",{"_index":508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../regexpattern.t",{"_index":509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:13",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:9",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routing.module.t",{"_index":122,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/entity/story.t",{"_index":332,"title":{},"body":{"interfaces/Story.html":{},"coverage.html":{}}}],["src/app/entity/story.ts:10",{"_index":342,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:2",{"_index":347,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:3",{"_index":349,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:4",{"_index":348,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:5",{"_index":343,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:6",{"_index":346,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:7",{"_index":341,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:8",{"_index":345,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/entity/story.ts:9",{"_index":344,"title":{},"body":{"interfaces/Story.html":{}}}],["src/app/layout/center.component.t",{"_index":191,"title":{},"body":{"components/CenterComponent.html":{},"coverage.html":{}}}],["src/app/layout/center.component.ts:10",{"_index":195,"title":{},"body":{"components/CenterComponent.html":{}}}],["src/app/layout/header.component.t",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["src/app/layout/layout.component.t",{"_index":227,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["src/app/layout/layout.component.ts:10",{"_index":230,"title":{},"body":{"components/LayoutComponent.html":{}}}],["src/app/readboard/readboard.component.t",{"_index":401,"title":{},"body":{"coverage.html":{}}}],["src/app/readboard/readboard.module.t",{"_index":238,"title":{},"body":{"modules/ReadBoardModule.html":{}}}],["src/app/readboard/readboard.routing.module.t",{"_index":243,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{}}}],["src/app/readboard/readboard.service.t",{"_index":247,"title":{},"body":{"injectables/ReadBoardService.html":{},"coverage.html":{}}}],["src/app/readboard/readboard.service.ts:11",{"_index":255,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:15",{"_index":270,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:17",{"_index":258,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:26",{"_index":264,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:33",{"_index":257,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:43",{"_index":261,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/readboard.service.ts:50",{"_index":267,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["src/app/readboard/storyboard.component.t",{"_index":350,"title":{},"body":{"components/StoryBoardComponent.html":{},"coverage.html":{}}}],["src/app/readboard/storyboard.component.ts:13",{"_index":360,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:14",{"_index":359,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:15",{"_index":356,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:22",{"_index":358,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/readboard/storyboard.component.ts:27",{"_index":357,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["src/app/security/authentication.component.t",{"_index":405,"title":{},"body":{"coverage.html":{}}}],["src/app/security/authentication.module.t",{"_index":177,"title":{},"body":{"modules/AuthenticationModule.html":{}}}],["src/app/security/authentication.routing.module.t",{"_index":188,"title":{},"body":{"modules/AuthenticationRoutingModule.html":{}}}],["src/app/security/authentication.service.t",{"_index":407,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/security/authentication.t",{"_index":162,"title":{},"body":{"injectables/Authentication.html":{},"coverage.html":{}}}],["src/app/security/authentication.ts:5",{"_index":170,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:6",{"_index":169,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authentication.ts:7",{"_index":167,"title":{},"body":{"injectables/Authentication.html":{}}}],["src/app/security/authguard.t",{"_index":141,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["src/app/security/authguard.ts:14",{"_index":149,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/security/authguard.ts:7",{"_index":144,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["src/app/serviceurlconfig.t",{"_index":308,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["src/app/serviceurlconfig.ts:10",{"_index":376,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:19",{"_index":329,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:2",{"_index":375,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:20",{"_index":330,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:21",{"_index":331,"title":{},"body":{"interfaces/ServiceURL.html":{}}}],["src/app/serviceurlconfig.ts:25",{"_index":371,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:3",{"_index":374,"title":{},"body":{"classes/URLMapper.html":{}}}],["src/app/serviceurlconfig.ts:30",{"_index":372,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:35",{"_index":373,"title":{},"body":{"classes/TestURL.html":{}}}],["src/app/serviceurlconfig.ts:42",{"_index":313,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:43",{"_index":314,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/serviceurlconfig.ts:44",{"_index":316,"title":{},"body":{"classes/RestEndPointURL.html":{}}}],["src/app/validator/emailvalidator.t",{"_index":196,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/validator/emailvalidator.ts:20",{"_index":200,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/emailvalidator.ts:22",{"_index":203,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["src/app/validator/regexpattern.t",{"_index":411,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/writeboard/writeboard.component.t",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["src/app/writeboard/writeboard.module.t",{"_index":382,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["src/app/writeboard/writeboard.routing.module.t",{"_index":385,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["src/environments/environment.prod.t",{"_index":415,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":416,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":455,"title":{"index.html":{}},"body":{}}],["state",{"_index":147,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["statement",{"_index":391,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":317,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["store",{"_index":476,"title":{},"body":{"index.html":{}}}],["stori",{"_index":271,"title":{"interfaces/Story.html":{}},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["storyboard",{"_index":366,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboard.compon",{"_index":242,"title":{},"body":{"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{}}}],["storyboard.component.html",{"_index":351,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["storyboardcompon",{"_index":62,"title":{"components/StoryBoardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"modules/ReadBoardModule.html":{},"modules/ReadBoardRoutingModule.html":{},"components/StoryBoardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storyid",{"_index":245,"title":{},"body":{"modules/ReadBoardRoutingModule.html":{},"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storylisturl",{"_index":312,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["storyshortdescript",{"_index":339,"title":{},"body":{"interfaces/Story.html":{}}}],["storyurl",{"_index":305,"title":{},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{}}}],["storyurl(storyid",{"_index":315,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["string",{"_index":168,"title":{},"body":{"injectables/Authentication.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/TestURL.html":{}}}],["support",{"_index":496,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":497,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["templateurl",{"_index":193,"title":{},"body":{"components/CenterComponent.html":{},"components/StoryBoardComponent.html":{}}}],["test",{"_index":483,"title":{},"body":{"index.html":{}}}],["testurl",{"_index":320,"title":{"classes/TestURL.html":{}},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["this._authenticationservice.isloggedin",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["this._readboardservice.getstory(this.storyid).subscrib",{"_index":368,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.authentication.isloggedin",{"_index":157,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.emailvalid",{"_index":223,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["this.errormessag",{"_index":370,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.getstori",{"_index":367,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.http.get(this._storylisturl",{"_index":283,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["this.inst",{"_index":322,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.instance.serviceurl",{"_index":323,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.isloggedin",{"_index":172,"title":{},"body":{"injectables/Authentication.html":{}}}],["this.router.navigate(['/authent",{"_index":160,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.serviceurl",{"_index":319,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["this.stori",{"_index":369,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["this.storyid",{"_index":364,"title":{},"body":{"components/StoryBoardComponent.html":{}}}],["titl",{"_index":340,"title":{},"body":{"interfaces/Story.html":{}}}],["tree",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["true",{"_index":139,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthGuard.html":{},"directives/EmailValidatorDirective.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthGuard.html":{},"injectables/Authentication.html":{},"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"interfaces/Story.html":{},"components/StoryBoardComponent.html":{},"classes/URLMapper.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":446,"title":{},"body":{"dependencies.html":{}}}],["undefin",{"_index":453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":482,"title":{},"body":{"index.html":{}}}],["url",{"_index":328,"title":{},"body":{"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{}}}],["urlmapp",{"_index":273,"title":{"classes/URLMapper.html":{}},"body":{"injectables/ReadBoardService.html":{},"classes/RestEndPointURL.html":{},"interfaces/ServiceURL.html":{},"classes/TestURL.html":{},"classes/URLMapper.html":{},"coverage.html":{}}}],["urlmapper.geturl().storylisturl",{"_index":269,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["us",{"_index":472,"title":{},"body":{"index.html":{}}}],["useexist",{"_index":221,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["user",{"_index":159,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["usernam",{"_index":166,"title":{},"body":{"injectables/Authentication.html":{}}}],["valid",{"_index":197,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validate(control",{"_index":201,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["validator/emailvalid",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["validatorfn",{"_index":209,"title":{},"body":{"directives/EmailValidatorDirective.html":{}}}],["valu",{"_index":215,"title":{},"body":{"directives/EmailValidatorDirective.html":{},"injectables/ReadBoardService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["variabl",{"_index":410,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":459,"title":{},"body":{"index.html":{}}}],["via",{"_index":485,"title":{},"body":{"index.html":{}}}],["void",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"classes/RestEndPointURL.html":{},"components/StoryBoardComponent.html":{}}}],["world",{"_index":288,"title":{},"body":{"injectables/ReadBoardService.html":{}}}],["writeboard",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{}}}],["writeboard.compon",{"_index":383,"title":{},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{}}}],["writeboard.routing.modul",{"_index":384,"title":{},"body":{"modules/WriteBoardModule.html":{}}}],["writeboardcompon",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/CenterComponent.html":{},"components/LayoutComponent.html":{},"components/StoryBoardComponent.html":{},"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["writeboardmodul",{"_index":377,"title":{"modules/WriteBoardModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules.html":{},"overview.html":{}}}],["writeboardrout",{"_index":386,"title":{},"body":{"modules/WriteBoardRoutingModule.html":{}}}],["writeboardroutingmodul",{"_index":381,"title":{"modules/WriteBoardRoutingModule.html":{}},"body":{"modules/WriteBoardModule.html":{},"modules/WriteBoardRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["x01",{"_index":515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x08\\x0b\\x0c\\x0e",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x09\\x0b\\x0c\\x0e",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f\\x21\\x23",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5a\\x53",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x5b\\x5d",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x7f]|\\\\\\\\[\\x01",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z0",{"_index":513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.j",{"_index":448,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthenticationModule.html":{},"modules/ReadBoardModule.html":{},"modules/WriteBoardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                read-adda\n            \n\n\n\n            \n                template\n                Loading..\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    _authenticationService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthenticationService} from './security/authentication.service';\n\n@Component({\n  selector: 'read-adda',\n  template: 'Loading..',\n})\n\nexport class AppComponent implements OnInit {\n\n  constructor(private _authenticationService: AuthenticationService) {}\n\n  ngOnInit() {\n    console.info('Loading ReadAdda');\n    console.info('Is LoggedIn = ' + this._authenticationService.isLoggedIn());\n  }\n\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nCenterComponent\n\nCenterComponent\n\nAppModule -->\n\nCenterComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                LayoutComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                CenterComponent\n                            \n                            \n                                EmailValidatorDirective\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     Authentication\n                            \n                            \n                                     AuthenticationService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app.routing.module';\nimport { AppComponent } from './app.component';\nimport { environment } from './../environments/environment';\nimport { AuthenticationModule } from './security/authentication.module';\nimport { Authentication } from './security/authentication';\nimport { AuthenticationService } from './security/authentication.service';\nimport { AuthGuard } from './security/authGuard';\nimport { LayoutComponent } from './layout/layout.component';\nimport { HeaderComponent } from './layout/header.component';\nimport { CenterComponent } from './layout/center.component';\nimport { EmailValidatorDirective } from './validator/emailValidator';\nimport { QuillEditorModule } from 'ngx-quill-editor';\nimport { MatToolbarModule, MatMenuModule } from '@angular/material';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutComponent,\n    HeaderComponent,\n    CenterComponent,\n    EmailValidatorDirective\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    QuillEditorModule,\n    MatToolbarModule,\n    MatMenuModule\n  ],\n  providers: [AuthGuard, Authentication, AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import {Routes, RouterModule} from '@angular/router';\n\nimport {AuthenticationComponent} from './security/authentication.component';\nimport {AuthGuard} from './security/authGuard';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\n\nconst MainRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/readBoard',\n    pathMatch: 'full'\n  },\n  {\n    path: 'readBoard',\n    loadChildren: 'app/readboard/readboard.module#ReadBoardModule'\n  },\n  {\n    path: 'writeboard',\n    loadChildren: 'app/writeboard/writeboard.module#WriteBoardModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'authentication',\n    loadChildren: 'app/security/authentication.module#AuthenticationModule',\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      MainRoutes,\n      {\n        enableTracing: true // \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authGuard.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authentication: Authentication, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authGuard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    authentication\n                                                  \n                                                        \n                                                                    Authentication\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/security/authGuard.ts:14\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        next\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable | Promise | boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Injectable} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Authentication } from '../security/authentication';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(\n        private authentication: Authentication,\n        private router: Router\n      ) {}\n\n      canActivate(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable | Promise | boolean {\n      console.log('AuthGuard ------ ' + this.authentication.isLoggedIn);\n      if (!this.authentication.isLoggedIn) {\n        // redirect the user\n        this.router.navigate(['/authentication']);\n        return false;\n      }\n      return true;\n    }\n  }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Authentication.html":{"url":"injectables/Authentication.html","title":"injectable - Authentication","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  Authentication\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/security/authentication.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/security/authentication.ts:5\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Authentication {\n  username: string;\n  password: string;\n  isLoggedIn: boolean;\n  constructor() {\n        console.info('Auth Constructor ' + this.isLoggedIn);\n  }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationModule.html":{"url":"modules/AuthenticationModule.html","title":"module - AuthenticationModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AuthenticationComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthenticationRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule } from '@angular/material';\nimport { AuthenticationComponent } from './authentication.component';\nimport { AuthenticationService } from './authentication.service';\nimport { Authentication } from './authentication';\nimport { AuthGuard } from './authGuard';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AuthenticationRoutingModule } from './authentication.routing.module';\n\n@NgModule({\n  declarations: [\n    AuthenticationComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    CdkTableModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule\n  ],\n  providers: []\n})\nexport class AuthenticationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthenticationRoutingModule.html":{"url":"modules/AuthenticationRoutingModule.html","title":"module - AuthenticationRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthenticationRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/security/authentication.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { AuthenticationComponent } from './authentication.component';\nimport { NgModule }  from '@angular/core';\n\nconst AuthenticationRoutes: Routes = [\n    \n    {\n        path: '',        \n        component: AuthenticationComponent,\n    }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(AuthenticationRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class AuthenticationRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CenterComponent.html":{"url":"components/CenterComponent.html","title":"component - CenterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CenterComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/center.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-center\n            \n\n\n\n\n            \n                templateUrl\n                center.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/center.component.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ra-center',\n  templateUrl: 'center.component.html'  \n})\n\nexport class CenterComponent implements OnInit {\n\n  ngOnInit() {\n      console.info('Loading Center');\n  }\n\n}\n\n\n    \n\n    \n        \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'CenterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EmailValidatorDirective.html":{"url":"directives/EmailValidatorDirective.html","title":"directive - EmailValidatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EmailValidatorDirective\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n\n    \n        \n            File\n        \n        \n            src/app/validator/emailValidator.ts\n        \n\n\n            \n                Implements\n            \n            \n                        Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        providers\n                        \n                            \n                                { : , : , : true }\n                            \n                        \n                    \n\n                    \n                        selector\n                        [appEmail]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                emailValidator\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        emailValidator\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:20\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidate(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/validator/emailValidator.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     literal type\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, Validator, ValidatorFn, FormGroup } from '@angular/forms';\n\nexport function emailValidator(regexp: RegExp): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } => {\n    const value = control.value;\n    if (value === '') {\n      return null;\n    }\n\n    console.info('VALUE ===== ' + regexp.test(value))\n    return !regexp.test(value) ? { 'patternInvalid': { regexp } } : null;\n  };\n}\n@Directive({\n  selector: '[appEmail]',\n  providers: [{provide: NG_VALIDATORS, useExisting: EmailValidatorDirective, multi: true}]\n})\nexport class EmailValidatorDirective implements Validator {\n  @Input() emailValidator: string;\n\n  validate(control: AbstractControl): {[key: string]: any} {\n    return this.emailValidator ? emailValidator(new RegExp(this.emailValidator, 'i'))(control)\n      : null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LayoutComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/layout/layout.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ra-layout\n            \n\n\n\n            \n                template\n                Loading..Loading...\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/layout/layout.component.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'ra-layout',\n  template: 'Loading..Loading...'\n})\n\nexport class LayoutComponent implements OnInit {\n\n  ngOnInit() {\n      console.info('Loading Layout');\n  }\n\n}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Loading..Loading...'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardModule.html":{"url":"modules/ReadBoardModule.html","title":"module - ReadBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ReadBoardComponent\n                            \n                            \n                                StoryBoardComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReadBoardService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ReadBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ReadBoardComponent } from './readboard.component';\nimport { ReadBoardService } from './readboard.service';\nimport { CommonModule } from '@angular/common';\nimport { ReadBoardRoutingModule } from './readboard.routing.module';\nimport { StoryBoardComponent } from './storyboard.component';\n\n@NgModule({\n  declarations: [\n    ReadBoardComponent,\n    StoryBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    ReadBoardRoutingModule\n  ],\n  providers: [ReadBoardService]\n})\nexport class ReadBoardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReadBoardRoutingModule.html":{"url":"modules/ReadBoardRoutingModule.html","title":"module - ReadBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  ReadBoardRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/readboard/readboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { ReadBoardComponent } from './readboard.component';\nimport { StoryBoardComponent } from './storyboard.component';\nimport { NgModule } from '@angular/core';\n\nconst ReadBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: ReadBoardComponent\n  },\n  {\n    path: ':storyId',\n    component: StoryBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(ReadBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class ReadBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReadBoardService.html":{"url":"injectables/ReadBoardService.html","title":"injectable - ReadBoardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ReadBoardService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/readboard/readboard.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _storyListUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAppPath\n                            \n                            \n                                getStories\n                            \n                            \n                                getStory\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Private\n                                handleStoryDetailError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/readboard.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getAppPath\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAppPath()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:33\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStories\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStories()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:17\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory(storyID: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:43\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyID\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:26\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleStoryDetailError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleStoryDetailError(error: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:50\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _storyListUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _storyListUrl:     \n\n                    \n                \n                    \n                        \n                            Default value : URLMapper.getURL().storyListURL()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/readboard.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Story} from '../entity/story';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {URLMapper} from '../ServiceURLConfig';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/of';\nimport {Observable} from 'rxjs/Observable';\n@Injectable()\nexport class ReadBoardService {\n  constructor(private http: HttpClient) {\n  }\n\n  private _storyListUrl = URLMapper.getURL().storyListURL();\n\n  getStories() {\n    console.log(this._storyListUrl);\n    const httpHeader = new Headers();\n\n    return this.http.get(this._storyListUrl)\n      .do(data => console.log(data))\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n\n  private getAppPath() {\n    console.log('HOST :' + location.origin);\n    const pathArray = location.href.split('/');\n    let appPath = '/';\n    for (let i = 1; i (storyUrl)\n      .do(data => console.log(data))\n      .catch(this.handleStoryDetailError);\n  }\n\n  private handleStoryDetailError(error: Response) {\n    // in a real world app, we may send the error to some remote logging infrastructure\n    // instead of just logging it to the console\n    console.error(error);\n    return Observable.throw(error || 'Server error');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RestEndPointURL.html":{"url":"classes/RestEndPointURL.html","title":"class - RestEndPointURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RestEndPointURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:42\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:43\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:44\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServiceURL.html":{"url":"interfaces/ServiceURL.html","title":"interface - ServiceURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ServiceURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loginURL\n                                \n                                \n                                    storyListURL\n                                \n                                \n                                    storyURL\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:19\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:20\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoryURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:21\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Story.html":{"url":"interfaces/Story.html","title":"interface - Story","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Story\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/entity/story.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        authorName\n                                \n                                \n                                        content\n                                \n                                \n                                        createdDate\n                                \n                                \n                                        disLikes\n                                \n                                \n                                        likes\n                                \n                                \n                                        modifiedDate\n                                \n                                \n                                        storyId\n                                \n                                \n                                        storyShortDescription\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        authorName\n                                    \n                                \n                                \n                                    \n                                        authorName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:7\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:10\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdDate\n                                    \n                                \n                                \n                                    \n                                        createdDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:5\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disLikes\n                                    \n                                \n                                \n                                    \n                                        disLikes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:9\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes\n                                    \n                                \n                                \n                                    \n                                        likes:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:8\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modifiedDate\n                                    \n                                \n                                \n                                    \n                                        modifiedDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:6\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyId\n                                    \n                                \n                                \n                                    \n                                        storyId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storyShortDescription\n                                    \n                                \n                                \n                                    \n                                        storyShortDescription:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:4\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n                                    \n                                        \n                                            Defined in src/app/entity/story.ts:3\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Story {\n  storyId: number;\n  title: string;\n  storyShortDescription: string;\n  createdDate: string;\n  modifiedDate: string;\n  authorName: string;\n  likes: number;\n  disLikes: number;\n  content: string;\n}\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoryBoardComponent.html":{"url":"components/StoryBoardComponent.html","title":"component - StoryBoardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  StoryBoardComponent\n\n\n\n    \n        Info\n    \n\n    \n        Source\n    \n\n    \n        Template\n    \n    \n        DOM Tree\n    \n\n\n\n    \n    File\n\n\n    src/app/readboard/storyboard.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            ReadBoardService\n                \n            \n\n\n\n\n\n\n            \n                templateUrl\n                storyboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                story\n                            \n                            \n                                storyId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getStory\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(activatedRoute: ActivatedRoute, _readBoardService: ReadBoardService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    _readBoardService\n                                                  \n                                                        \n                                                                    ReadBoardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                    router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStory\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:27\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:22\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            story\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        story:     Story\n\n                    \n                \n                    \n                        \n                            Type :     Story\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storyId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storyId:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/readboard/storyboard.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Story } from '../entity/story';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router';\nimport {ReadBoardService} from './readboard.service';\n\n\n@Component({\n  templateUrl: 'storyboard.component.html',\n  providers: [ReadBoardService]\n})\nexport class StoryBoardComponent implements OnInit {\n  storyId: number;\n  story: Story;\n  errorMessage: string;\n\n  constructor(private activatedRoute: ActivatedRoute, private _readBoardService: ReadBoardService, private router: Router) {\n    console.log('Query Params === ' + JSON.stringify(activatedRoute.snapshot.params));\n    this.storyId = activatedRoute.snapshot.params['storyId'];\n  }\n\n  ngOnInit() {\n    console.info('Loading StoryBoard');\n    this.getStory();\n  }\n\n  getStory() {\n    console.info('Loading getStory ' + this.storyId);\n    this._readBoardService.getStory(this.storyId).subscribe(\n      story => this.story = story,\n      error => this.errorMessage = error);\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'read-adda'},{'name': 'AuthenticationComponent', 'selector': 'authentication'},{'name': 'CenterComponent', 'selector': 'ra-center'},{'name': 'HeaderComponent', 'selector': 'ra-header'},{'name': 'LayoutComponent', 'selector': 'ra-layout'},{'name': 'ReadBoardComponent', 'selector': 'readboard'},{'name': 'StoryBoardComponent', 'selector': ''},{'name': 'WriteBoardComponent', 'selector': 'writeboard'}];\n    var DIRECTIVES = [{'name': 'EmailValidatorDirective', 'selector': '[appEmail]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoryBoardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestURL.html":{"url":"classes/TestURL.html","title":"class - TestURL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestURL\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ServiceURL\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loginURL\n                            \n                            \n                                    Public\n                                storyListURL\n                            \n                            \n                                    Public\n                                storyURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loginURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:25\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyListURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyListURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:30\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storyURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        storyURL(storyId: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:35\n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storyId\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/URLMapper.html":{"url":"classes/URLMapper.html","title":"class - URLMapper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  URLMapper\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ServiceURLConfig.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Private\n                                instance\n                            \n                            \n                                    Private\n                                serviceURL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Private\n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     URLMapper\n\n                    \n                \n                    \n                        \n                            Type :     URLMapper\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            serviceURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceURL:     ServiceURL\n\n                    \n                \n                    \n                        \n                            Type :     ServiceURL\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            getURL\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getURL()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/ServiceURLConfig.ts:10\n                            \n                        \n\n                \n                    \n\n                            \n                                Returns :     ServiceURL\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class URLMapper {\n    private static instance: URLMapper;\n    private serviceURL: ServiceURL;\n\n    constructor() {\n        this.serviceURL = new TestURL();\n        // this.serviceURL = new RestEndPointURL();\n    }\n\n    public static getURL(): ServiceURL {\n        if (this.instance == null) {\n            this.instance = new URLMapper();\n        }\n        return this.instance.serviceURL;\n    }\n}\n\nexport interface ServiceURL {\n    loginURL();\n    storyListURL();\n    storyURL(storyId);\n}\n\nexport class TestURL implements ServiceURL {\n  public loginURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'http://taleaddaapi.herokuapp.com/taleadda/authenticate';\n  }\n\n  public storyListURL() {\n    console.log('------------------' + location.origin + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/stories';\n  }\n\n  public storyURL(storyId) {\n    console.log('------------------Return Story URL : ' + storyId + '--------------------');\n    return 'https://taleaddaapi.herokuapp.com/taleadda/story/' + storyId;\n  }\n}\n\nexport class RestEndPointURL implements ServiceURL {\n    public loginURL() {  } // Not Implemented!\n    public storyListURL() {  } // Not Implemented!\n    public storyURL(storyId) {  } // Not Implemented!\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardModule.html":{"url":"modules/WriteBoardModule.html","title":"module - WriteBoardModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WriteBoardComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    WriteBoardRoutingModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {WriteBoardComponent} from './writeboard.component';\nimport {CommonModule} from '@angular/common';\nimport {WriteBoardRoutingModule} from './writeboard.routing.module';\nimport {FormsModule} from '@angular/forms';\nimport { QuillEditorModule } from 'ngx-quill-editor';\n\n@NgModule({\n  declarations: [\n    WriteBoardComponent\n  ],\n  imports: [\n    CommonModule,\n    WriteBoardRoutingModule,\n    QuillEditorModule,\n    FormsModule\n  ],\n  providers: []\n})\nexport class WriteBoardModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WriteBoardRoutingModule.html":{"url":"modules/WriteBoardRoutingModule.html","title":"module - WriteBoardRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  WriteBoardRoutingModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/writeboard/writeboard.routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { Routes, RouterModule } from '@angular/router';\nimport { WriteBoardComponent } from './writeboard.component';\nimport { NgModule } from '@angular/core';\n\nconst WriteBoardRoutes: Routes = [\n\n  {\n    path: '',\n    component: WriteBoardComponent\n  }\n];\n\n@NgModule({\n    imports: [\n      RouterModule.forChild(WriteBoardRoutes)\n    ],\n    exports: [\n      RouterModule\n    ]\n  })\nexport class WriteBoardRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                RestEndPointURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                TestURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                class\n            \n            \n                URLMapper\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/ServiceURLConfig.ts\n            \n            \n                interface\n            \n            \n                ServiceURL\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/entity/story.ts\n            \n            \n                interface\n            \n            \n                Story\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    src/app/layout/center.component.ts\n            \n            \n                component\n            \n            \n                CenterComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/layout/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                    src/app/layout/layout.component.ts\n            \n            \n                component\n            \n            \n                LayoutComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.component.ts\n            \n            \n                component\n            \n            \n                ReadBoardComponent\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                    src/app/readboard/readboard.service.ts\n            \n            \n                injectable\n            \n            \n                ReadBoardService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    src/app/readboard/storyboard.component.ts\n            \n            \n                component\n            \n            \n                StoryBoardComponent\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/security/authGuard.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.component.ts\n            \n            \n                component\n            \n            \n                AuthenticationComponent\n            \n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                function\n            \n            \n                isLoggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.service.ts\n            \n            \n                variable\n            \n            \n                loggedIn\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/security/authentication.ts\n            \n            \n                injectable\n            \n            \n                Authentication\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                directive\n            \n            \n                EmailValidatorDirective\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/validator/emailValidator.ts\n            \n            \n                function\n            \n            \n                emailValidator\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/validator/regexPattern.ts\n            \n            \n                variable\n            \n            \n                regexPattern\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/writeboard/writeboard.component.ts\n            \n            \n                component\n            \n            \n                WriteBoardComponent\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^5.2.10\n        \n            @angular/cdk : ^5.2.0\n        \n            @angular/cli : 1.6.8\n        \n            @angular/common : ^5.2.0\n        \n            @angular/compiler : ^5.2.0\n        \n            @angular/compiler-cli : ^5.2.0\n        \n            @angular/core : ^5.2.0\n        \n            @angular/forms : ^5.2.0\n        \n            @angular/http : ^5.2.0\n        \n            @angular/language-service : ^5.2.0\n        \n            @angular/material : ^5.2.0\n        \n            @angular/platform-browser : ^5.2.0\n        \n            @angular/platform-browser-dynamic : ^5.2.0\n        \n            @angular/router : ^5.2.0\n        \n            @compodoc/compodoc : ^1.1.2\n        \n            bootstrap : ^4.0.0\n        \n            core-js : ^2.4.1\n        \n            express : ^4.16.3\n        \n            hammerjs : ^2.0.8\n        \n            ngx-quill-editor : ^2.2.2\n        \n            popper : ^1.0.1\n        \n            rxjs : ^5.5.6\n        \n            typescript : ~2.5.3\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            emailValidator   (src/.../emailValidator.ts)\n                        \n                        \n                            isLoggedIn   (src/.../authentication.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/validator/emailValidator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nemailValidator(regexp: undefined)\n                    \n                \n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        regexp\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLoggedIn()\n                    \n                \n\n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReadadda\nThis project was generated with Angular CLI version 1.6.8.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthenticationRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReadBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WriteBoardRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthenticationModule\n\n\n\ncluster_AuthenticationModule_declarations\n\n\n\ncluster_AuthenticationModule_imports\n\n\n\ncluster_ReadBoardModule\n\n\n\ncluster_ReadBoardModule_declarations\n\n\n\ncluster_ReadBoardModule_ReadBoardComponent_providers\n\n\n\ncluster_ReadBoardModule_imports\n\n\n\ncluster_WriteBoardModule\n\n\n\ncluster_WriteBoardModule_declarations\n\n\n\ncluster_WriteBoardModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nAppModule -->\n\nLayoutComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nCenterComponent\n\nCenterComponent\n\nAppModule -->\n\nCenterComponent->AppModule\n\n\n\n\n\nEmailValidatorDirective\n\nEmailValidatorDirective\n\nAppModule -->\n\nEmailValidatorDirective->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAppModule -->\n\nAuthGuard->AppModule\n\n\n\n\n\nAuthentication\n\nAuthentication\n\nAppModule -->\n\nAuthentication->AppModule\n\n\n\n\n\nAuthenticationService\n\nAuthenticationService\n\nAppModule -->\n\nAuthenticationService->AppModule\n\n\n\n\n\nAuthenticationComponent\n\nAuthenticationComponent\n\n\n\nAuthenticationModule\n\nAuthenticationModule\n\nAuthenticationModule -->\n\nAuthenticationComponent->AuthenticationModule\n\n\n\n\n\nAuthenticationRoutingModule\n\nAuthenticationRoutingModule\n\nAuthenticationModule -->\n\nAuthenticationRoutingModule->AuthenticationModule\n\n\n\n\n\nReadBoardComponent\n\nReadBoardComponent\n\n\n\nReadBoardModule\n\nReadBoardModule\n\nReadBoardModule -->\n\nReadBoardComponent->ReadBoardModule\n\n\n\n\n\nStoryBoardComponent\n\nStoryBoardComponent\n\nReadBoardModule -->\n\nStoryBoardComponent->ReadBoardModule\n\n\n\n\n\nReadBoardService\n\nReadBoardService\n\nReadBoardComponent -->\n\nReadBoardService->ReadBoardComponent\n\n\n\nReadBoardModule -->\n\nReadBoardService->ReadBoardModule\n\n\n\n\n\nReadBoardRoutingModule\n\nReadBoardRoutingModule\n\nReadBoardModule -->\n\nReadBoardRoutingModule->ReadBoardModule\n\n\n\n\n\nWriteBoardComponent\n\nWriteBoardComponent\n\n\n\nWriteBoardModule\n\nWriteBoardModule\n\nWriteBoardModule -->\n\nWriteBoardComponent->WriteBoardModule\n\n\n\n\n\nWriteBoardRoutingModule\n\nWriteBoardRoutingModule\n\nWriteBoardModule -->\n\nWriteBoardRoutingModule->WriteBoardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            8 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        8 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            12 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            loggedIn   (src/.../authentication.service.ts)\n                        \n                        \n                            regexPattern   (src/.../regexPattern.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/security/authentication.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggedIn:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n\n\n            \n        \n\n    src/app/validator/regexPattern.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            regexPattern\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        regexPattern:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {email: new RegExp('(?:[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&\\'*+/=?^_`{|}~-]+)*|\"' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")' +\n    '@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.)' +\n    '{3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:' +\n    '(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\\\])')}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
